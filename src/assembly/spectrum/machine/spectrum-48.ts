// ============================================================================
// Engine functions for the ZX Spectrum 48 model type
// ============================================================================
import {
  CpuConfiguration,
  MemoryConfiguration,
  MemoryContentionType,
  ScreenConfiguration,
} from "./configuration";
import { SpectrumEngine } from "./SpectrumEngine";
import { ScreenRenderingPhase, RenderingTact } from "../screen/rendering";
import { Z80StateFlags } from "../../../shared/cpu-enums";
import { SpectrumKeyCode } from "../../../shared/SpectrumKeyCode";
import { BinaryWriter } from "../../utils/BinaryWriter";
import { BinaryReader } from "../../utils/BinaryReader";

// ============================================================================
// ZX Spectrum instance
let spectrum: SpectrumEngine;

// ============================================================================
// Serialization

/**
 * Serializes the current state of the machine
 */
export function sp48SerializeMachineState(w: BinaryWriter): void {
  serializeInterruptState(w);
  serializeKeyboardState(w);
  serializeScreenState(w);
  serializePortState(w);
  serializeMemoryState(w);
  serializeBeeperState(w);
}

/**
 * Restores the machine state from the specified binary stream
 */
export function sp48RestoreMachineState(r: BinaryReader): void {
  restoreInterruptState(r);
  restoreKeyboardState(r);
  restoreScreenState(r);
  restorePortState(r);
  restoreMemoryState(r);
  restoreBeeperState(r);
}

// ============================================================================
// Machine configuration

/**
 * Sets the ZX Spectrum 48 engine instance
 * @param engine Engine instance
 */
export function sp48SetInstance(engine: SpectrumEngine): void {
  spectrum = engine;
}

/**
 * Configuration of the Z80 CPU
 */
export function sp48GetCpuConfiguration(): CpuConfiguration {
  return {
    baseClockFrequency: 3_500_000,
    clockMultiplier: 1,
    supportsNextOperations: false,
  };
}

/**
 * Configuration of the ROMs
 */
export function sp48GetMemoryConfiguration(): MemoryConfiguration {
  return {
    romContents: ZX_SPECTRUM_48_ROM,
    spectrum48RomIndex: 0,
    ramBanks: 0,
    contentionType: MemoryContentionType.Ula,
    nextMemorySize: 0,
  };
}

/**
 * Configuration of the screen
 */
export function sp48GetScreenConfiguration(): ScreenConfiguration {
  return {
    interruptTact: 14,
    verticalSyncLines: 8,
    nonVisibleBorderTopLines: 7,
    borderTopLines: 48,
    borderBottomLines: 48,
    nonVisibleBorderBottomLines: 8,
    displayLines: 192,
    borderLeftTime: 24,
    borderRightTime: 24,
    displayLineTime: 128,
    horizontalBlankingTime: 40,
    nonVisibleBorderRightTime: 12,
    pixelDataPrefetchTime: 2,
    attributeDataPrefetchTime: 1,
  };
}

/**
 * Gets a known address of a particular ROM
 * @param key Known address key
 * @param romIndex Index of the ROM, by default, 0
 * @returns Address, if found; otherwise, -1
 */
export function sp48GetKnownRomAddress(key: string, romIndex: u8): i32 {
  if (key === "$LoadBytesInvalidHeaderAddress") return 0x05b6;
  if (key === "$MainExecAddress") return 0x12ac;
  if (key === "$SaveBytesRoutineAddress") return 0x04c2;
  if (key === "$LoadBytesRoutineAddress") return 0x056c;
  if (key === "$LoadBytesResumeAddress") return 0x05e2;
  if (key === "$TokenTableAddress") return 0x0095;
  if (key === "$TokenCount") return 91;
  if (key === "$TokenOffset") return 0x00a5;
  return -1;
}

// ============================================================================
// Memory device

// --- Memory state
const memory: StaticArray<u8> = StaticArray.fromArray(new Array<u8>(0x10000));

/**
 * Serializes the memory state
 * @param w Binary stream writer
 */
function serializeMemoryState(w: BinaryWriter): void {
  w.writeBytes(memory);
}

/**
 * Restores the memory state
 * @param r Binary stream reader
 */
function restoreMemoryState(r: BinaryReader): void {
  const tmp = r.readBytes();
  let length = memory.length;
  if (tmp.length < length) {
    length = tmp.length;
  }
  for (let i = 0; i < length; i++) {
    memory[i] = tmp[i];
  }
}

/**
 * Resets the memory to the state when the machine is turned on.
 */
export function sp48ResetMemoryDevice(): void {
  for (let i = 0; i < ZX_SPECTRUM_48_ROM.length; i++) {
    memory[i] = ZX_SPECTRUM_48_ROM[i];
  }
  for (let i = ZX_SPECTRUM_48_ROM.length; i < memory.length; i++) {
    memory[i] = 0x00;
  }
}

/**
 * Reads the memory at the specified address
 * @param addr Memory address
 * @param supressContention Should memory contention suppressed?
 * @returns Memory contents
 */
export function sp48Read(addr: u16, supressContention: bool = false): u8 {
  const value = memory[addr];
  if (supressContention) {
    return value;
  }
  contentionWait(addr);
  return value;
}

/**
 * Sets the memory value at the specified address
 * @param addr Memory address
 * @param value Value to write
 * @param supressContention Should memory contention suppressed?
 */
export function sp48Write(
  addr: u16,
  value: u8,
  supressContention: bool = false
): void {
  switch (addr & 0xc000) {
    case 0x0000:
      // --- ROM cannot be overwritten
      return;
    case 0x4000:
      if (!supressContention) {
        contentionWait(addr);
      }
      break;
  }
  memory[addr] = value;
}

/**
 * Emulates memory contention
 * @param addr Memory address
 */
function contentionWait(addr: u16): void {
  // TODO: Implement this method
}

/**
 * Gets the buffer that holds memory data
 */
export function sp48CloneMemory(): u8[] {
  const clone = new Array<u8>(memory.length);
  for (let i = 0; i < memory.length; i++) {
    clone[i] = memory[i];
  }
  return clone;
}

/**
 * Gets the data for the specfied RAM bank
 * @param bankIndex Bank index
 * @param bank16Mode Do we use 16K mode?
 */
export function sp48GetRamBank(bankIndex: u8, bank16Mode: bool = true): u8[] {
  const ram = new Array<u8>(0x4000);
  for (let i = 0; i < 0xc000; i++) {
    ram[i] = memory[i + 0x4000];
  }
  return ram;
}

// ============================================================================
// Port device

// --- Port device state
let portBit3LastValue: bool = false;
let portBit4LastValue: bool = false;
let portBit4ChangedFrom0L: u32 = 0;
let portBit4ChangedFrom0H: u32 = 0;
let portBit4ChangedFrom1L: u32 = 0;
let portBit4ChangedFrom1H: u32 = 0;

/**
 * Serializes the port device state
 * @param w Binary stream writer
 */
function serializePortState(w: BinaryWriter): void {
  w.writeByte(portBit3LastValue ? 1 : 0);
  w.writeByte(portBit4LastValue ? 1 : 0);
  w.writeUint32(portBit4ChangedFrom0L);
  w.writeUint32(portBit4ChangedFrom0H);
  w.writeUint32(portBit4ChangedFrom1L);
  w.writeUint32(portBit4ChangedFrom1H);
}

/**
 * Restores port device state
 * @param r Binary stream reader
 */
function restorePortState(r: BinaryReader): void {
  portBit3LastValue = r.readByte() !== 0;
  portBit4LastValue = r.readByte() !== 0;
  portBit4ChangedFrom0L = r.readUint32();
  portBit4ChangedFrom0H = r.readUint32();
  portBit4ChangedFrom1L = r.readUint32();
  portBit4ChangedFrom1H = r.readUint32();
}

/**
 * Resets the port device
 */
export function sp48ResetPortDevice(): void {
  portBit3LastValue = false;
  portBit4LastValue = false;
  portBit4ChangedFrom0L = 0;
  portBit4ChangedFrom0H = 0;
  portBit4ChangedFrom1L = 0;
  portBit4ChangedFrom1H = 0;
}

/**
 * Reads the port with the specified address
 * @param addr Port address
 * @returns Port value
 */
export function sp48ReadPort(addr: u16): u8 {
  // --- I/O is contended
  ioContentionWait(addr);

  if ((addr & 0x0001) === 0) {
    // --- Handle the port value
    let readValue = spectrum.getKeyLineStatus(<u8>(addr >> 8));
    if (spectrum.isInLoadMode()) {
      const earBit = spectrum.getEarBit(
        spectrum.cpu.frameCount,
        spectrum.cpu.frameTacts
      );
      if (!earBit) {
        readValue = readValue & 0b1011_1111;
      }
    } else {
      let bit4Sensed = portBit4LastValue;
      if (!bit4Sensed) {
        if (
          portBit4ChangedFrom1H >= portBit4ChangedFrom0H &&
          portBit4ChangedFrom1L > portBit4ChangedFrom0L
        ) {
          let chargeTime =
            (((portBit4ChangedFrom1H - portBit4ChangedFrom0H) & 0x0f) << 24) |
            ((portBit4ChangedFrom1L - portBit4ChangedFrom0L) & 0x0ffffff);
          let delay = chargeTime > 700 ? 2800 : chargeTime * 4;
          if (spectrum.cpu.frameCount <= portBit4ChangedFrom1H + 1) {
            bit4Sensed =
              <i32>(
                ((((portBit4ChangedFrom1H - portBit4ChangedFrom0H) & 0x0f) <<
                  24) |
                  ((portBit4ChangedFrom1L - portBit4ChangedFrom0L) & 0x0ffffff))
              ) < delay;
          }
        }
      }
      var bit6Value = <u8>(
        (portBit3LastValue || bit4Sensed ? 0b0100_0000 : 0x00)
      );
      if (portBit3LastValue && !bit4Sensed && spectrum.ulaIssue === 3) {
        bit6Value = 0x00;
      }
      readValue = (readValue & 0b1011_1111) | bit6Value;
    }
    return readValue;
  }

  // --- Handle an unattached port
  const tactTable = spectrum.getRenderingTactTable();
  const tact = spectrum.currentFrameTact % tactTable.length;
  const rt = tactTable[tact];
  let memAddr: u16 = 0;
  switch (rt.phase) {
    case ScreenRenderingPhase.BorderFetchPixel:
    case ScreenRenderingPhase.DisplayB1FetchB2:
    case ScreenRenderingPhase.DisplayB2FetchB1:
      memAddr = rt.pixelByteToFetchAddress;
      break;
    case ScreenRenderingPhase.BorderFetchPixelAttr:
    case ScreenRenderingPhase.DisplayB1FetchA2:
    case ScreenRenderingPhase.DisplayB2FetchA1:
      memAddr = rt.attributeToFetchAddress;
      break;
  }

  return memAddr === 0 ? 0xff : spectrum.read(memAddr, true);
}

/**
 * Sends a byte to the port with the specified address
 * @param addr Port address
 * @param data Data to write to the port
 */
export function sp48WritePort(addr: u16, value: u8): void {
  ioContentionWait(addr);

  if ((addr & 0x0001) !== 0) {
    // --- Unhandled port
    return;
  }

  spectrum.setBorderColor(value & 0x07);
  spectrum.processEarBitValue(false, (value & 0x10) !== 0);
  spectrum.processMicBit((value & 0x08) !== 0);

  // --- Set the lates value of bit 3
  portBit3LastValue = (value & 0x08) !== 0;

  // --- Manage bit 4 value
  const curBit4 = (value & 0x10) !== 0;
  if (!portBit4LastValue && curBit4) {
    // --- Bit 4 goes from 0 to 1
    portBit4ChangedFrom0L = spectrum.cpu.frameTacts;
    portBit4ChangedFrom0H = spectrum.cpu.frameCount;
    portBit4LastValue = true;
  } else if (portBit4LastValue && !curBit4) {
    portBit4ChangedFrom1L = spectrum.cpu.frameTacts;
    portBit4ChangedFrom1H = spectrum.cpu.frameCount;
    portBit4LastValue = false;
  }
}

/**
 * Emulates the I/O contention wait
 * @param addr Port address
 */
function ioContentionWait(addr: u16): void {
  var lowBit = (addr & 0x0001) !== 0;
  const cpu = spectrum.cpu;
  if (
    (addr & 0xc000) === 0x4000 ||
    ((addr & 0xc000) === 0xc000 && spectrum.isContendedBankPagedIn())
  ) {
    if (lowBit) {
      // --- C:1 x 4 contention scheme
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(1);
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(1);
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(1);
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(1);
    } else {
      // --- C:1, C:3 contention scheme
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(1);
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(3);
    }
  } else {
    if (lowBit) {
      // --- N:4 contention scheme
      cpu.delay(4);
    } else {
      // --- N:1, C:3 contention scheme
      cpu.delay(1);
      cpu.delay(spectrum.getContentionValue(spectrum.currentFrameTact));
      cpu.delay(3);
    }
  }
}

// ==========================================================================
// Interrupt device

// --- Interrupt device state
let interruptRaised: bool = false;
let interruptRevoked: bool = false;

/**
 * Serializes the interrupt device state
 * @param w Binary stream writer
 */
function serializeInterruptState(w: BinaryWriter): void {
  w.writeByte(interruptRaised ? 1 : 0);
  w.writeByte(interruptRevoked ? 1 : 0);
}

/**
 * Restores the interrupt device state
 * @param r Binary stream reader
 */
function restoreInterruptState(r: BinaryReader): void {
  interruptRaised = r.readByte() !== 0;
  interruptRevoked = r.readByte() !== 0;
}
/**
 * Represents the longest instruction tact count
 */
const LONGEST_OP_TACTS = 23;

/**
 * Resets the interupt device
 */
export function sp48ResetInterruptDevice(): void {
  interruptRaised = false;
  interruptRevoked = false;
}

/**
 * Starts a new interrupt frame
 */
export function sp48StartNewInterruptFrame(): void {
  interruptRaised = false;
  interruptRevoked = false;
}

/**
 * Signs that an interrupt has been raised in this frame.
 */
export function sp48IsInterruptRaised(): bool {
  return interruptRaised;
}

/**
 * Signs that the interrupt signal has been revoked
 */
export function sp48IsInterruptRevoked(): bool {
  return interruptRevoked;
}

/**
 * Generates an interrupt in the current phase, if time has come.
 * @param currentTact Current frame tact
 */
export function sp48CheckForInterrupt(currentTact: u32): void {
  const interruptTact = spectrum.screenConfiguration.interruptTact;
  if (interruptRevoked) {
    // --- We fully handled the interrupt in this frame
    return;
  }

  if (currentTact < interruptTact) {
    // --- The interrupt should not be raised yet
    return;
  }

  if (currentTact > interruptTact + LONGEST_OP_TACTS) {
    // --- Let's revoke the INT signal independently whether the CPU
    // --- caught it or not
    interruptRevoked = true;
    spectrum.cpu.stateFlags &= Z80StateFlags.InvInt;
    return;
  }

  if (interruptRaised) {
    // --- The interrupt is raised, not revoked, but the CPU has not handled it yet
    return;
  }

  // --- Do not raise the interrupt when the CPU blocks it
  if (spectrum.cpu.isInterruptBlocked) {
    return;
  }

  // --- It's time to raise the interrupt
  interruptRaised = true;
  spectrum.cpu.stateFlags |= Z80StateFlags.Int;
}

// ============================================================================
// Screen device

// --- Screen device state
let screenBorderColor: u8;
let screenFlashPhase: bool;
let screenPixelByte1: u8;
let screenPixelByte2: u8;
let screenAttrByte1: u8;
let screenAttrByte2: u8;
let screenFlashToggleFrames: u16;
let screenPixelBuffer: StaticArray<u8>;

// --- Screen device helper variables that do not change after reset
let screenRenderingTactTable: RenderingTact[];
let screenFlashOffColors: u8[];
let screenFlashOnColors: u8[];

/**
 * Serializes screen device state
 * @param w Binary stream writer
 */
function serializeScreenState(w: BinaryWriter): void {
  w.writeByte(screenBorderColor);
  w.writeByte(screenFlashPhase ? 1 : 0);
  w.writeByte(screenPixelByte1);
  w.writeByte(screenPixelByte2);
  w.writeByte(screenAttrByte1);
  w.writeByte(screenAttrByte2);
  w.writeUint16(screenFlashToggleFrames);
  w.writeBytes(screenPixelBuffer);
}

/**
 * Restrores screen device state
 * @param r Binary stream reader
 */
function restoreScreenState(r: BinaryReader): void {
  screenBorderColor = r.readByte();
  screenFlashPhase = r.readByte() != 0;
  screenPixelByte1 = r.readByte();
  screenPixelByte2 = r.readByte();
  screenAttrByte1 = r.readByte();
  screenAttrByte2 = r.readByte();
  screenFlashToggleFrames = r.readUint16();
  const tmp = r.readBytes();
  let length = screenPixelBuffer.length;
  if (tmp.length < length) {
    length = tmp.length;
  }
  for (let i = 0; i < length; i++) {
    screenPixelBuffer[i] = tmp[i];
  }
}

/**
 * The ARGB color set for Spectrum 48 pixel values
 */
export const SpectrumColors = [
  0xff000000, // Black
  0xffaa0000, // Blue
  0xff0000aa, // Red
  0xffaa00aa, // Magenta
  0xff00aa00, // Green
  0xffaaaa00, // Cyan
  0xff00aaaa, // Yellow
  0xffaaaaaa, // White
  0xff000000, // Bright Black
  0xffff0000, // Bright Blue
  0xff0000ff, // Bright Red
  0xffff00ff, // Bright Magenta
  0xff00ff00, // Bright Green
  0xffffff00, // Bright Cyan
  0xff00ffff, // Bright Yellow
  0xffffffff, // Bright White
];

/**
 * Resets the screen device
 */
export function sp48ResetScreenDevice(): void {
  // --- Obtain configuration
  const screenConfiguration = spectrum.screenConfiguration;
  screenFlashPhase = false;

  // --- Calculate refresh rate related values
  const refreshRate =
    spectrum.baseClockFrequency /
    screenConfiguration.screenRenderingFrameTactCount;
  screenFlashToggleFrames = <u16>Math.round(refreshRate / 2);

  // --- Calculate color conversion table
  screenFlashOffColors = new Array<u8>(0x100);
  screenFlashOnColors = new Array<u8>(0x100);
  for (let attr = 0; attr < 0x100; attr++) {
    const ink = (attr & 0x07) | ((attr & 0x40) >> 3);
    const paper = ((attr & 0x38) >> 3) | ((attr & 0x40) >> 3);
    screenFlashOffColors[attr] = <u8>paper;
    screenFlashOffColors[0x100 + attr] = <u8>ink;
    screenFlashOnColors[attr] = <u8>((attr & 0x80) !== 0 ? ink : paper);
    screenFlashOnColors[0x100 + attr] = <u8>((attr & 0x80) !== 0 ? paper : ink);
  }

  // --- Prepare the pixel buffer
  screenPixelBuffer = StaticArray.fromArray(new Array<u8>(screenConfiguration.screenWidth * screenConfiguration.screenLines));

  // --- Initialize the rendering tact table
  // --- Reset the tact information table
  const frameTactCount = screenConfiguration.screenRenderingFrameTactCount;
  screenRenderingTactTable = new Array<RenderingTact>(frameTactCount);

  const memConfig = spectrum.getMemoryConfiguration();
  const contentionType = memConfig.contentionType;

  // // --- Iterate through tacts
  for (let tact = 0; tact < <i32>frameTactCount; tact++) {
    // --- calculate screen line and tact in line values here
    const line = <u16>Math.floor(tact / screenConfiguration.screenLineTime);
    var tactInLine = <u16>(tact % screenConfiguration.screenLineTime);

    // --- Default tact description
    let tactPhase: ScreenRenderingPhase = ScreenRenderingPhase.None;
    let tactDelay: u32 = 0;
    let tactPixelAddr: u16 = 0;
    let tactAttrAddr: u16 = 0;
    let tactPixelIndex: u32 = 0;

    if (screenConfiguration.isTactVisible(line, tactInLine)) {
      // --- Calculate the pixel positions of the area
      const xPos = (tactInLine * 2) & 0xffff;
      const yPos = <u16>(
        (line -
          screenConfiguration.verticalSyncLines -
          screenConfiguration.nonVisibleBorderTopLines)
      );
      tactPixelIndex = yPos * screenConfiguration.screenWidth + xPos;

      // --- The current tact is in a visible screen area (border or display area)
      if (!screenConfiguration.isTactInDisplayArea(line, tactInLine)) {
        // --- Set the current border color
        tactPhase = ScreenRenderingPhase.Border;
        if (
          line >= screenConfiguration.firstDisplayLine &&
          line <= screenConfiguration.lastDisplayLine
        ) {
          // --- Left or right border area beside the display area
          if (
            tactInLine ===
            screenConfiguration.borderLeftTime -
              screenConfiguration.pixelDataPrefetchTime
          ) {
            // --- Fetch the first pixel data byte of the current line (2 tacts away)
            tactPhase = ScreenRenderingPhase.BorderFetchPixel;
            tactPixelAddr = calculatePixelByteAddress(line, tactInLine + 2);
            tactDelay = contentionType === MemoryContentionType.Ula ? 0 : 2;
          } else if (
            tactInLine ===
            screenConfiguration.borderLeftTime -
              screenConfiguration.attributeDataPrefetchTime
          ) {
            // --- Fetch the first attribute data byte of the current line (1 tact away)
            tactPhase = ScreenRenderingPhase.BorderFetchPixelAttr;
            tactAttrAddr = calculateAttributeAddress(line, tactInLine + 1);
            tactDelay = contentionType === MemoryContentionType.Ula ? 6 : 1;
          }
        }
      } else {
        // --- According to the tact, the screen rendering involves separate actions
        const pixelTact = tactInLine - screenConfiguration.borderLeftTime;
        switch (pixelTact & 7) {
          case 0:
            // --- While displaying the current tact pixels, we need to prefetch the
            // --- pixel data byte 4 tacts away
            tactPhase = ScreenRenderingPhase.DisplayB1FetchB2;
            tactPixelAddr = calculatePixelByteAddress(line, tactInLine + 4);
            tactDelay = contentionType === MemoryContentionType.Ula ? 5 : 0;
            break;
          case 1:
            // --- While displaying the current tact pixels, we need to prefetch the
            // --- attribute data byte 3 tacts away
            tactPhase = ScreenRenderingPhase.DisplayB1FetchA2;
            tactAttrAddr = calculateAttributeAddress(line, tactInLine + 3);
            tactDelay = contentionType === MemoryContentionType.Ula ? 4 : 7;
            break;
          case 2:
            // --- Display the current tact pixels
            tactPhase = ScreenRenderingPhase.DisplayB1;
            tactDelay = contentionType === MemoryContentionType.Ula ? 3 : 6;
            break;
          case 3:
            // --- Display the current tact pixels
            tactPhase = ScreenRenderingPhase.DisplayB1;
            tactDelay = contentionType === MemoryContentionType.Ula ? 2 : 5;
            break;
          case 4:
            // --- Display the current tact pixels
            tactPhase = ScreenRenderingPhase.DisplayB2;
            tactDelay = contentionType === MemoryContentionType.Ula ? 1 : 4;
            break;
          case 5:
            // --- Display the current tact pixels
            tactPhase = ScreenRenderingPhase.DisplayB2;
            tactDelay = contentionType === MemoryContentionType.Ula ? 0 : 3;
            break;
          case 6:
            if (
              tactInLine <
              screenConfiguration.borderLeftTime +
                screenConfiguration.displayLineTime -
                2
            ) {
              // --- There are still more bytes to display in this line.
              // --- While displaying the current tact pixels, we need to prefetch the
              // --- pixel data byte 2 tacts away
              tactPhase = ScreenRenderingPhase.DisplayB2FetchB1;
              tactPixelAddr = calculatePixelByteAddress(line, tactInLine + 2);
              tactDelay = contentionType === MemoryContentionType.Ula ? 0 : 2;
            } else {
              // --- Last byte in this line.
              // --- Display the current tact pixels
              tactPhase = ScreenRenderingPhase.DisplayB2;
            }
            break;
          case 7:
            if (
              tactInLine <
              screenConfiguration.borderLeftTime +
                screenConfiguration.displayLineTime -
                1
            ) {
              // --- There are still more bytes to display in this line.
              // --- While displaying the current tact pixels, we need to prefetch the
              // --- attribute data byte 1 tacts away
              tactPhase = ScreenRenderingPhase.DisplayB2FetchA1;
              tactAttrAddr = calculateAttributeAddress(line, tactInLine + 1);
              tactDelay = contentionType === MemoryContentionType.Ula ? 6 : 1;
            } else {
              // --- Last byte in this line.
              // --- Display the current tact pixels
              tactPhase = ScreenRenderingPhase.DisplayB2;
            }
            break;
        }
      }
    }

    // --- Calculation is ready, let's store the calculated tact item
    screenRenderingTactTable[tact] = {
      phase: tactPhase,
      contentionDelay: tactDelay,
      pixelByteToFetchAddress: tactPixelAddr,
      attributeToFetchAddress: tactAttrAddr,
      pixelIndex: tactPixelIndex,
    };
  }
}

/**
 * Calculates the pixel address for the specified line and tact within
 * the line
 * @param line Line index
 * @param tactInLine Tact index within the line
 */
function calculatePixelByteAddress(line: u16, tactInLine: u32): u16 {
  const row = line - spectrum.screenConfiguration.firstDisplayLine;
  const column = 2 * (tactInLine - spectrum.screenConfiguration.borderLeftTime);
  const da = 0x4000 | (column >> 3) | (row << 5);
  return <u16>((da & 0xf81f) | // --- Reset V5, V4, V3, V2, V1
  ((da & 0x0700) >> 3) | // --- Keep V5, V4, V3 only
    ((da & 0x00e0) << 3)); // --- Exchange the V2, V1, V0 bit
  // --- group with V5, V4, V3
}

/**
 * Calculates the pixel attribute address for the specified line and
 * tact within the line
 * @param line Line index
 * @param tactInLine Tact index within the line
 */
function calculateAttributeAddress(line: u16, tactInLine: u16): u16 {
  const row = line - spectrum.screenConfiguration.firstDisplayLine;
  const column = 2 * (tactInLine - spectrum.screenConfiguration.borderLeftTime);
  const da = (column >> 3) | ((row >> 3) << 5);
  return <u16>(0x5800 + da);
}

/**
 * Starts rendering a new screen frame
 */
export function sp48StartNewScreenFrame(): void {
  if (spectrum.frameCount % screenFlashToggleFrames === 0) {
    screenFlashPhase = !screenFlashPhase;
  }
  sp48RenderScreen(0, spectrum.overflow);
}

/**
 * Table of ULA tact action information entries
 */
export function sp48GetRenderingTactTable(): RenderingTact[] {
  return screenRenderingTactTable;
}

/**
 * The number of frames when the flash flag should be toggles
 */
export function sp48GetFlashToggleFrames(): u32 {
  return screenFlashToggleFrames;
}

/**
 * Gets the current border color
 */
export function sp48GetBorderColor(): u8 {
  return screenBorderColor;
}

/**
 * Sets the current border color
 */
export function sp48SetBorderColor(color: u8): void {
  screenBorderColor = color;
}

/**
 * Executes the ULA rendering actions between the specified tacts
 * @param fromTact First ULA tact
 * @param toTact Last ULA tact
 */
export function sp48RenderScreen(fromTact: u32, toTact: u32): void {
  //const screenConfiguration = spectrum.screenConfiguration;
  // --- Do not refresh the screen when in fast mode, or explicitly disabled
  // if (
  //   spectrum.executeCycleOptions.disableScreenRendering ||
  //   (spectrum.frameCount > 2 &&
  //     spectrum.executeCycleOptions.fastVmMode &&
  //     spectrum.executeCycleOptions.disableScreenRendering)
  // ) {
  //   return;
  // }

  // --- Adjust the tact boundaries
  // fromTact = fromTact % screenConfiguration.screenRenderingFrameTactCount;
  // toTact = toTact % screenConfiguration.screenRenderingFrameTactCount;
  const buffer = screenPixelBuffer;

  // --- Carry out each tact action according to the rendering phase
  for (let currentTact = fromTact; currentTact <= toTact; currentTact++) {
    buffer[currentTact] = 0;
    const screenTact = screenRenderingTactTable[currentTact];

    switch (screenTact.phase) {
      case ScreenRenderingPhase.None:
        // --- Invisible screen area, nothing to do
        break;

      case ScreenRenderingPhase.Border:
        // --- Fetch the border color and set the corresponding border pixels
        buffer[screenTact.pixelIndex] = screenBorderColor;
        buffer[screenTact.pixelIndex + 1] = screenBorderColor;
        break;

      case ScreenRenderingPhase.BorderFetchPixel:
        // --- Fetch the border color and set the corresponding border pixels
        buffer[screenTact.pixelIndex] = screenBorderColor;
        buffer[screenTact.pixelIndex + 1] = screenBorderColor;
        // --- Obtain the future pixel byte
        screenPixelByte1 = spectrum.read(
          screenTact.pixelByteToFetchAddress,
          true
        );
        break;

      case ScreenRenderingPhase.BorderFetchPixelAttr:
        // --- Fetch the border color and set the corresponding border pixels
        buffer[screenTact.pixelIndex] = screenBorderColor;
        buffer[screenTact.pixelIndex + 1] = screenBorderColor;
        // --- Obtain the future attribute byte
        screenAttrByte1 = spectrum.read(
          screenTact.attributeToFetchAddress,
          true
        );
        break;

      case ScreenRenderingPhase.DisplayB1:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte1 & 0x80,
          screenAttrByte1
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte1 & 0x40,
          screenAttrByte1
        );
        // --- Shift in the subsequent bits
        screenPixelByte1 <<= 2;
        break;

      case ScreenRenderingPhase.DisplayB1FetchB2:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte1 & 0x80,
          screenAttrByte1
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte1 & 0x40,
          screenAttrByte1
        );
        // --- Shift in the subsequent bits
        screenPixelByte1 <<= 2;
        // --- Obtain the next pixel byte
        screenPixelByte2 = spectrum.read(
          screenTact.pixelByteToFetchAddress,
          true
        );
        break;

      case ScreenRenderingPhase.DisplayB1FetchA2:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte1 & 0x80,
          screenAttrByte1
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte1 & 0x40,
          screenAttrByte1
        );
        // --- Shift in the subsequent bits
        screenPixelByte1 <<= 2;
        // --- Obtain the next attribute
        screenAttrByte2 = spectrum.read(
          screenTact.attributeToFetchAddress,
          true
        );
        break;

      case ScreenRenderingPhase.DisplayB2:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte2 & 0x80,
          screenAttrByte2
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte2 & 0x40,
          screenAttrByte2
        );
        // --- Shift in the subsequent bits
        screenPixelByte2 <<= 2;
        break;

      case ScreenRenderingPhase.DisplayB2FetchB1:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte2 & 0x80,
          screenAttrByte2
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte2 & 0x40,
          screenAttrByte2
        );
        // --- Shift in the subsequent bits
        screenPixelByte2 <<= 2;
        // --- Obtain the next pixel byte
        screenPixelByte1 = spectrum.read(
          screenTact.pixelByteToFetchAddress,
          true
        );
        break;

      case ScreenRenderingPhase.DisplayB2FetchA1:
        // --- Display bit 7 and 6 according to the corresponding color
        buffer[screenTact.pixelIndex] = getColor(
          screenPixelByte2 & 0x80,
          screenAttrByte2
        );
        buffer[screenTact.pixelIndex + 1] = getColor(
          screenPixelByte2 & 0x40,
          screenAttrByte2
        );
        // --- Shift in the subsequent bits
        screenPixelByte2 <<= 2;
        // --- Obtain the next attribute
        screenAttrByte1 = spectrum.read(
          screenTact.attributeToFetchAddress,
          true
        );
        break;
    }
  }
}

/**
 * Gets the color index for the specified pixel value according
 * to the given color attribute
 * @param pixelValue 0 for paper pixel, non-zero for ink pixel
 * @param attr Color attribute
 */
function getColor(pixelValue: u8, attr: u8): u8 {
  const offset = (pixelValue === 0 ? 0 : 0x100) + attr;
  return screenFlashPhase
    ? screenFlashOnColors[offset]
    : screenFlashOffColors[offset];
}

/**
 * Gets the memory contention value for the specified tact
 * @param tact ULA tact
 * @returns: The contention value for the ULA tact
 */
export function sp48GetContentionValue(tact: u32): u32 {
  return screenRenderingTactTable[
    tact % spectrum.screenConfiguration.screenRenderingFrameTactCount
  ].contentionDelay;
}

/**
 * Gets the buffer that holds the screen pixels
 */
export function sp48GetPixelBuffer(): u8[] {
  const arr = new Array<u8>(screenPixelBuffer.length);
  for (let i = 0;  i < screenPixelBuffer.length; i++) {
    arr[i] = screenPixelBuffer[i];
  }
  return arr;
}

// ============================================================================
// Beeper device

// ---- Beeper device state
// let beeperFirstTact: ULong;
// let beeperAccSamples: u32;
// let beeperSampleRate: u32;
// let beeperTactsPerSample: u32;
// let beeperSamplesPerFrame: f32;
// let beeperUseTapeMode: bool;
// let beeperLastEarBit: bool;
// let beeperLastSampleTact: ULong;
// let beeperAudioSamples: f32[];
// let beeperNextSampleIndex: i32;

/**
 * Serializes beeper device state
 * @param w Binary stream writer
 */
function serializeBeeperState(w: BinaryWriter): void {
  // w.writeULong(beeperFirstTact);
  // w.writeUint32(beeperAccSamples);
  // w.writeUint32(beeperSampleRate);
  // w.writeUint32(<u32>(beeperSamplesPerFrame * 10_000));
  // w.writeByte(beeperUseTapeMode ? 1 : 0);
  // w.writeByte(beeperLastEarBit ? 1 : 0);
  // w.writeULong(beeperLastSampleTact);
  // w.writeUint16(<u16>beeperAudioSamples.length);
  // for (let i = 0; i < beeperAudioSamples.length; i++) {
  //   w.writeUint16(<u16>(beeperAudioSamples[i] * 10_000));
  // }
  // w.writeUint32(beeperNextSampleIndex);
}

/**
 * Restores beeper device state
 * @param r Binary stream reader
 */
function restoreBeeperState(r: BinaryReader): void {
  // beeperFirstTact = r.readULong();
  // beeperAccSamples = r.readUint32();
  // beeperSampleRate = r.readUint32();
  // beeperSamplesPerFrame = <f32>r.readUint32() / 10_000;
  // beeperUseTapeMode = r.readByte() !== 0;
  // beeperLastEarBit = r.readByte() !== 0;
  // beeperLastSampleTact = r.readULong();
  // const sampleCount = r.readUint16();
  // beeperAudioSamples = new Array<f32>(sampleCount);
  // for (let i = 0; i < <i32>sampleCount; i++) {
  //   beeperAudioSamples[i] = <f32>r.readUint16() / 10_000;
  // }
  // beeperNextSampleIndex = r.readUint32();
}

/**
 * Resets the beeper device
 */
export function sp48ResetBeeperDevice(): void {
  // beeperFirstTact = spectrum.frameBegins;
  // beeperAccSamples = 0;
  // beeperLastEarBit = false;
  // beeperUseTapeMode = false;
  // initializeSampling();
}

/**
 * Sets up sampling information for the forthcoming frame
 */
function initializeSampling(): void {
  // const nextSamplesCount =
  //   <f32>beeperFirstTact +
  //   <f32>(spectrum.frameCount + 1) * beeperSamplesPerFrame;
  // const frameBegins = spectrum.frameBegins;
  // beeperLastSampleTact =
  //   frameBegins % beeperTactsPerSample === 0
  //     ? frameBegins
  //     : frameBegins +
  //       beeperTactsPerSample -
  //       ((frameBegins + beeperTactsPerSample) % beeperTactsPerSample);
  // const samplesInFrame = <i32>(
  //   Math.floor(nextSamplesCount - <f32>beeperAccSamples)
  // );
  // beeperAccSamples += samplesInFrame;
  // // --- Empty the samples array
  // beeperAudioSamples = new Array<f32>(samplesInFrame);
  // for (let i = 0; i < samplesInFrame; i++) {
  //   beeperAudioSamples[i] = 0.0;
  // }
  // beeperNextSampleIndex = 0;
}

/**
 * Starts a new beeper frame;
 */
export function sp48StartNewBeeperFrame(): void {
  initializeSampling();
  if (spectrum.overflow !== 0) {
    // createSamples(
    //   ULong.add(spectrum.frameBegins, ULong.fromUint32(spectrum.overflow))
    // );
  }
}

// /**
//  * Creates beeper samples to the specified CPU tacts
//  * @param cpuTacts CPU tacts to create samples to
//  */
// function createSamples(cpuTacts: ULong): void {
//   let nextSampleOffset = beeperLastSampleTact;
//   const frametacts = spectrum.screenConfiguration.screenRenderingFrameTactCount;
//   if (
//     ULong.compare(
//       cpuTacts,
//       ULong.add(spectrum.frameBegins, ULong.fromUint32(frametacts))
//     ) > 0
//   ) {
//     cpuTacts = ULong.add(spectrum.frameBegins, ULong.fromUint32(frametacts));
//   }
//   while (ULong.compare(nextSampleOffset, cpuTacts) <= 0) {
//     beeperAudioSamples[beeperNextSampleIndex++] = beeperLastEarBit ? 1.0 : 0.0;
//     nextSampleOffset = ULong.add(
//       nextSampleOffset,
//       ULong.fromUint32(beeperTactsPerSample)
//     );
//   }
//   if (beeperNextSampleIndex < beeperAudioSamples.length) {
//     const lastSample = beeperAudioSamples[beeperNextSampleIndex - 1];
//     for (let i = beeperNextSampleIndex; i < beeperAudioSamples.length; i++) {
//       beeperAudioSamples[i] = lastSample;
//     }
//   }
//   beeperLastSampleTact = nextSampleOffset;
// }

/**
 * Completes a beeper frame
 */
export function sp48CompleteBeeperFrame(): void {
  // const frameTacts = spectrum.screenConfiguration.screenRenderingFrameTactCount;
  // if (beeperLastSampleTact < spectrum.frameBegins + frameTacts) {
  //   // --- Expand the samples till the end of the frame
  //   createSamples(spectrum.frameBegins + frameTacts);
  // }
}

/**
 * Gets the beeper samples created in the current screen frame
 */
export function sp48GetBeeperSamples(): f32[] {
  return [];
  // return beeperAudioSamples;
}

/**
 * Gets the current audio sample rate
 */
export function sp48GetBeeperSampleRate(): u32 {
  return 0;
  // return beeperSampleRate;
}

/**
 * Sets the beeper sample rate
 */
export function sp48SetBeeperSampleRate(rate: u32): void {
  // beeperSampleRate = rate;
  // beeperSamplesPerFrame =
  //   (<f32>spectrum.screenConfiguration.screenRenderingFrameTactCount *
  //     <f32>rate) /
  //   <f32>spectrum.baseClockFrequency /
  //   <f32>spectrum.clockMultiplier;
  // beeperTactsPerSample = <u32>(
  //   Math.ceil(
  //     <f32>spectrum.screenConfiguration.screenRenderingFrameTactCount /
  //       beeperSamplesPerFrame
  //   )
  // );
  // sp48ResetBeeperDevice();
}

/**
 * Gets the latest EAR bit value;
 */
export function sp48GetLastEarBit(): bool {
  return true;
  // return beeperLastEarBit;
}

/**
 * This device processes so many samples in a single frame
 */
export function sp48GetSamplesPerFrame(): f32 {
  return 0.0;
  //return beeperSamplesPerFrame;
}

/**
 * Number of CPU tacts between samples
 */
export function sp48GetTactsPerSample(): u32 {
  return 0;
  //return beeperTactsPerSample;
}

/**
 * Processes the change of the EAR bit value
 * @param fromTape False: EAR bit comes from an OUT instruction, True: EAR bit comes from tape
 * @param earBit EAR bit value
 */
export function sp48ProcessEarBitValue(fromTape: bool, earBit: bool): void {
  // if (!fromTape && beeperUseTapeMode) {
  //   // --- The EAR bit comes from and OUT instruction, but now we're in tape mode
  //   return;
  // }
  // if (earBit === beeperLastEarBit) {
  //   // --- The earbit has not changed
  //   return;
  // }
  // //createSamples(spectrum.cpu.tacts);
  // beeperLastEarBit = earBit;
}

/**
 * This method signs that tape should override the OUT instruction's EAR bit
 * @param useTape True: Override the OUT instruction with the tape's EAR bit value
 */
export function sp48SetTapeOverride(useTape: bool): void {
  //beeperUseTapeMode = useTape;
}

// ============================================================================
// Keyboard device

// --- Keyboard device state
let keyboardLineStatus: StaticArray<u8>;

/**
 * Serializes the keyboard device state
 * @param w Binary stream writer
 */
function serializeKeyboardState(w: BinaryWriter): void {
  w.writeBytes(keyboardLineStatus);
}

/**
 * Restores keyboard device state
 * @param r Binary stream reader
 */
function restoreKeyboardState(r: BinaryReader): void {
  keyboardLineStatus = r.readBytes();
}

/**
 * Resets the keyboard device
 */
export function sp48ResetKeyboardDevice(): void {
  keyboardLineStatus = StaticArray.fromArray(new Array<u8>(8));
  for (let i = 0; i < 8; i++) {
    keyboardLineStatus[i] = 0x00;
  }
}

/**
 * Sets the status of the specified Spectrum keyboard key
 * @param key Key code
 * @param isDown True, if the key is down; otherwise, false
 */
export function sp48SetKeyStatus(key: SpectrumKeyCode, isDown: bool): void {
  const lineIndex = <i32>Math.floor(key / 5);
  const lineMask = 1 << key % 5;
  keyboardLineStatus[lineIndex] = isDown
    ? <u8>(keyboardLineStatus[lineIndex] | lineMask)
    : <u8>(keyboardLineStatus[lineIndex] & ~lineMask);
}

/**
 * Gets the status of the specified Spectrum keyboard key.
 * @param key Key code
 * @returns True, if the key is down; otherwise, false
 */
export function sp48GetKeyStatus(key: SpectrumKeyCode): bool {
  const lineIndex = <i32>Math.floor(key / 5);
  const lineMask = 1 << key % 5;
  return (keyboardLineStatus[lineIndex] & lineMask) !== 0;
}

/**
 * Gets the byte we would get when querying the I/O address with the
 * specified byte as the highest 8 bits of the address line
 * @param lines The highest 8 bits of the address line
 * @returns The status value to be received when querying the I/O
 */
export function sp48GetKeyLineStatus(lines: u8): u8 {
  let status: u8 = 0;
  lines = ~lines;

  let lineIndex = 0;
  while (lines > 0) {
    if ((lines & 0x01) !== 0) {
      status |= keyboardLineStatus[lineIndex];
    }
    lineIndex++;
    lines >>= 1;
  }
  return ~status;
}

/**
 * Writes out the state of the ZX Spectrum 48 machine to binary stream
 */
export function sp48GetMachineState(): u8[] {
  const writer = new BinaryWriter();
  return writer.buffer;
}

/**
 * The content of the ZX Spectrum 48 ROM
 */
export const ZX_SPECTRUM_48_ROM: u8[] = [
  0xf3,
  0xaf,
  0x11,
  0xff,
  0xff,
  0xc3,
  0xcb,
  0x11,
  0x2a,
  0x5d,
  0x5c,
  0x22,
  0x5f,
  0x5c,
  0x18,
  0x43,
  0xc3,
  0xf2,
  0x15,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0x2a,
  0x5d,
  0x5c,
  0x7e,
  0xcd,
  0x7d,
  0x00,
  0xd0,
  0xcd,
  0x74,
  0x00,
  0x18,
  0xf7,
  0xff,
  0xff,
  0xff,
  0xc3,
  0x5b,
  0x33,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xc5,
  0x2a,
  0x61,
  0x5c,
  0xe5,
  0xc3,
  0x9e,
  0x16,
  0xf5,
  0xe5,
  0x2a,
  0x78,
  0x5c,
  0x23,
  0x22,
  0x78,
  0x5c,
  0x7c,
  0xb5,
  0x20,
  0x03,
  0xfd,
  0x34,
  0x40,
  0xc5,
  0xd5,
  0xcd,
  0xbf,
  0x02,
  0xd1,
  0xc1,
  0xe1,
  0xf1,
  0xfb,
  0xc9,
  0xe1,
  0x6e,
  0xfd,
  0x75,
  0x00,
  0xed,
  0x7b,
  0x3d,
  0x5c,
  0xc3,
  0xc5,
  0x16,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xf5,
  0xe5,
  0x2a,
  0xb0,
  0x5c,
  0x7c,
  0xb5,
  0x20,
  0x01,
  0xe9,
  0xe1,
  0xf1,
  0xed,
  0x45,
  0x2a,
  0x5d,
  0x5c,
  0x23,
  0x22,
  0x5d,
  0x5c,
  0x7e,
  0xc9,
  0xfe,
  0x21,
  0xd0,
  0xfe,
  0x0d,
  0xc8,
  0xfe,
  0x10,
  0xd8,
  0xfe,
  0x18,
  0x3f,
  0xd8,
  0x23,
  0xfe,
  0x16,
  0x38,
  0x01,
  0x23,
  0x37,
  0x22,
  0x5d,
  0x5c,
  0xc9,
  0xbf,
  0x52,
  0x4e,
  0xc4,
  0x49,
  0x4e,
  0x4b,
  0x45,
  0x59,
  0xa4,
  0x50,
  0xc9,
  0x46,
  0xce,
  0x50,
  0x4f,
  0x49,
  0x4e,
  0xd4,
  0x53,
  0x43,
  0x52,
  0x45,
  0x45,
  0x4e,
  0xa4,
  0x41,
  0x54,
  0x54,
  0xd2,
  0x41,
  0xd4,
  0x54,
  0x41,
  0xc2,
  0x56,
  0x41,
  0x4c,
  0xa4,
  0x43,
  0x4f,
  0x44,
  0xc5,
  0x56,
  0x41,
  0xcc,
  0x4c,
  0x45,
  0xce,
  0x53,
  0x49,
  0xce,
  0x43,
  0x4f,
  0xd3,
  0x54,
  0x41,
  0xce,
  0x41,
  0x53,
  0xce,
  0x41,
  0x43,
  0xd3,
  0x41,
  0x54,
  0xce,
  0x4c,
  0xce,
  0x45,
  0x58,
  0xd0,
  0x49,
  0x4e,
  0xd4,
  0x53,
  0x51,
  0xd2,
  0x53,
  0x47,
  0xce,
  0x41,
  0x42,
  0xd3,
  0x50,
  0x45,
  0x45,
  0xcb,
  0x49,
  0xce,
  0x55,
  0x53,
  0xd2,
  0x53,
  0x54,
  0x52,
  0xa4,
  0x43,
  0x48,
  0x52,
  0xa4,
  0x4e,
  0x4f,
  0xd4,
  0x42,
  0x49,
  0xce,
  0x4f,
  0xd2,
  0x41,
  0x4e,
  0xc4,
  0x3c,
  0xbd,
  0x3e,
  0xbd,
  0x3c,
  0xbe,
  0x4c,
  0x49,
  0x4e,
  0xc5,
  0x54,
  0x48,
  0x45,
  0xce,
  0x54,
  0xcf,
  0x53,
  0x54,
  0x45,
  0xd0,
  0x44,
  0x45,
  0x46,
  0x20,
  0x46,
  0xce,
  0x43,
  0x41,
  0xd4,
  0x46,
  0x4f,
  0x52,
  0x4d,
  0x41,
  0xd4,
  0x4d,
  0x4f,
  0x56,
  0xc5,
  0x45,
  0x52,
  0x41,
  0x53,
  0xc5,
  0x4f,
  0x50,
  0x45,
  0x4e,
  0x20,
  0xa3,
  0x43,
  0x4c,
  0x4f,
  0x53,
  0x45,
  0x20,
  0xa3,
  0x4d,
  0x45,
  0x52,
  0x47,
  0xc5,
  0x56,
  0x45,
  0x52,
  0x49,
  0x46,
  0xd9,
  0x42,
  0x45,
  0x45,
  0xd0,
  0x43,
  0x49,
  0x52,
  0x43,
  0x4c,
  0xc5,
  0x49,
  0x4e,
  0xcb,
  0x50,
  0x41,
  0x50,
  0x45,
  0xd2,
  0x46,
  0x4c,
  0x41,
  0x53,
  0xc8,
  0x42,
  0x52,
  0x49,
  0x47,
  0x48,
  0xd4,
  0x49,
  0x4e,
  0x56,
  0x45,
  0x52,
  0x53,
  0xc5,
  0x4f,
  0x56,
  0x45,
  0xd2,
  0x4f,
  0x55,
  0xd4,
  0x4c,
  0x50,
  0x52,
  0x49,
  0x4e,
  0xd4,
  0x4c,
  0x4c,
  0x49,
  0x53,
  0xd4,
  0x53,
  0x54,
  0x4f,
  0xd0,
  0x52,
  0x45,
  0x41,
  0xc4,
  0x44,
  0x41,
  0x54,
  0xc1,
  0x52,
  0x45,
  0x53,
  0x54,
  0x4f,
  0x52,
  0xc5,
  0x4e,
  0x45,
  0xd7,
  0x42,
  0x4f,
  0x52,
  0x44,
  0x45,
  0xd2,
  0x43,
  0x4f,
  0x4e,
  0x54,
  0x49,
  0x4e,
  0x55,
  0xc5,
  0x44,
  0x49,
  0xcd,
  0x52,
  0x45,
  0xcd,
  0x46,
  0x4f,
  0xd2,
  0x47,
  0x4f,
  0x20,
  0x54,
  0xcf,
  0x47,
  0x4f,
  0x20,
  0x53,
  0x55,
  0xc2,
  0x49,
  0x4e,
  0x50,
  0x55,
  0xd4,
  0x4c,
  0x4f,
  0x41,
  0xc4,
  0x4c,
  0x49,
  0x53,
  0xd4,
  0x4c,
  0x45,
  0xd4,
  0x50,
  0x41,
  0x55,
  0x53,
  0xc5,
  0x4e,
  0x45,
  0x58,
  0xd4,
  0x50,
  0x4f,
  0x4b,
  0xc5,
  0x50,
  0x52,
  0x49,
  0x4e,
  0xd4,
  0x50,
  0x4c,
  0x4f,
  0xd4,
  0x52,
  0x55,
  0xce,
  0x53,
  0x41,
  0x56,
  0xc5,
  0x52,
  0x41,
  0x4e,
  0x44,
  0x4f,
  0x4d,
  0x49,
  0x5a,
  0xc5,
  0x49,
  0xc6,
  0x43,
  0x4c,
  0xd3,
  0x44,
  0x52,
  0x41,
  0xd7,
  0x43,
  0x4c,
  0x45,
  0x41,
  0xd2,
  0x52,
  0x45,
  0x54,
  0x55,
  0x52,
  0xce,
  0x43,
  0x4f,
  0x50,
  0xd9,
  0x42,
  0x48,
  0x59,
  0x36,
  0x35,
  0x54,
  0x47,
  0x56,
  0x4e,
  0x4a,
  0x55,
  0x37,
  0x34,
  0x52,
  0x46,
  0x43,
  0x4d,
  0x4b,
  0x49,
  0x38,
  0x33,
  0x45,
  0x44,
  0x58,
  0x0e,
  0x4c,
  0x4f,
  0x39,
  0x32,
  0x57,
  0x53,
  0x5a,
  0x20,
  0x0d,
  0x50,
  0x30,
  0x31,
  0x51,
  0x41,
  0xe3,
  0xc4,
  0xe0,
  0xe4,
  0xb4,
  0xbc,
  0xbd,
  0xbb,
  0xaf,
  0xb0,
  0xb1,
  0xc0,
  0xa7,
  0xa6,
  0xbe,
  0xad,
  0xb2,
  0xba,
  0xe5,
  0xa5,
  0xc2,
  0xe1,
  0xb3,
  0xb9,
  0xc1,
  0xb8,
  0x7e,
  0xdc,
  0xda,
  0x5c,
  0xb7,
  0x7b,
  0x7d,
  0xd8,
  0xbf,
  0xae,
  0xaa,
  0xab,
  0xdd,
  0xde,
  0xdf,
  0x7f,
  0xb5,
  0xd6,
  0x7c,
  0xd5,
  0x5d,
  0xdb,
  0xb6,
  0xd9,
  0x5b,
  0xd7,
  0x0c,
  0x07,
  0x06,
  0x04,
  0x05,
  0x08,
  0x0a,
  0x0b,
  0x09,
  0x0f,
  0xe2,
  0x2a,
  0x3f,
  0xcd,
  0xc8,
  0xcc,
  0xcb,
  0x5e,
  0xac,
  0x2d,
  0x2b,
  0x3d,
  0x2e,
  0x2c,
  0x3b,
  0x22,
  0xc7,
  0x3c,
  0xc3,
  0x3e,
  0xc5,
  0x2f,
  0xc9,
  0x60,
  0xc6,
  0x3a,
  0xd0,
  0xce,
  0xa8,
  0xca,
  0xd3,
  0xd4,
  0xd1,
  0xd2,
  0xa9,
  0xcf,
  0x2e,
  0x2f,
  0x11,
  0xff,
  0xff,
  0x01,
  0xfe,
  0xfe,
  0xed,
  0x78,
  0x2f,
  0xe6,
  0x1f,
  0x28,
  0x0e,
  0x67,
  0x7d,
  0x14,
  0xc0,
  0xd6,
  0x08,
  0xcb,
  0x3c,
  0x30,
  0xfa,
  0x53,
  0x5f,
  0x20,
  0xf4,
  0x2d,
  0xcb,
  0x00,
  0x38,
  0xe6,
  0x7a,
  0x3c,
  0xc8,
  0xfe,
  0x28,
  0xc8,
  0xfe,
  0x19,
  0xc8,
  0x7b,
  0x5a,
  0x57,
  0xfe,
  0x18,
  0xc9,
  0xcd,
  0x8e,
  0x02,
  0xc0,
  0x21,
  0x00,
  0x5c,
  0xcb,
  0x7e,
  0x20,
  0x07,
  0x23,
  0x35,
  0x2b,
  0x20,
  0x02,
  0x36,
  0xff,
  0x7d,
  0x21,
  0x04,
  0x5c,
  0xbd,
  0x20,
  0xee,
  0xcd,
  0x1e,
  0x03,
  0xd0,
  0x21,
  0x00,
  0x5c,
  0xbe,
  0x28,
  0x2e,
  0xeb,
  0x21,
  0x04,
  0x5c,
  0xbe,
  0x28,
  0x27,
  0xcb,
  0x7e,
  0x20,
  0x04,
  0xeb,
  0xcb,
  0x7e,
  0xc8,
  0x5f,
  0x77,
  0x23,
  0x36,
  0x05,
  0x23,
  0x3a,
  0x09,
  0x5c,
  0x77,
  0x23,
  0xfd,
  0x4e,
  0x07,
  0xfd,
  0x56,
  0x01,
  0xe5,
  0xcd,
  0x33,
  0x03,
  0xe1,
  0x77,
  0x32,
  0x08,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xee,
  0xc9,
  0x23,
  0x36,
  0x05,
  0x23,
  0x35,
  0xc0,
  0x3a,
  0x0a,
  0x5c,
  0x77,
  0x23,
  0x7e,
  0x18,
  0xea,
  0x42,
  0x16,
  0x00,
  0x7b,
  0xfe,
  0x27,
  0xd0,
  0xfe,
  0x18,
  0x20,
  0x03,
  0xcb,
  0x78,
  0xc0,
  0x21,
  0x05,
  0x02,
  0x19,
  0x7e,
  0x37,
  0xc9,
  0x7b,
  0xfe,
  0x3a,
  0x38,
  0x2f,
  0x0d,
  0xfa,
  0x4f,
  0x03,
  0x28,
  0x03,
  0xc6,
  0x4f,
  0xc9,
  0x21,
  0xeb,
  0x01,
  0x04,
  0x28,
  0x03,
  0x21,
  0x05,
  0x02,
  0x16,
  0x00,
  0x19,
  0x7e,
  0xc9,
  0x21,
  0x29,
  0x02,
  0xcb,
  0x40,
  0x28,
  0xf4,
  0xcb,
  0x5a,
  0x28,
  0x0a,
  0xfd,
  0xcb,
  0x30,
  0x5e,
  0xc0,
  0x04,
  0xc0,
  0xc6,
  0x20,
  0xc9,
  0xc6,
  0xa5,
  0xc9,
  0xfe,
  0x30,
  0xd8,
  0x0d,
  0xfa,
  0x9d,
  0x03,
  0x20,
  0x19,
  0x21,
  0x54,
  0x02,
  0xcb,
  0x68,
  0x28,
  0xd3,
  0xfe,
  0x38,
  0x30,
  0x07,
  0xd6,
  0x20,
  0x04,
  0xc8,
  0xc6,
  0x08,
  0xc9,
  0xd6,
  0x36,
  0x04,
  0xc8,
  0xc6,
  0xfe,
  0xc9,
  0x21,
  0x30,
  0x02,
  0xfe,
  0x39,
  0x28,
  0xba,
  0xfe,
  0x30,
  0x28,
  0xb6,
  0xe6,
  0x07,
  0xc6,
  0x80,
  0x04,
  0xc8,
  0xee,
  0x0f,
  0xc9,
  0x04,
  0xc8,
  0xcb,
  0x68,
  0x21,
  0x30,
  0x02,
  0x20,
  0xa4,
  0xd6,
  0x10,
  0xfe,
  0x22,
  0x28,
  0x06,
  0xfe,
  0x20,
  0xc0,
  0x3e,
  0x5f,
  0xc9,
  0x3e,
  0x40,
  0xc9,
  0xf3,
  0x7d,
  0xcb,
  0x3d,
  0xcb,
  0x3d,
  0x2f,
  0xe6,
  0x03,
  0x4f,
  0x06,
  0x00,
  0xdd,
  0x21,
  0xd1,
  0x03,
  0xdd,
  0x09,
  0x3a,
  0x48,
  0x5c,
  0xe6,
  0x38,
  0x0f,
  0x0f,
  0x0f,
  0xf6,
  0x08,
  0x00,
  0x00,
  0x00,
  0x04,
  0x0c,
  0x0d,
  0x20,
  0xfd,
  0x0e,
  0x3f,
  0x05,
  0xc2,
  0xd6,
  0x03,
  0xee,
  0x10,
  0xd3,
  0xfe,
  0x44,
  0x4f,
  0xcb,
  0x67,
  0x20,
  0x09,
  0x7a,
  0xb3,
  0x28,
  0x09,
  0x79,
  0x4d,
  0x1b,
  0xdd,
  0xe9,
  0x4d,
  0x0c,
  0xdd,
  0xe9,
  0xfb,
  0xc9,
  0xef,
  0x31,
  0x27,
  0xc0,
  0x03,
  0x34,
  0xec,
  0x6c,
  0x98,
  0x1f,
  0xf5,
  0x04,
  0xa1,
  0x0f,
  0x38,
  0x21,
  0x92,
  0x5c,
  0x7e,
  0xa7,
  0x20,
  0x5e,
  0x23,
  0x4e,
  0x23,
  0x46,
  0x78,
  0x17,
  0x9f,
  0xb9,
  0x20,
  0x54,
  0x23,
  0xbe,
  0x20,
  0x50,
  0x78,
  0xc6,
  0x3c,
  0xf2,
  0x25,
  0x04,
  0xe2,
  0x6c,
  0x04,
  0x06,
  0xfa,
  0x04,
  0xd6,
  0x0c,
  0x30,
  0xfb,
  0xc6,
  0x0c,
  0xc5,
  0x21,
  0x6e,
  0x04,
  0xcd,
  0x06,
  0x34,
  0xcd,
  0xb4,
  0x33,
  0xef,
  0x04,
  0x38,
  0xf1,
  0x86,
  0x77,
  0xef,
  0xc0,
  0x02,
  0x31,
  0x38,
  0xcd,
  0x94,
  0x1e,
  0xfe,
  0x0b,
  0x30,
  0x22,
  0xef,
  0xe0,
  0x04,
  0xe0,
  0x34,
  0x80,
  0x43,
  0x55,
  0x9f,
  0x80,
  0x01,
  0x05,
  0x34,
  0x35,
  0x71,
  0x03,
  0x38,
  0xcd,
  0x99,
  0x1e,
  0xc5,
  0xcd,
  0x99,
  0x1e,
  0xe1,
  0x50,
  0x59,
  0x7a,
  0xb3,
  0xc8,
  0x1b,
  0xc3,
  0xb5,
  0x03,
  0xcf,
  0x0a,
  0x89,
  0x02,
  0xd0,
  0x12,
  0x86,
  0x89,
  0x0a,
  0x97,
  0x60,
  0x75,
  0x89,
  0x12,
  0xd5,
  0x17,
  0x1f,
  0x89,
  0x1b,
  0x90,
  0x41,
  0x02,
  0x89,
  0x24,
  0xd0,
  0x53,
  0xca,
  0x89,
  0x2e,
  0x9d,
  0x36,
  0xb1,
  0x89,
  0x38,
  0xff,
  0x49,
  0x3e,
  0x89,
  0x43,
  0xff,
  0x6a,
  0x73,
  0x89,
  0x4f,
  0xa7,
  0x00,
  0x54,
  0x89,
  0x5c,
  0x00,
  0x00,
  0x00,
  0x89,
  0x69,
  0x14,
  0xf6,
  0x24,
  0x89,
  0x76,
  0xf1,
  0x10,
  0x05,
  0xcd,
  0xfb,
  0x24,
  0x3a,
  0x3b,
  0x5c,
  0x87,
  0xfa,
  0x8a,
  0x1c,
  0xe1,
  0xd0,
  0xe5,
  0xcd,
  0xf1,
  0x2b,
  0x62,
  0x6b,
  0x0d,
  0xf8,
  0x09,
  0xcb,
  0xfe,
  0xc9,
  0x21,
  0x3f,
  0x05,
  0xe5,
  0x21,
  0x80,
  0x1f,
  0xcb,
  0x7f,
  0x28,
  0x03,
  0x21,
  0x98,
  0x0c,
  0x08,
  0x13,
  0xdd,
  0x2b,
  0xf3,
  0x3e,
  0x02,
  0x47,
  0x10,
  0xfe,
  0xd3,
  0xfe,
  0xee,
  0x0f,
  0x06,
  0xa4,
  0x2d,
  0x20,
  0xf5,
  0x05,
  0x25,
  0xf2,
  0xd8,
  0x04,
  0x06,
  0x2f,
  0x10,
  0xfe,
  0xd3,
  0xfe,
  0x3e,
  0x0d,
  0x06,
  0x37,
  0x10,
  0xfe,
  0xd3,
  0xfe,
  0x01,
  0x0e,
  0x3b,
  0x08,
  0x6f,
  0xc3,
  0x07,
  0x05,
  0x7a,
  0xb3,
  0x28,
  0x0c,
  0xdd,
  0x6e,
  0x00,
  0x7c,
  0xad,
  0x67,
  0x3e,
  0x01,
  0x37,
  0xc3,
  0x25,
  0x05,
  0x6c,
  0x18,
  0xf4,
  0x79,
  0xcb,
  0x78,
  0x10,
  0xfe,
  0x30,
  0x04,
  0x06,
  0x42,
  0x10,
  0xfe,
  0xd3,
  0xfe,
  0x06,
  0x3e,
  0x20,
  0xef,
  0x05,
  0xaf,
  0x3c,
  0xcb,
  0x15,
  0xc2,
  0x14,
  0x05,
  0x1b,
  0xdd,
  0x23,
  0x06,
  0x31,
  0x3e,
  0x7f,
  0xdb,
  0xfe,
  0x1f,
  0xd0,
  0x7a,
  0x3c,
  0xc2,
  0xfe,
  0x04,
  0x06,
  0x3b,
  0x10,
  0xfe,
  0xc9,
  0xf5,
  0x3a,
  0x48,
  0x5c,
  0xe6,
  0x38,
  0x0f,
  0x0f,
  0x0f,
  0xd3,
  0xfe,
  0x3e,
  0x7f,
  0xdb,
  0xfe,
  0x1f,
  0xfb,
  0x38,
  0x02,
  0xcf,
  0x0c,
  0xf1,
  0xc9,
  0x14,
  0x08,
  0x15,
  0xf3,
  0x3e,
  0x0f,
  0xd3,
  0xfe,
  0x21,
  0x3f,
  0x05,
  0xe5,
  0xdb,
  0xfe,
  0x1f,
  0xe6,
  0x20,
  0xf6,
  0x02,
  0x4f,
  0xbf,
  0xc0,
  0xcd,
  0xe7,
  0x05,
  0x30,
  0xfa,
  0x21,
  0x15,
  0x04,
  0x10,
  0xfe,
  0x2b,
  0x7c,
  0xb5,
  0x20,
  0xf9,
  0xcd,
  0xe3,
  0x05,
  0x30,
  0xeb,
  0x06,
  0x9c,
  0xcd,
  0xe3,
  0x05,
  0x30,
  0xe4,
  0x3e,
  0xc6,
  0xb8,
  0x30,
  0xe0,
  0x24,
  0x20,
  0xf1,
  0x06,
  0xc9,
  0xcd,
  0xe7,
  0x05,
  0x30,
  0xd5,
  0x78,
  0xfe,
  0xd4,
  0x30,
  0xf4,
  0xcd,
  0xe7,
  0x05,
  0xd0,
  0x79,
  0xee,
  0x03,
  0x4f,
  0x26,
  0x00,
  0x06,
  0xb0,
  0x18,
  0x1f,
  0x08,
  0x20,
  0x07,
  0x30,
  0x0f,
  0xdd,
  0x75,
  0x00,
  0x18,
  0x0f,
  0xcb,
  0x11,
  0xad,
  0xc0,
  0x79,
  0x1f,
  0x4f,
  0x13,
  0x18,
  0x07,
  0xdd,
  0x7e,
  0x00,
  0xad,
  0xc0,
  0xdd,
  0x23,
  0x1b,
  0x08,
  0x06,
  0xb2,
  0x2e,
  0x01,
  0xcd,
  0xe3,
  0x05,
  0xd0,
  0x3e,
  0xcb,
  0xb8,
  0xcb,
  0x15,
  0x06,
  0xb0,
  0xd2,
  0xca,
  0x05,
  0x7c,
  0xad,
  0x67,
  0x7a,
  0xb3,
  0x20,
  0xca,
  0x7c,
  0xfe,
  0x01,
  0xc9,
  0xcd,
  0xe7,
  0x05,
  0xd0,
  0x3e,
  0x16,
  0x3d,
  0x20,
  0xfd,
  0xa7,
  0x04,
  0xc8,
  0x3e,
  0x7f,
  0xdb,
  0xfe,
  0x1f,
  0xd0,
  0xa9,
  0xe6,
  0x20,
  0x28,
  0xf3,
  0x79,
  0x2f,
  0x4f,
  0xe6,
  0x07,
  0xf6,
  0x08,
  0xd3,
  0xfe,
  0x37,
  0xc9,
  0xf1,
  0x3a,
  0x74,
  0x5c,
  0xd6,
  0xe0,
  0x32,
  0x74,
  0x5c,
  0xcd,
  0x8c,
  0x1c,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x3c,
  0x01,
  0x11,
  0x00,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0x28,
  0x02,
  0x0e,
  0x22,
  0xf7,
  0xd5,
  0xdd,
  0xe1,
  0x06,
  0x0b,
  0x3e,
  0x20,
  0x12,
  0x13,
  0x10,
  0xfc,
  0xdd,
  0x36,
  0x01,
  0xff,
  0xcd,
  0xf1,
  0x2b,
  0x21,
  0xf6,
  0xff,
  0x0b,
  0x09,
  0x03,
  0x30,
  0x0f,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0x20,
  0x02,
  0xcf,
  0x0e,
  0x78,
  0xb1,
  0x28,
  0x0a,
  0x01,
  0x0a,
  0x00,
  0xdd,
  0xe5,
  0xe1,
  0x23,
  0xeb,
  0xed,
  0xb0,
  0xdf,
  0xfe,
  0xe4,
  0x20,
  0x49,
  0x3a,
  0x74,
  0x5c,
  0xfe,
  0x03,
  0xca,
  0x8a,
  0x1c,
  0xe7,
  0xcd,
  0xb2,
  0x28,
  0xcb,
  0xf9,
  0x30,
  0x0b,
  0x21,
  0x00,
  0x00,
  0x3a,
  0x74,
  0x5c,
  0x3d,
  0x28,
  0x15,
  0xcf,
  0x01,
  0xc2,
  0x8a,
  0x1c,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x18,
  0x23,
  0x7e,
  0xdd,
  0x77,
  0x0b,
  0x23,
  0x7e,
  0xdd,
  0x77,
  0x0c,
  0x23,
  0xdd,
  0x71,
  0x0e,
  0x3e,
  0x01,
  0xcb,
  0x71,
  0x28,
  0x01,
  0x3c,
  0xdd,
  0x77,
  0x00,
  0xeb,
  0xe7,
  0xfe,
  0x29,
  0x20,
  0xda,
  0xe7,
  0xcd,
  0xee,
  0x1b,
  0xeb,
  0xc3,
  0x5a,
  0x07,
  0xfe,
  0xaa,
  0x20,
  0x1f,
  0x3a,
  0x74,
  0x5c,
  0xfe,
  0x03,
  0xca,
  0x8a,
  0x1c,
  0xe7,
  0xcd,
  0xee,
  0x1b,
  0xdd,
  0x36,
  0x0b,
  0x00,
  0xdd,
  0x36,
  0x0c,
  0x1b,
  0x21,
  0x00,
  0x40,
  0xdd,
  0x75,
  0x0d,
  0xdd,
  0x74,
  0x0e,
  0x18,
  0x4d,
  0xfe,
  0xaf,
  0x20,
  0x4f,
  0x3a,
  0x74,
  0x5c,
  0xfe,
  0x03,
  0xca,
  0x8a,
  0x1c,
  0xe7,
  0xcd,
  0x48,
  0x20,
  0x20,
  0x0c,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0xca,
  0x8a,
  0x1c,
  0xcd,
  0xe6,
  0x1c,
  0x18,
  0x0f,
  0xcd,
  0x82,
  0x1c,
  0xdf,
  0xfe,
  0x2c,
  0x28,
  0x0c,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0xca,
  0x8a,
  0x1c,
  0xcd,
  0xe6,
  0x1c,
  0x18,
  0x04,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xcd,
  0x99,
  0x1e,
  0xdd,
  0x71,
  0x0b,
  0xdd,
  0x70,
  0x0c,
  0xcd,
  0x99,
  0x1e,
  0xdd,
  0x71,
  0x0d,
  0xdd,
  0x70,
  0x0e,
  0x60,
  0x69,
  0xdd,
  0x36,
  0x00,
  0x03,
  0x18,
  0x44,
  0xfe,
  0xca,
  0x28,
  0x09,
  0xcd,
  0xee,
  0x1b,
  0xdd,
  0x36,
  0x0e,
  0x80,
  0x18,
  0x17,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xcd,
  0x99,
  0x1e,
  0xdd,
  0x71,
  0x0d,
  0xdd,
  0x70,
  0x0e,
  0xdd,
  0x36,
  0x00,
  0x00,
  0x2a,
  0x59,
  0x5c,
  0xed,
  0x5b,
  0x53,
  0x5c,
  0x37,
  0xed,
  0x52,
  0xdd,
  0x75,
  0x0b,
  0xdd,
  0x74,
  0x0c,
  0x2a,
  0x4b,
  0x5c,
  0xed,
  0x52,
  0xdd,
  0x75,
  0x0f,
  0xdd,
  0x74,
  0x10,
  0xeb,
  0x3a,
  0x74,
  0x5c,
  0xa7,
  0xca,
  0x70,
  0x09,
  0xe5,
  0x01,
  0x11,
  0x00,
  0xdd,
  0x09,
  0xdd,
  0xe5,
  0x11,
  0x11,
  0x00,
  0xaf,
  0x37,
  0xcd,
  0x56,
  0x05,
  0xdd,
  0xe1,
  0x30,
  0xf2,
  0x3e,
  0xfe,
  0xcd,
  0x01,
  0x16,
  0xfd,
  0x36,
  0x52,
  0x03,
  0x0e,
  0x80,
  0xdd,
  0x7e,
  0x00,
  0xdd,
  0xbe,
  0xef,
  0x20,
  0x02,
  0x0e,
  0xf6,
  0xfe,
  0x04,
  0x30,
  0xd9,
  0x11,
  0xc0,
  0x09,
  0xc5,
  0xcd,
  0x0a,
  0x0c,
  0xc1,
  0xdd,
  0xe5,
  0xd1,
  0x21,
  0xf0,
  0xff,
  0x19,
  0x06,
  0x0a,
  0x7e,
  0x3c,
  0x20,
  0x03,
  0x79,
  0x80,
  0x4f,
  0x13,
  0x1a,
  0xbe,
  0x23,
  0x20,
  0x01,
  0x0c,
  0xd7,
  0x10,
  0xf6,
  0xcb,
  0x79,
  0x20,
  0xb3,
  0x3e,
  0x0d,
  0xd7,
  0xe1,
  0xdd,
  0x7e,
  0x00,
  0xfe,
  0x03,
  0x28,
  0x0c,
  0x3a,
  0x74,
  0x5c,
  0x3d,
  0xca,
  0x08,
  0x08,
  0xfe,
  0x02,
  0xca,
  0xb6,
  0x08,
  0xe5,
  0xdd,
  0x6e,
  0xfa,
  0xdd,
  0x66,
  0xfb,
  0xdd,
  0x5e,
  0x0b,
  0xdd,
  0x56,
  0x0c,
  0x7c,
  0xb5,
  0x28,
  0x0d,
  0xed,
  0x52,
  0x38,
  0x26,
  0x28,
  0x07,
  0xdd,
  0x7e,
  0x00,
  0xfe,
  0x03,
  0x20,
  0x1d,
  0xe1,
  0x7c,
  0xb5,
  0x20,
  0x06,
  0xdd,
  0x6e,
  0x0d,
  0xdd,
  0x66,
  0x0e,
  0xe5,
  0xdd,
  0xe1,
  0x3a,
  0x74,
  0x5c,
  0xfe,
  0x02,
  0x37,
  0x20,
  0x01,
  0xa7,
  0x3e,
  0xff,
  0xcd,
  0x56,
  0x05,
  0xd8,
  0xcf,
  0x1a,
  0xdd,
  0x5e,
  0x0b,
  0xdd,
  0x56,
  0x0c,
  0xe5,
  0x7c,
  0xb5,
  0x20,
  0x06,
  0x13,
  0x13,
  0x13,
  0xeb,
  0x18,
  0x0c,
  0xdd,
  0x6e,
  0xfa,
  0xdd,
  0x66,
  0xfb,
  0xeb,
  0x37,
  0xed,
  0x52,
  0x38,
  0x09,
  0x11,
  0x05,
  0x00,
  0x19,
  0x44,
  0x4d,
  0xcd,
  0x05,
  0x1f,
  0xe1,
  0xdd,
  0x7e,
  0x00,
  0xa7,
  0x28,
  0x3e,
  0x7c,
  0xb5,
  0x28,
  0x13,
  0x2b,
  0x46,
  0x2b,
  0x4e,
  0x2b,
  0x03,
  0x03,
  0x03,
  0xdd,
  0x22,
  0x5f,
  0x5c,
  0xcd,
  0xe8,
  0x19,
  0xdd,
  0x2a,
  0x5f,
  0x5c,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xdd,
  0x4e,
  0x0b,
  0xdd,
  0x46,
  0x0c,
  0xc5,
  0x03,
  0x03,
  0x03,
  0xdd,
  0x7e,
  0xfd,
  0xf5,
  0xcd,
  0x55,
  0x16,
  0x23,
  0xf1,
  0x77,
  0xd1,
  0x23,
  0x73,
  0x23,
  0x72,
  0x23,
  0xe5,
  0xdd,
  0xe1,
  0x37,
  0x3e,
  0xff,
  0xc3,
  0x02,
  0x08,
  0xeb,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xdd,
  0x22,
  0x5f,
  0x5c,
  0xdd,
  0x4e,
  0x0b,
  0xdd,
  0x46,
  0x0c,
  0xc5,
  0xcd,
  0xe5,
  0x19,
  0xc1,
  0xe5,
  0xc5,
  0xcd,
  0x55,
  0x16,
  0xdd,
  0x2a,
  0x5f,
  0x5c,
  0x23,
  0xdd,
  0x4e,
  0x0f,
  0xdd,
  0x46,
  0x10,
  0x09,
  0x22,
  0x4b,
  0x5c,
  0xdd,
  0x66,
  0x0e,
  0x7c,
  0xe6,
  0xc0,
  0x20,
  0x0a,
  0xdd,
  0x6e,
  0x0d,
  0x22,
  0x42,
  0x5c,
  0xfd,
  0x36,
  0x0a,
  0x00,
  0xd1,
  0xdd,
  0xe1,
  0x37,
  0x3e,
  0xff,
  0xc3,
  0x02,
  0x08,
  0xdd,
  0x4e,
  0x0b,
  0xdd,
  0x46,
  0x0c,
  0xc5,
  0x03,
  0xf7,
  0x36,
  0x80,
  0xeb,
  0xd1,
  0xe5,
  0xe5,
  0xdd,
  0xe1,
  0x37,
  0x3e,
  0xff,
  0xcd,
  0x02,
  0x08,
  0xe1,
  0xed,
  0x5b,
  0x53,
  0x5c,
  0x7e,
  0xe6,
  0xc0,
  0x20,
  0x19,
  0x1a,
  0x13,
  0xbe,
  0x23,
  0x20,
  0x02,
  0x1a,
  0xbe,
  0x1b,
  0x2b,
  0x30,
  0x08,
  0xe5,
  0xeb,
  0xcd,
  0xb8,
  0x19,
  0xe1,
  0x18,
  0xec,
  0xcd,
  0x2c,
  0x09,
  0x18,
  0xe2,
  0x7e,
  0x4f,
  0xfe,
  0x80,
  0xc8,
  0xe5,
  0x2a,
  0x4b,
  0x5c,
  0x7e,
  0xfe,
  0x80,
  0x28,
  0x25,
  0xb9,
  0x28,
  0x08,
  0xc5,
  0xcd,
  0xb8,
  0x19,
  0xc1,
  0xeb,
  0x18,
  0xf0,
  0xe6,
  0xe0,
  0xfe,
  0xa0,
  0x20,
  0x12,
  0xd1,
  0xd5,
  0xe5,
  0x23,
  0x13,
  0x1a,
  0xbe,
  0x20,
  0x06,
  0x17,
  0x30,
  0xf7,
  0xe1,
  0x18,
  0x03,
  0xe1,
  0x18,
  0xe0,
  0x3e,
  0xff,
  0xd1,
  0xeb,
  0x3c,
  0x37,
  0xcd,
  0x2c,
  0x09,
  0x18,
  0xc4,
  0x20,
  0x10,
  0x08,
  0x22,
  0x5f,
  0x5c,
  0xeb,
  0xcd,
  0xb8,
  0x19,
  0xcd,
  0xe8,
  0x19,
  0xeb,
  0x2a,
  0x5f,
  0x5c,
  0x08,
  0x08,
  0xd5,
  0xcd,
  0xb8,
  0x19,
  0x22,
  0x5f,
  0x5c,
  0x2a,
  0x53,
  0x5c,
  0xe3,
  0xc5,
  0x08,
  0x38,
  0x07,
  0x2b,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x18,
  0x03,
  0xcd,
  0x55,
  0x16,
  0x23,
  0xc1,
  0xd1,
  0xed,
  0x53,
  0x53,
  0x5c,
  0xed,
  0x5b,
  0x5f,
  0x5c,
  0xc5,
  0xd5,
  0xeb,
  0xed,
  0xb0,
  0xe1,
  0xc1,
  0xd5,
  0xcd,
  0xe8,
  0x19,
  0xd1,
  0xc9,
  0xe5,
  0x3e,
  0xfd,
  0xcd,
  0x01,
  0x16,
  0xaf,
  0x11,
  0xa1,
  0x09,
  0xcd,
  0x0a,
  0x0c,
  0xfd,
  0xcb,
  0x02,
  0xee,
  0xcd,
  0xd4,
  0x15,
  0xdd,
  0xe5,
  0x11,
  0x11,
  0x00,
  0xaf,
  0xcd,
  0xc2,
  0x04,
  0xdd,
  0xe1,
  0x06,
  0x32,
  0x76,
  0x10,
  0xfd,
  0xdd,
  0x5e,
  0x0b,
  0xdd,
  0x56,
  0x0c,
  0x3e,
  0xff,
  0xdd,
  0xe1,
  0xc3,
  0xc2,
  0x04,
  0x80,
  0x53,
  0x74,
  0x61,
  0x72,
  0x74,
  0x20,
  0x74,
  0x61,
  0x70,
  0x65,
  0x2c,
  0x20,
  0x74,
  0x68,
  0x65,
  0x6e,
  0x20,
  0x70,
  0x72,
  0x65,
  0x73,
  0x73,
  0x20,
  0x61,
  0x6e,
  0x79,
  0x20,
  0x6b,
  0x65,
  0x79,
  0xae,
  0x0d,
  0x50,
  0x72,
  0x6f,
  0x67,
  0x72,
  0x61,
  0x6d,
  0x3a,
  0xa0,
  0x0d,
  0x4e,
  0x75,
  0x6d,
  0x62,
  0x65,
  0x72,
  0x20,
  0x61,
  0x72,
  0x72,
  0x61,
  0x79,
  0x3a,
  0xa0,
  0x0d,
  0x43,
  0x68,
  0x61,
  0x72,
  0x61,
  0x63,
  0x74,
  0x65,
  0x72,
  0x20,
  0x61,
  0x72,
  0x72,
  0x61,
  0x79,
  0x3a,
  0xa0,
  0x0d,
  0x42,
  0x79,
  0x74,
  0x65,
  0x73,
  0x3a,
  0xa0,
  0xcd,
  0x03,
  0x0b,
  0xfe,
  0x20,
  0xd2,
  0xd9,
  0x0a,
  0xfe,
  0x06,
  0x38,
  0x69,
  0xfe,
  0x18,
  0x30,
  0x65,
  0x21,
  0x0b,
  0x0a,
  0x5f,
  0x16,
  0x00,
  0x19,
  0x5e,
  0x19,
  0xe5,
  0xc3,
  0x03,
  0x0b,
  0x4e,
  0x57,
  0x10,
  0x29,
  0x54,
  0x53,
  0x52,
  0x37,
  0x50,
  0x4f,
  0x5f,
  0x5e,
  0x5d,
  0x5c,
  0x5b,
  0x5a,
  0x54,
  0x53,
  0x0c,
  0x3e,
  0x22,
  0xb9,
  0x20,
  0x11,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x20,
  0x09,
  0x04,
  0x0e,
  0x02,
  0x3e,
  0x18,
  0xb8,
  0x20,
  0x03,
  0x05,
  0x0e,
  0x21,
  0xc3,
  0xd9,
  0x0d,
  0x3a,
  0x91,
  0x5c,
  0xf5,
  0xfd,
  0x36,
  0x57,
  0x01,
  0x3e,
  0x20,
  0xcd,
  0x65,
  0x0b,
  0xf1,
  0x32,
  0x91,
  0x5c,
  0xc9,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0xc2,
  0xcd,
  0x0e,
  0x0e,
  0x21,
  0xcd,
  0x55,
  0x0c,
  0x05,
  0xc3,
  0xd9,
  0x0d,
  0xcd,
  0x03,
  0x0b,
  0x79,
  0x3d,
  0x3d,
  0xe6,
  0x10,
  0x18,
  0x5a,
  0x3e,
  0x3f,
  0x18,
  0x6c,
  0x11,
  0x87,
  0x0a,
  0x32,
  0x0f,
  0x5c,
  0x18,
  0x0b,
  0x11,
  0x6d,
  0x0a,
  0x18,
  0x03,
  0x11,
  0x87,
  0x0a,
  0x32,
  0x0e,
  0x5c,
  0x2a,
  0x51,
  0x5c,
  0x73,
  0x23,
  0x72,
  0xc9,
  0x11,
  0xf4,
  0x09,
  0xcd,
  0x80,
  0x0a,
  0x2a,
  0x0e,
  0x5c,
  0x57,
  0x7d,
  0xfe,
  0x16,
  0xda,
  0x11,
  0x22,
  0x20,
  0x29,
  0x44,
  0x4a,
  0x3e,
  0x1f,
  0x91,
  0x38,
  0x0c,
  0xc6,
  0x02,
  0x4f,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x20,
  0x16,
  0x3e,
  0x16,
  0x90,
  0xda,
  0x9f,
  0x1e,
  0x3c,
  0x47,
  0x04,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0xc2,
  0x55,
  0x0c,
  0xfd,
  0xbe,
  0x31,
  0xda,
  0x86,
  0x0c,
  0xc3,
  0xd9,
  0x0d,
  0x7c,
  0xcd,
  0x03,
  0x0b,
  0x81,
  0x3d,
  0xe6,
  0x1f,
  0xc8,
  0x57,
  0xfd,
  0xcb,
  0x01,
  0xc6,
  0x3e,
  0x20,
  0xcd,
  0x3b,
  0x0c,
  0x15,
  0x20,
  0xf8,
  0xc9,
  0xcd,
  0x24,
  0x0b,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x20,
  0x1a,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0x20,
  0x08,
  0xed,
  0x43,
  0x88,
  0x5c,
  0x22,
  0x84,
  0x5c,
  0xc9,
  0xed,
  0x43,
  0x8a,
  0x5c,
  0xed,
  0x43,
  0x82,
  0x5c,
  0x22,
  0x86,
  0x5c,
  0xc9,
  0xfd,
  0x71,
  0x45,
  0x22,
  0x80,
  0x5c,
  0xc9,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x20,
  0x14,
  0xed,
  0x4b,
  0x88,
  0x5c,
  0x2a,
  0x84,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0xc8,
  0xed,
  0x4b,
  0x8a,
  0x5c,
  0x2a,
  0x86,
  0x5c,
  0xc9,
  0xfd,
  0x4e,
  0x45,
  0x2a,
  0x80,
  0x5c,
  0xc9,
  0xfe,
  0x80,
  0x38,
  0x3d,
  0xfe,
  0x90,
  0x30,
  0x26,
  0x47,
  0xcd,
  0x38,
  0x0b,
  0xcd,
  0x03,
  0x0b,
  0x11,
  0x92,
  0x5c,
  0x18,
  0x47,
  0x21,
  0x92,
  0x5c,
  0xcd,
  0x3e,
  0x0b,
  0xcb,
  0x18,
  0x9f,
  0xe6,
  0x0f,
  0x4f,
  0xcb,
  0x18,
  0x9f,
  0xe6,
  0xf0,
  0xb1,
  0x0e,
  0x04,
  0x77,
  0x23,
  0x0d,
  0x20,
  0xfb,
  0xc9,
  0xd6,
  0xa5,
  0x30,
  0x09,
  0xc6,
  0x15,
  0xc5,
  0xed,
  0x4b,
  0x7b,
  0x5c,
  0x18,
  0x0b,
  0xcd,
  0x10,
  0x0c,
  0xc3,
  0x03,
  0x0b,
  0xc5,
  0xed,
  0x4b,
  0x36,
  0x5c,
  0xeb,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0x86,
  0xfe,
  0x20,
  0x20,
  0x02,
  0xcb,
  0xc6,
  0x26,
  0x00,
  0x6f,
  0x29,
  0x29,
  0x29,
  0x09,
  0xc1,
  0xeb,
  0x79,
  0x3d,
  0x3e,
  0x21,
  0x20,
  0x0e,
  0x05,
  0x4f,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x28,
  0x06,
  0xd5,
  0xcd,
  0xcd,
  0x0e,
  0xd1,
  0x79,
  0xb9,
  0xd5,
  0xcc,
  0x55,
  0x0c,
  0xd1,
  0xc5,
  0xe5,
  0x3a,
  0x91,
  0x5c,
  0x06,
  0xff,
  0x1f,
  0x38,
  0x01,
  0x04,
  0x1f,
  0x1f,
  0x9f,
  0x4f,
  0x3e,
  0x08,
  0xa7,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x28,
  0x05,
  0xfd,
  0xcb,
  0x30,
  0xce,
  0x37,
  0xeb,
  0x08,
  0x1a,
  0xa0,
  0xae,
  0xa9,
  0x12,
  0x08,
  0x38,
  0x13,
  0x14,
  0x23,
  0x3d,
  0x20,
  0xf2,
  0xeb,
  0x25,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0xcc,
  0xdb,
  0x0b,
  0xe1,
  0xc1,
  0x0d,
  0x23,
  0xc9,
  0x08,
  0x3e,
  0x20,
  0x83,
  0x5f,
  0x08,
  0x18,
  0xe6,
  0x7c,
  0x0f,
  0x0f,
  0x0f,
  0xe6,
  0x03,
  0xf6,
  0x58,
  0x67,
  0xed,
  0x5b,
  0x8f,
  0x5c,
  0x7e,
  0xab,
  0xa2,
  0xab,
  0xfd,
  0xcb,
  0x57,
  0x76,
  0x28,
  0x08,
  0xe6,
  0xc7,
  0xcb,
  0x57,
  0x20,
  0x02,
  0xee,
  0x38,
  0xfd,
  0xcb,
  0x57,
  0x66,
  0x28,
  0x08,
  0xe6,
  0xf8,
  0xcb,
  0x6f,
  0x20,
  0x02,
  0xee,
  0x07,
  0x77,
  0xc9,
  0xe5,
  0x26,
  0x00,
  0xe3,
  0x18,
  0x04,
  0x11,
  0x95,
  0x00,
  0xf5,
  0xcd,
  0x41,
  0x0c,
  0x38,
  0x09,
  0x3e,
  0x20,
  0xfd,
  0xcb,
  0x01,
  0x46,
  0xcc,
  0x3b,
  0x0c,
  0x1a,
  0xe6,
  0x7f,
  0xcd,
  0x3b,
  0x0c,
  0x1a,
  0x13,
  0x87,
  0x30,
  0xf5,
  0xd1,
  0xfe,
  0x48,
  0x28,
  0x03,
  0xfe,
  0x82,
  0xd8,
  0x7a,
  0xfe,
  0x03,
  0xd8,
  0x3e,
  0x20,
  0xd5,
  0xd9,
  0xd7,
  0xd9,
  0xd1,
  0xc9,
  0xf5,
  0xeb,
  0x3c,
  0xcb,
  0x7e,
  0x23,
  0x28,
  0xfb,
  0x3d,
  0x20,
  0xf8,
  0xeb,
  0xf1,
  0xfe,
  0x20,
  0xd8,
  0x1a,
  0xd6,
  0x41,
  0xc9,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0xc0,
  0x11,
  0xd9,
  0x0d,
  0xd5,
  0x78,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0xc2,
  0x02,
  0x0d,
  0xfd,
  0xbe,
  0x31,
  0x38,
  0x1b,
  0xc0,
  0xfd,
  0xcb,
  0x02,
  0x66,
  0x28,
  0x16,
  0xfd,
  0x5e,
  0x2d,
  0x1d,
  0x28,
  0x5a,
  0x3e,
  0x00,
  0xcd,
  0x01,
  0x16,
  0xed,
  0x7b,
  0x3f,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0xa6,
  0xc9,
  0xcf,
  0x04,
  0xfd,
  0x35,
  0x52,
  0x20,
  0x45,
  0x3e,
  0x18,
  0x90,
  0x32,
  0x8c,
  0x5c,
  0x2a,
  0x8f,
  0x5c,
  0xe5,
  0x3a,
  0x91,
  0x5c,
  0xf5,
  0x3e,
  0xfd,
  0xcd,
  0x01,
  0x16,
  0xaf,
  0x11,
  0xf8,
  0x0c,
  0xcd,
  0x0a,
  0x0c,
  0xfd,
  0xcb,
  0x02,
  0xee,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0xde,
  0xcb,
  0xae,
  0xd9,
  0xcd,
  0xd4,
  0x15,
  0xd9,
  0xfe,
  0x20,
  0x28,
  0x45,
  0xfe,
  0xe2,
  0x28,
  0x41,
  0xf6,
  0x20,
  0xfe,
  0x6e,
  0x28,
  0x3b,
  0x3e,
  0xfe,
  0xcd,
  0x01,
  0x16,
  0xf1,
  0x32,
  0x91,
  0x5c,
  0xe1,
  0x22,
  0x8f,
  0x5c,
  0xcd,
  0xfe,
  0x0d,
  0xfd,
  0x46,
  0x31,
  0x04,
  0x0e,
  0x21,
  0xc5,
  0xcd,
  0x9b,
  0x0e,
  0x7c,
  0x0f,
  0x0f,
  0x0f,
  0xe6,
  0x03,
  0xf6,
  0x58,
  0x67,
  0x11,
  0xe0,
  0x5a,
  0x1a,
  0x4e,
  0x06,
  0x20,
  0xeb,
  0x12,
  0x71,
  0x13,
  0x23,
  0x10,
  0xfa,
  0xc1,
  0xc9,
  0x80,
  0x73,
  0x63,
  0x72,
  0x6f,
  0x6c,
  0x6c,
  0xbf,
  0xcf,
  0x0c,
  0xfe,
  0x02,
  0x38,
  0x80,
  0xfd,
  0x86,
  0x31,
  0xd6,
  0x19,
  0xd0,
  0xed,
  0x44,
  0xc5,
  0x47,
  0x2a,
  0x8f,
  0x5c,
  0xe5,
  0x2a,
  0x91,
  0x5c,
  0xe5,
  0xcd,
  0x4d,
  0x0d,
  0x78,
  0xf5,
  0x21,
  0x6b,
  0x5c,
  0x46,
  0x78,
  0x3c,
  0x77,
  0x21,
  0x89,
  0x5c,
  0xbe,
  0x38,
  0x03,
  0x34,
  0x06,
  0x18,
  0xcd,
  0x00,
  0x0e,
  0xf1,
  0x3d,
  0x20,
  0xe8,
  0xe1,
  0xfd,
  0x75,
  0x57,
  0xe1,
  0x22,
  0x8f,
  0x5c,
  0xed,
  0x4b,
  0x88,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xcd,
  0xd9,
  0x0d,
  0xfd,
  0xcb,
  0x02,
  0xc6,
  0xc1,
  0xc9,
  0xaf,
  0x2a,
  0x8d,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0x28,
  0x04,
  0x67,
  0xfd,
  0x6e,
  0x0e,
  0x22,
  0x8f,
  0x5c,
  0x21,
  0x91,
  0x5c,
  0x20,
  0x02,
  0x7e,
  0x0f,
  0xae,
  0xe6,
  0x55,
  0xae,
  0x77,
  0xc9,
  0xcd,
  0xaf,
  0x0d,
  0x21,
  0x3c,
  0x5c,
  0xcb,
  0xae,
  0xcb,
  0xc6,
  0xcd,
  0x4d,
  0x0d,
  0xfd,
  0x46,
  0x31,
  0xcd,
  0x44,
  0x0e,
  0x21,
  0xc0,
  0x5a,
  0x3a,
  0x8d,
  0x5c,
  0x05,
  0x18,
  0x07,
  0x0e,
  0x20,
  0x2b,
  0x77,
  0x0d,
  0x20,
  0xfb,
  0x10,
  0xf7,
  0xfd,
  0x36,
  0x31,
  0x02,
  0x3e,
  0xfd,
  0xcd,
  0x01,
  0x16,
  0x2a,
  0x51,
  0x5c,
  0x11,
  0xf4,
  0x09,
  0xa7,
  0x73,
  0x23,
  0x72,
  0x23,
  0x11,
  0xa8,
  0x10,
  0x3f,
  0x38,
  0xf6,
  0x01,
  0x21,
  0x17,
  0x18,
  0x2a,
  0x21,
  0x00,
  0x00,
  0x22,
  0x7d,
  0x5c,
  0xfd,
  0xcb,
  0x30,
  0x86,
  0xcd,
  0x94,
  0x0d,
  0x3e,
  0xfe,
  0xcd,
  0x01,
  0x16,
  0xcd,
  0x4d,
  0x0d,
  0x06,
  0x18,
  0xcd,
  0x44,
  0x0e,
  0x2a,
  0x51,
  0x5c,
  0x11,
  0xf4,
  0x09,
  0x73,
  0x23,
  0x72,
  0xfd,
  0x36,
  0x52,
  0x01,
  0x01,
  0x21,
  0x18,
  0x21,
  0x00,
  0x5b,
  0xfd,
  0xcb,
  0x01,
  0x4e,
  0x20,
  0x12,
  0x78,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0x28,
  0x05,
  0xfd,
  0x86,
  0x31,
  0xd6,
  0x18,
  0xc5,
  0x47,
  0xcd,
  0x9b,
  0x0e,
  0xc1,
  0x3e,
  0x21,
  0x91,
  0x5f,
  0x16,
  0x00,
  0x19,
  0xc3,
  0xdc,
  0x0a,
  0x06,
  0x17,
  0xcd,
  0x9b,
  0x0e,
  0x0e,
  0x08,
  0xc5,
  0xe5,
  0x78,
  0xe6,
  0x07,
  0x78,
  0x20,
  0x0c,
  0xeb,
  0x21,
  0xe0,
  0xf8,
  0x19,
  0xeb,
  0x01,
  0x20,
  0x00,
  0x3d,
  0xed,
  0xb0,
  0xeb,
  0x21,
  0xe0,
  0xff,
  0x19,
  0xeb,
  0x47,
  0xe6,
  0x07,
  0x0f,
  0x0f,
  0x0f,
  0x4f,
  0x78,
  0x06,
  0x00,
  0xed,
  0xb0,
  0x06,
  0x07,
  0x09,
  0xe6,
  0xf8,
  0x20,
  0xdb,
  0xe1,
  0x24,
  0xc1,
  0x0d,
  0x20,
  0xcd,
  0xcd,
  0x88,
  0x0e,
  0x21,
  0xe0,
  0xff,
  0x19,
  0xeb,
  0xed,
  0xb0,
  0x06,
  0x01,
  0xc5,
  0xcd,
  0x9b,
  0x0e,
  0x0e,
  0x08,
  0xc5,
  0xe5,
  0x78,
  0xe6,
  0x07,
  0x0f,
  0x0f,
  0x0f,
  0x4f,
  0x78,
  0x06,
  0x00,
  0x0d,
  0x54,
  0x5d,
  0x36,
  0x00,
  0x13,
  0xed,
  0xb0,
  0x11,
  0x01,
  0x07,
  0x19,
  0x3d,
  0xe6,
  0xf8,
  0x47,
  0x20,
  0xe5,
  0xe1,
  0x24,
  0xc1,
  0x0d,
  0x20,
  0xdc,
  0xcd,
  0x88,
  0x0e,
  0x62,
  0x6b,
  0x13,
  0x3a,
  0x8d,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0x46,
  0x28,
  0x03,
  0x3a,
  0x48,
  0x5c,
  0x77,
  0x0b,
  0xed,
  0xb0,
  0xc1,
  0x0e,
  0x21,
  0xc9,
  0x7c,
  0x0f,
  0x0f,
  0x0f,
  0x3d,
  0xf6,
  0x50,
  0x67,
  0xeb,
  0x61,
  0x68,
  0x29,
  0x29,
  0x29,
  0x29,
  0x29,
  0x44,
  0x4d,
  0xc9,
  0x3e,
  0x18,
  0x90,
  0x57,
  0x0f,
  0x0f,
  0x0f,
  0xe6,
  0xe0,
  0x6f,
  0x7a,
  0xe6,
  0x18,
  0xf6,
  0x40,
  0x67,
  0xc9,
  0xf3,
  0x06,
  0xb0,
  0x21,
  0x00,
  0x40,
  0xe5,
  0xc5,
  0xcd,
  0xf4,
  0x0e,
  0xc1,
  0xe1,
  0x24,
  0x7c,
  0xe6,
  0x07,
  0x20,
  0x0a,
  0x7d,
  0xc6,
  0x20,
  0x6f,
  0x3f,
  0x9f,
  0xe6,
  0xf8,
  0x84,
  0x67,
  0x10,
  0xe7,
  0x18,
  0x0d,
  0xf3,
  0x21,
  0x00,
  0x5b,
  0x06,
  0x08,
  0xc5,
  0xcd,
  0xf4,
  0x0e,
  0xc1,
  0x10,
  0xf9,
  0x3e,
  0x04,
  0xd3,
  0xfb,
  0xfb,
  0x21,
  0x00,
  0x5b,
  0xfd,
  0x75,
  0x46,
  0xaf,
  0x47,
  0x77,
  0x23,
  0x10,
  0xfc,
  0xfd,
  0xcb,
  0x30,
  0x8e,
  0x0e,
  0x21,
  0xc3,
  0xd9,
  0x0d,
  0x78,
  0xfe,
  0x03,
  0x9f,
  0xe6,
  0x02,
  0xd3,
  0xfb,
  0x57,
  0xcd,
  0x54,
  0x1f,
  0x38,
  0x0a,
  0x3e,
  0x04,
  0xd3,
  0xfb,
  0xfb,
  0xcd,
  0xdf,
  0x0e,
  0xcf,
  0x0c,
  0xdb,
  0xfb,
  0x87,
  0xf8,
  0x30,
  0xeb,
  0x0e,
  0x20,
  0x5e,
  0x23,
  0x06,
  0x08,
  0xcb,
  0x12,
  0xcb,
  0x13,
  0xcb,
  0x1a,
  0xdb,
  0xfb,
  0x1f,
  0x30,
  0xfb,
  0x7a,
  0xd3,
  0xfb,
  0x10,
  0xf0,
  0x0d,
  0x20,
  0xe9,
  0xc9,
  0x2a,
  0x3d,
  0x5c,
  0xe5,
  0x21,
  0x7f,
  0x10,
  0xe5,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0xcd,
  0xd4,
  0x15,
  0xf5,
  0x16,
  0x00,
  0xfd,
  0x5e,
  0xff,
  0x21,
  0xc8,
  0x00,
  0xcd,
  0xb5,
  0x03,
  0xf1,
  0x21,
  0x38,
  0x0f,
  0xe5,
  0xfe,
  0x18,
  0x30,
  0x31,
  0xfe,
  0x07,
  0x38,
  0x2d,
  0xfe,
  0x10,
  0x38,
  0x3a,
  0x01,
  0x02,
  0x00,
  0x57,
  0xfe,
  0x16,
  0x38,
  0x0c,
  0x03,
  0xfd,
  0xcb,
  0x37,
  0x7e,
  0xca,
  0x1e,
  0x10,
  0xcd,
  0xd4,
  0x15,
  0x5f,
  0xcd,
  0xd4,
  0x15,
  0xd5,
  0x2a,
  0x5b,
  0x5c,
  0xfd,
  0xcb,
  0x07,
  0x86,
  0xcd,
  0x55,
  0x16,
  0xc1,
  0x23,
  0x70,
  0x23,
  0x71,
  0x18,
  0x0a,
  0xfd,
  0xcb,
  0x07,
  0x86,
  0x2a,
  0x5b,
  0x5c,
  0xcd,
  0x52,
  0x16,
  0x12,
  0x13,
  0xed,
  0x53,
  0x5b,
  0x5c,
  0xc9,
  0x5f,
  0x16,
  0x00,
  0x21,
  0x99,
  0x0f,
  0x19,
  0x5e,
  0x19,
  0xe5,
  0x2a,
  0x5b,
  0x5c,
  0xc9,
  0x09,
  0x66,
  0x6a,
  0x50,
  0xb5,
  0x70,
  0x7e,
  0xcf,
  0xd4,
  0x2a,
  0x49,
  0x5c,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0xc2,
  0x97,
  0x10,
  0xcd,
  0x6e,
  0x19,
  0xcd,
  0x95,
  0x16,
  0x7a,
  0xb3,
  0xca,
  0x97,
  0x10,
  0xe5,
  0x23,
  0x4e,
  0x23,
  0x46,
  0x21,
  0x0a,
  0x00,
  0x09,
  0x44,
  0x4d,
  0xcd,
  0x05,
  0x1f,
  0xcd,
  0x97,
  0x10,
  0x2a,
  0x51,
  0x5c,
  0xe3,
  0xe5,
  0x3e,
  0xff,
  0xcd,
  0x01,
  0x16,
  0xe1,
  0x2b,
  0xfd,
  0x35,
  0x0f,
  0xcd,
  0x55,
  0x18,
  0xfd,
  0x34,
  0x0f,
  0x2a,
  0x59,
  0x5c,
  0x23,
  0x23,
  0x23,
  0x23,
  0x22,
  0x5b,
  0x5c,
  0xe1,
  0xcd,
  0x15,
  0x16,
  0xc9,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0x20,
  0x08,
  0x21,
  0x49,
  0x5c,
  0xcd,
  0x0f,
  0x19,
  0x18,
  0x6d,
  0xfd,
  0x36,
  0x00,
  0x10,
  0x18,
  0x1d,
  0xcd,
  0x31,
  0x10,
  0x18,
  0x05,
  0x7e,
  0xfe,
  0x0d,
  0xc8,
  0x23,
  0x22,
  0x5b,
  0x5c,
  0xc9,
  0xcd,
  0x31,
  0x10,
  0x01,
  0x01,
  0x00,
  0xc3,
  0xe8,
  0x19,
  0xcd,
  0xd4,
  0x15,
  0xcd,
  0xd4,
  0x15,
  0xe1,
  0xe1,
  0xe1,
  0x22,
  0x3d,
  0x5c,
  0xfd,
  0xcb,
  0x00,
  0x7e,
  0xc0,
  0xf9,
  0xc9,
  0x37,
  0xcd,
  0x95,
  0x11,
  0xed,
  0x52,
  0x19,
  0x23,
  0xc1,
  0xd8,
  0xc5,
  0x44,
  0x4d,
  0x62,
  0x6b,
  0x23,
  0x1a,
  0xe6,
  0xf0,
  0xfe,
  0x10,
  0x20,
  0x09,
  0x23,
  0x1a,
  0xd6,
  0x17,
  0xce,
  0x00,
  0x20,
  0x01,
  0x23,
  0xa7,
  0xed,
  0x42,
  0x09,
  0xeb,
  0x38,
  0xe6,
  0xc9,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0xc0,
  0x2a,
  0x49,
  0x5c,
  0xcd,
  0x6e,
  0x19,
  0xeb,
  0xcd,
  0x95,
  0x16,
  0x21,
  0x4a,
  0x5c,
  0xcd,
  0x1c,
  0x19,
  0xcd,
  0x95,
  0x17,
  0x3e,
  0x00,
  0xc3,
  0x01,
  0x16,
  0xfd,
  0xcb,
  0x37,
  0x7e,
  0x28,
  0xa8,
  0xc3,
  0x81,
  0x0f,
  0xfd,
  0xcb,
  0x30,
  0x66,
  0x28,
  0xa1,
  0xfd,
  0x36,
  0x00,
  0xff,
  0x16,
  0x00,
  0xfd,
  0x5e,
  0xfe,
  0x21,
  0x90,
  0x1a,
  0xcd,
  0xb5,
  0x03,
  0xc3,
  0x30,
  0x0f,
  0xe5,
  0xcd,
  0x90,
  0x11,
  0x2b,
  0xcd,
  0xe5,
  0x19,
  0x22,
  0x5b,
  0x5c,
  0xfd,
  0x36,
  0x07,
  0x00,
  0xe1,
  0xc9,
  0xfd,
  0xcb,
  0x02,
  0x5e,
  0xc4,
  0x1d,
  0x11,
  0xa7,
  0xfd,
  0xcb,
  0x01,
  0x6e,
  0xc8,
  0x3a,
  0x08,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xae,
  0xf5,
  0xfd,
  0xcb,
  0x02,
  0x6e,
  0xc4,
  0x6e,
  0x0d,
  0xf1,
  0xfe,
  0x20,
  0x30,
  0x52,
  0xfe,
  0x10,
  0x30,
  0x2d,
  0xfe,
  0x06,
  0x30,
  0x0a,
  0x47,
  0xe6,
  0x01,
  0x4f,
  0x78,
  0x1f,
  0xc6,
  0x12,
  0x18,
  0x2a,
  0x20,
  0x09,
  0x21,
  0x6a,
  0x5c,
  0x3e,
  0x08,
  0xae,
  0x77,
  0x18,
  0x0e,
  0xfe,
  0x0e,
  0xd8,
  0xd6,
  0x0d,
  0x21,
  0x41,
  0x5c,
  0xbe,
  0x77,
  0x20,
  0x02,
  0x36,
  0x00,
  0xfd,
  0xcb,
  0x02,
  0xde,
  0xbf,
  0xc9,
  0x47,
  0xe6,
  0x07,
  0x4f,
  0x3e,
  0x10,
  0xcb,
  0x58,
  0x20,
  0x01,
  0x3c,
  0xfd,
  0x71,
  0xd3,
  0x11,
  0x0d,
  0x11,
  0x18,
  0x06,
  0x3a,
  0x0d,
  0x5c,
  0x11,
  0xa8,
  0x10,
  0x2a,
  0x4f,
  0x5c,
  0x23,
  0x23,
  0x73,
  0x23,
  0x72,
  0x37,
  0xc9,
  0xcd,
  0x4d,
  0x0d,
  0xfd,
  0xcb,
  0x02,
  0x9e,
  0xfd,
  0xcb,
  0x02,
  0xae,
  0x2a,
  0x8a,
  0x5c,
  0xe5,
  0x2a,
  0x3d,
  0x5c,
  0xe5,
  0x21,
  0x67,
  0x11,
  0xe5,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0x2a,
  0x82,
  0x5c,
  0xe5,
  0x37,
  0xcd,
  0x95,
  0x11,
  0xeb,
  0xcd,
  0x7d,
  0x18,
  0xeb,
  0xcd,
  0xe1,
  0x18,
  0x2a,
  0x8a,
  0x5c,
  0xe3,
  0xeb,
  0xcd,
  0x4d,
  0x0d,
  0x3a,
  0x8b,
  0x5c,
  0x92,
  0x38,
  0x26,
  0x20,
  0x06,
  0x7b,
  0xfd,
  0x96,
  0x50,
  0x30,
  0x1e,
  0x3e,
  0x20,
  0xd5,
  0xcd,
  0xf4,
  0x09,
  0xd1,
  0x18,
  0xe9,
  0x16,
  0x00,
  0xfd,
  0x5e,
  0xfe,
  0x21,
  0x90,
  0x1a,
  0xcd,
  0xb5,
  0x03,
  0xfd,
  0x36,
  0x00,
  0xff,
  0xed,
  0x5b,
  0x8a,
  0x5c,
  0x18,
  0x02,
  0xd1,
  0xe1,
  0xe1,
  0x22,
  0x3d,
  0x5c,
  0xc1,
  0xd5,
  0xcd,
  0xd9,
  0x0d,
  0xe1,
  0x22,
  0x82,
  0x5c,
  0xfd,
  0x36,
  0x26,
  0x00,
  0xc9,
  0x2a,
  0x61,
  0x5c,
  0x2b,
  0xa7,
  0xed,
  0x5b,
  0x59,
  0x5c,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0xc8,
  0xed,
  0x5b,
  0x61,
  0x5c,
  0xd8,
  0x2a,
  0x63,
  0x5c,
  0xc9,
  0x7e,
  0xfe,
  0x0e,
  0x01,
  0x06,
  0x00,
  0xcc,
  0xe8,
  0x19,
  0x7e,
  0x23,
  0xfe,
  0x0d,
  0x20,
  0xf1,
  0xc9,
  0xf3,
  0x3e,
  0xff,
  0xed,
  0x5b,
  0xb2,
  0x5c,
  0xd9,
  0xed,
  0x4b,
  0xb4,
  0x5c,
  0xed,
  0x5b,
  0x38,
  0x5c,
  0x2a,
  0x7b,
  0x5c,
  0xd9,
  0x47,
  0x3e,
  0x07,
  0xd3,
  0xfe,
  0x3e,
  0x3f,
  0xed,
  0x47,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x62,
  0x6b,
  0x36,
  0x02,
  0x2b,
  0xbc,
  0x20,
  0xfa,
  0xa7,
  0xed,
  0x52,
  0x19,
  0x23,
  0x30,
  0x06,
  0x35,
  0x28,
  0x03,
  0x35,
  0x28,
  0xf3,
  0x2b,
  0xd9,
  0xed,
  0x43,
  0xb4,
  0x5c,
  0xed,
  0x53,
  0x38,
  0x5c,
  0x22,
  0x7b,
  0x5c,
  0xd9,
  0x04,
  0x28,
  0x19,
  0x22,
  0xb4,
  0x5c,
  0x11,
  0xaf,
  0x3e,
  0x01,
  0xa8,
  0x00,
  0xeb,
  0xed,
  0xb8,
  0xeb,
  0x23,
  0x22,
  0x7b,
  0x5c,
  0x2b,
  0x01,
  0x40,
  0x00,
  0xed,
  0x43,
  0x38,
  0x5c,
  0x22,
  0xb2,
  0x5c,
  0x21,
  0x00,
  0x3c,
  0x22,
  0x36,
  0x5c,
  0x2a,
  0xb2,
  0x5c,
  0x36,
  0x3e,
  0x2b,
  0xf9,
  0x2b,
  0x2b,
  0x22,
  0x3d,
  0x5c,
  0xed,
  0x56,
  0xfd,
  0x21,
  0x3a,
  0x5c,
  0xfb,
  0x21,
  0xb6,
  0x5c,
  0x22,
  0x4f,
  0x5c,
  0x11,
  0xaf,
  0x15,
  0x01,
  0x15,
  0x00,
  0xeb,
  0xed,
  0xb0,
  0xeb,
  0x2b,
  0x22,
  0x57,
  0x5c,
  0x23,
  0x22,
  0x53,
  0x5c,
  0x22,
  0x4b,
  0x5c,
  0x36,
  0x80,
  0x23,
  0x22,
  0x59,
  0x5c,
  0x36,
  0x0d,
  0x23,
  0x36,
  0x80,
  0x23,
  0x22,
  0x61,
  0x5c,
  0x22,
  0x63,
  0x5c,
  0x22,
  0x65,
  0x5c,
  0x3e,
  0x38,
  0x32,
  0x8d,
  0x5c,
  0x32,
  0x8f,
  0x5c,
  0x32,
  0x48,
  0x5c,
  0x21,
  0x23,
  0x05,
  0x22,
  0x09,
  0x5c,
  0xfd,
  0x35,
  0xc6,
  0xfd,
  0x35,
  0xca,
  0x21,
  0xc6,
  0x15,
  0x11,
  0x10,
  0x5c,
  0x01,
  0x0e,
  0x00,
  0xed,
  0xb0,
  0xfd,
  0xcb,
  0x01,
  0xce,
  0xcd,
  0xdf,
  0x0e,
  0xfd,
  0x36,
  0x31,
  0x02,
  0xcd,
  0x6b,
  0x0d,
  0xaf,
  0x11,
  0x38,
  0x15,
  0xcd,
  0x0a,
  0x0c,
  0xfd,
  0xcb,
  0x02,
  0xee,
  0x18,
  0x07,
  0xfd,
  0x36,
  0x31,
  0x02,
  0xcd,
  0x95,
  0x17,
  0xcd,
  0xb0,
  0x16,
  0x3e,
  0x00,
  0xcd,
  0x01,
  0x16,
  0xcd,
  0x2c,
  0x0f,
  0xcd,
  0x17,
  0x1b,
  0xfd,
  0xcb,
  0x00,
  0x7e,
  0x20,
  0x12,
  0xfd,
  0xcb,
  0x30,
  0x66,
  0x28,
  0x40,
  0x2a,
  0x59,
  0x5c,
  0xcd,
  0xa7,
  0x11,
  0xfd,
  0x36,
  0x00,
  0xff,
  0x18,
  0xdd,
  0x2a,
  0x59,
  0x5c,
  0x22,
  0x5d,
  0x5c,
  0xcd,
  0xfb,
  0x19,
  0x78,
  0xb1,
  0xc2,
  0x5d,
  0x15,
  0xdf,
  0xfe,
  0x0d,
  0x28,
  0xc0,
  0xfd,
  0xcb,
  0x30,
  0x46,
  0xc4,
  0xaf,
  0x0d,
  0xcd,
  0x6e,
  0x0d,
  0x3e,
  0x19,
  0xfd,
  0x96,
  0x4f,
  0x32,
  0x8c,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xfe,
  0xfd,
  0x36,
  0x00,
  0xff,
  0xfd,
  0x36,
  0x0a,
  0x01,
  0xcd,
  0x8a,
  0x1b,
  0x76,
  0xfd,
  0xcb,
  0x01,
  0xae,
  0xfd,
  0xcb,
  0x30,
  0x4e,
  0xc4,
  0xcd,
  0x0e,
  0x3a,
  0x3a,
  0x5c,
  0x3c,
  0xf5,
  0x21,
  0x00,
  0x00,
  0xfd,
  0x74,
  0x37,
  0xfd,
  0x74,
  0x26,
  0x22,
  0x0b,
  0x5c,
  0x21,
  0x01,
  0x00,
  0x22,
  0x16,
  0x5c,
  0xcd,
  0xb0,
  0x16,
  0xfd,
  0xcb,
  0x37,
  0xae,
  0xcd,
  0x6e,
  0x0d,
  0xfd,
  0xcb,
  0x02,
  0xee,
  0xf1,
  0x47,
  0xfe,
  0x0a,
  0x38,
  0x02,
  0xc6,
  0x07,
  0xcd,
  0xef,
  0x15,
  0x3e,
  0x20,
  0xd7,
  0x78,
  0x11,
  0x91,
  0x13,
  0xcd,
  0x0a,
  0x0c,
  0xaf,
  0x11,
  0x36,
  0x15,
  0xcd,
  0x0a,
  0x0c,
  0xed,
  0x4b,
  0x45,
  0x5c,
  0xcd,
  0x1b,
  0x1a,
  0x3e,
  0x3a,
  0xd7,
  0xfd,
  0x4e,
  0x0d,
  0x06,
  0x00,
  0xcd,
  0x1b,
  0x1a,
  0xcd,
  0x97,
  0x10,
  0x3a,
  0x3a,
  0x5c,
  0x3c,
  0x28,
  0x1b,
  0xfe,
  0x09,
  0x28,
  0x04,
  0xfe,
  0x15,
  0x20,
  0x03,
  0xfd,
  0x34,
  0x0d,
  0x01,
  0x03,
  0x00,
  0x11,
  0x70,
  0x5c,
  0x21,
  0x44,
  0x5c,
  0xcb,
  0x7e,
  0x28,
  0x01,
  0x09,
  0xed,
  0xb8,
  0xfd,
  0x36,
  0x0a,
  0xff,
  0xfd,
  0xcb,
  0x01,
  0x9e,
  0xc3,
  0xac,
  0x12,
  0x80,
  0x4f,
  0xcb,
  0x4e,
  0x45,
  0x58,
  0x54,
  0x20,
  0x77,
  0x69,
  0x74,
  0x68,
  0x6f,
  0x75,
  0x74,
  0x20,
  0x46,
  0x4f,
  0xd2,
  0x56,
  0x61,
  0x72,
  0x69,
  0x61,
  0x62,
  0x6c,
  0x65,
  0x20,
  0x6e,
  0x6f,
  0x74,
  0x20,
  0x66,
  0x6f,
  0x75,
  0x6e,
  0xe4,
  0x53,
  0x75,
  0x62,
  0x73,
  0x63,
  0x72,
  0x69,
  0x70,
  0x74,
  0x20,
  0x77,
  0x72,
  0x6f,
  0x6e,
  0xe7,
  0x4f,
  0x75,
  0x74,
  0x20,
  0x6f,
  0x66,
  0x20,
  0x6d,
  0x65,
  0x6d,
  0x6f,
  0x72,
  0xf9,
  0x4f,
  0x75,
  0x74,
  0x20,
  0x6f,
  0x66,
  0x20,
  0x73,
  0x63,
  0x72,
  0x65,
  0x65,
  0xee,
  0x4e,
  0x75,
  0x6d,
  0x62,
  0x65,
  0x72,
  0x20,
  0x74,
  0x6f,
  0x6f,
  0x20,
  0x62,
  0x69,
  0xe7,
  0x52,
  0x45,
  0x54,
  0x55,
  0x52,
  0x4e,
  0x20,
  0x77,
  0x69,
  0x74,
  0x68,
  0x6f,
  0x75,
  0x74,
  0x20,
  0x47,
  0x4f,
  0x53,
  0x55,
  0xc2,
  0x45,
  0x6e,
  0x64,
  0x20,
  0x6f,
  0x66,
  0x20,
  0x66,
  0x69,
  0x6c,
  0xe5,
  0x53,
  0x54,
  0x4f,
  0x50,
  0x20,
  0x73,
  0x74,
  0x61,
  0x74,
  0x65,
  0x6d,
  0x65,
  0x6e,
  0xf4,
  0x49,
  0x6e,
  0x76,
  0x61,
  0x6c,
  0x69,
  0x64,
  0x20,
  0x61,
  0x72,
  0x67,
  0x75,
  0x6d,
  0x65,
  0x6e,
  0xf4,
  0x49,
  0x6e,
  0x74,
  0x65,
  0x67,
  0x65,
  0x72,
  0x20,
  0x6f,
  0x75,
  0x74,
  0x20,
  0x6f,
  0x66,
  0x20,
  0x72,
  0x61,
  0x6e,
  0x67,
  0xe5,
  0x4e,
  0x6f,
  0x6e,
  0x73,
  0x65,
  0x6e,
  0x73,
  0x65,
  0x20,
  0x69,
  0x6e,
  0x20,
  0x42,
  0x41,
  0x53,
  0x49,
  0xc3,
  0x42,
  0x52,
  0x45,
  0x41,
  0x4b,
  0x20,
  0x2d,
  0x20,
  0x43,
  0x4f,
  0x4e,
  0x54,
  0x20,
  0x72,
  0x65,
  0x70,
  0x65,
  0x61,
  0x74,
  0xf3,
  0x4f,
  0x75,
  0x74,
  0x20,
  0x6f,
  0x66,
  0x20,
  0x44,
  0x41,
  0x54,
  0xc1,
  0x49,
  0x6e,
  0x76,
  0x61,
  0x6c,
  0x69,
  0x64,
  0x20,
  0x66,
  0x69,
  0x6c,
  0x65,
  0x20,
  0x6e,
  0x61,
  0x6d,
  0xe5,
  0x4e,
  0x6f,
  0x20,
  0x72,
  0x6f,
  0x6f,
  0x6d,
  0x20,
  0x66,
  0x6f,
  0x72,
  0x20,
  0x6c,
  0x69,
  0x6e,
  0xe5,
  0x53,
  0x54,
  0x4f,
  0x50,
  0x20,
  0x69,
  0x6e,
  0x20,
  0x49,
  0x4e,
  0x50,
  0x55,
  0xd4,
  0x46,
  0x4f,
  0x52,
  0x20,
  0x77,
  0x69,
  0x74,
  0x68,
  0x6f,
  0x75,
  0x74,
  0x20,
  0x4e,
  0x45,
  0x58,
  0xd4,
  0x49,
  0x6e,
  0x76,
  0x61,
  0x6c,
  0x69,
  0x64,
  0x20,
  0x49,
  0x2f,
  0x4f,
  0x20,
  0x64,
  0x65,
  0x76,
  0x69,
  0x63,
  0xe5,
  0x49,
  0x6e,
  0x76,
  0x61,
  0x6c,
  0x69,
  0x64,
  0x20,
  0x63,
  0x6f,
  0x6c,
  0x6f,
  0x75,
  0xf2,
  0x42,
  0x52,
  0x45,
  0x41,
  0x4b,
  0x20,
  0x69,
  0x6e,
  0x74,
  0x6f,
  0x20,
  0x70,
  0x72,
  0x6f,
  0x67,
  0x72,
  0x61,
  0xed,
  0x52,
  0x41,
  0x4d,
  0x54,
  0x4f,
  0x50,
  0x20,
  0x6e,
  0x6f,
  0x20,
  0x67,
  0x6f,
  0x6f,
  0xe4,
  0x53,
  0x74,
  0x61,
  0x74,
  0x65,
  0x6d,
  0x65,
  0x6e,
  0x74,
  0x20,
  0x6c,
  0x6f,
  0x73,
  0xf4,
  0x49,
  0x6e,
  0x76,
  0x61,
  0x6c,
  0x69,
  0x64,
  0x20,
  0x73,
  0x74,
  0x72,
  0x65,
  0x61,
  0xed,
  0x46,
  0x4e,
  0x20,
  0x77,
  0x69,
  0x74,
  0x68,
  0x6f,
  0x75,
  0x74,
  0x20,
  0x44,
  0x45,
  0xc6,
  0x50,
  0x61,
  0x72,
  0x61,
  0x6d,
  0x65,
  0x74,
  0x65,
  0x72,
  0x20,
  0x65,
  0x72,
  0x72,
  0x6f,
  0xf2,
  0x54,
  0x61,
  0x70,
  0x65,
  0x20,
  0x6c,
  0x6f,
  0x61,
  0x64,
  0x69,
  0x6e,
  0x67,
  0x20,
  0x65,
  0x72,
  0x72,
  0x6f,
  0xf2,
  0x2c,
  0xa0,
  0x7f,
  0x20,
  0x31,
  0x39,
  0x38,
  0x32,
  0x20,
  0x53,
  0x69,
  0x6e,
  0x63,
  0x6c,
  0x61,
  0x69,
  0x72,
  0x20,
  0x52,
  0x65,
  0x73,
  0x65,
  0x61,
  0x72,
  0x63,
  0x68,
  0x20,
  0x4c,
  0x74,
  0xe4,
  0x3e,
  0x10,
  0x01,
  0x00,
  0x00,
  0xc3,
  0x13,
  0x13,
  0xed,
  0x43,
  0x49,
  0x5c,
  0x2a,
  0x5d,
  0x5c,
  0xeb,
  0x21,
  0x55,
  0x15,
  0xe5,
  0x2a,
  0x61,
  0x5c,
  0x37,
  0xed,
  0x52,
  0xe5,
  0x60,
  0x69,
  0xcd,
  0x6e,
  0x19,
  0x20,
  0x06,
  0xcd,
  0xb8,
  0x19,
  0xcd,
  0xe8,
  0x19,
  0xc1,
  0x79,
  0x3d,
  0xb0,
  0x28,
  0x28,
  0xc5,
  0x03,
  0x03,
  0x03,
  0x03,
  0x2b,
  0xed,
  0x5b,
  0x53,
  0x5c,
  0xd5,
  0xcd,
  0x55,
  0x16,
  0xe1,
  0x22,
  0x53,
  0x5c,
  0xc1,
  0xc5,
  0x13,
  0x2a,
  0x61,
  0x5c,
  0x2b,
  0x2b,
  0xed,
  0xb8,
  0x2a,
  0x49,
  0x5c,
  0xeb,
  0xc1,
  0x70,
  0x2b,
  0x71,
  0x2b,
  0x73,
  0x2b,
  0x72,
  0xf1,
  0xc3,
  0xa2,
  0x12,
  0xf4,
  0x09,
  0xa8,
  0x10,
  0x4b,
  0xf4,
  0x09,
  0xc4,
  0x15,
  0x53,
  0x81,
  0x0f,
  0xc4,
  0x15,
  0x52,
  0xf4,
  0x09,
  0xc4,
  0x15,
  0x50,
  0x80,
  0xcf,
  0x12,
  0x01,
  0x00,
  0x06,
  0x00,
  0x0b,
  0x00,
  0x01,
  0x00,
  0x01,
  0x00,
  0x06,
  0x00,
  0x10,
  0x00,
  0xfd,
  0xcb,
  0x02,
  0x6e,
  0x20,
  0x04,
  0xfd,
  0xcb,
  0x02,
  0xde,
  0xcd,
  0xe6,
  0x15,
  0xd8,
  0x28,
  0xfa,
  0xcf,
  0x07,
  0xd9,
  0xe5,
  0x2a,
  0x51,
  0x5c,
  0x23,
  0x23,
  0x18,
  0x08,
  0x1e,
  0x30,
  0x83,
  0xd9,
  0xe5,
  0x2a,
  0x51,
  0x5c,
  0x5e,
  0x23,
  0x56,
  0xeb,
  0xcd,
  0x2c,
  0x16,
  0xe1,
  0xd9,
  0xc9,
  0x87,
  0xc6,
  0x16,
  0x6f,
  0x26,
  0x5c,
  0x5e,
  0x23,
  0x56,
  0x7a,
  0xb3,
  0x20,
  0x02,
  0xcf,
  0x17,
  0x1b,
  0x2a,
  0x4f,
  0x5c,
  0x19,
  0x22,
  0x51,
  0x5c,
  0xfd,
  0xcb,
  0x30,
  0xa6,
  0x23,
  0x23,
  0x23,
  0x23,
  0x4e,
  0x21,
  0x2d,
  0x16,
  0xcd,
  0xdc,
  0x16,
  0xd0,
  0x16,
  0x00,
  0x5e,
  0x19,
  0xe9,
  0x4b,
  0x06,
  0x53,
  0x12,
  0x50,
  0x1b,
  0x00,
  0xfd,
  0xcb,
  0x02,
  0xc6,
  0xfd,
  0xcb,
  0x01,
  0xae,
  0xfd,
  0xcb,
  0x30,
  0xe6,
  0x18,
  0x04,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xfd,
  0xcb,
  0x01,
  0x8e,
  0xc3,
  0x4d,
  0x0d,
  0xfd,
  0xcb,
  0x01,
  0xce,
  0xc9,
  0x01,
  0x01,
  0x00,
  0xe5,
  0xcd,
  0x05,
  0x1f,
  0xe1,
  0xcd,
  0x64,
  0x16,
  0x2a,
  0x65,
  0x5c,
  0xeb,
  0xed,
  0xb8,
  0xc9,
  0xf5,
  0xe5,
  0x21,
  0x4b,
  0x5c,
  0x3e,
  0x0e,
  0x5e,
  0x23,
  0x56,
  0xe3,
  0xa7,
  0xed,
  0x52,
  0x19,
  0xe3,
  0x30,
  0x09,
  0xd5,
  0xeb,
  0x09,
  0xeb,
  0x72,
  0x2b,
  0x73,
  0x23,
  0xd1,
  0x23,
  0x3d,
  0x20,
  0xe8,
  0xeb,
  0xd1,
  0xf1,
  0xa7,
  0xed,
  0x52,
  0x44,
  0x4d,
  0x03,
  0x19,
  0xeb,
  0xc9,
  0x00,
  0x00,
  0xeb,
  0x11,
  0x8f,
  0x16,
  0x7e,
  0xe6,
  0xc0,
  0x20,
  0xf7,
  0x56,
  0x23,
  0x5e,
  0xc9,
  0x2a,
  0x63,
  0x5c,
  0x2b,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x23,
  0xc1,
  0xed,
  0x43,
  0x61,
  0x5c,
  0xc1,
  0xeb,
  0x23,
  0xc9,
  0x2a,
  0x59,
  0x5c,
  0x36,
  0x0d,
  0x22,
  0x5b,
  0x5c,
  0x23,
  0x36,
  0x80,
  0x23,
  0x22,
  0x61,
  0x5c,
  0x2a,
  0x61,
  0x5c,
  0x22,
  0x63,
  0x5c,
  0x2a,
  0x63,
  0x5c,
  0x22,
  0x65,
  0x5c,
  0xe5,
  0x21,
  0x92,
  0x5c,
  0x22,
  0x68,
  0x5c,
  0xe1,
  0xc9,
  0xed,
  0x5b,
  0x59,
  0x5c,
  0xc3,
  0xe5,
  0x19,
  0x23,
  0x7e,
  0xa7,
  0xc8,
  0xb9,
  0x23,
  0x20,
  0xf8,
  0x37,
  0xc9,
  0xcd,
  0x1e,
  0x17,
  0xcd,
  0x01,
  0x17,
  0x01,
  0x00,
  0x00,
  0x11,
  0xe2,
  0xa3,
  0xeb,
  0x19,
  0x38,
  0x07,
  0x01,
  0xd4,
  0x15,
  0x09,
  0x4e,
  0x23,
  0x46,
  0xeb,
  0x71,
  0x23,
  0x70,
  0xc9,
  0xe5,
  0x2a,
  0x4f,
  0x5c,
  0x09,
  0x23,
  0x23,
  0x23,
  0x4e,
  0xeb,
  0x21,
  0x16,
  0x17,
  0xcd,
  0xdc,
  0x16,
  0x4e,
  0x06,
  0x00,
  0x09,
  0xe9,
  0x4b,
  0x05,
  0x53,
  0x03,
  0x50,
  0x01,
  0xe1,
  0xc9,
  0xcd,
  0x94,
  0x1e,
  0xfe,
  0x10,
  0x38,
  0x02,
  0xcf,
  0x17,
  0xc6,
  0x03,
  0x07,
  0x21,
  0x10,
  0x5c,
  0x4f,
  0x06,
  0x00,
  0x09,
  0x4e,
  0x23,
  0x46,
  0x2b,
  0xc9,
  0xef,
  0x01,
  0x38,
  0xcd,
  0x1e,
  0x17,
  0x78,
  0xb1,
  0x28,
  0x16,
  0xeb,
  0x2a,
  0x4f,
  0x5c,
  0x09,
  0x23,
  0x23,
  0x23,
  0x7e,
  0xeb,
  0xfe,
  0x4b,
  0x28,
  0x08,
  0xfe,
  0x53,
  0x28,
  0x04,
  0xfe,
  0x50,
  0x20,
  0xcf,
  0xcd,
  0x5d,
  0x17,
  0x73,
  0x23,
  0x72,
  0xc9,
  0xe5,
  0xcd,
  0xf1,
  0x2b,
  0x78,
  0xb1,
  0x20,
  0x02,
  0xcf,
  0x0e,
  0xc5,
  0x1a,
  0xe6,
  0xdf,
  0x4f,
  0x21,
  0x7a,
  0x17,
  0xcd,
  0xdc,
  0x16,
  0x30,
  0xf1,
  0x4e,
  0x06,
  0x00,
  0x09,
  0xc1,
  0xe9,
  0x4b,
  0x06,
  0x53,
  0x08,
  0x50,
  0x0a,
  0x00,
  0x1e,
  0x01,
  0x18,
  0x06,
  0x1e,
  0x06,
  0x18,
  0x02,
  0x1e,
  0x10,
  0x0b,
  0x78,
  0xb1,
  0x20,
  0xd5,
  0x57,
  0xe1,
  0xc9,
  0x18,
  0x90,
  0xed,
  0x73,
  0x3f,
  0x5c,
  0xfd,
  0x36,
  0x02,
  0x10,
  0xcd,
  0xaf,
  0x0d,
  0xfd,
  0xcb,
  0x02,
  0xc6,
  0xfd,
  0x46,
  0x31,
  0xcd,
  0x44,
  0x0e,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xfd,
  0xcb,
  0x30,
  0xc6,
  0x2a,
  0x49,
  0x5c,
  0xed,
  0x5b,
  0x6c,
  0x5c,
  0xa7,
  0xed,
  0x52,
  0x19,
  0x38,
  0x22,
  0xd5,
  0xcd,
  0x6e,
  0x19,
  0x11,
  0xc0,
  0x02,
  0xeb,
  0xed,
  0x52,
  0xe3,
  0xcd,
  0x6e,
  0x19,
  0xc1,
  0xc5,
  0xcd,
  0xb8,
  0x19,
  0xc1,
  0x09,
  0x38,
  0x0e,
  0xeb,
  0x56,
  0x23,
  0x5e,
  0x2b,
  0xed,
  0x53,
  0x6c,
  0x5c,
  0x18,
  0xed,
  0x22,
  0x6c,
  0x5c,
  0x2a,
  0x6c,
  0x5c,
  0xcd,
  0x6e,
  0x19,
  0x28,
  0x01,
  0xeb,
  0xcd,
  0x33,
  0x18,
  0xfd,
  0xcb,
  0x02,
  0xa6,
  0xc9,
  0x3e,
  0x03,
  0x18,
  0x02,
  0x3e,
  0x02,
  0xfd,
  0x36,
  0x02,
  0x00,
  0xcd,
  0x30,
  0x25,
  0xc4,
  0x01,
  0x16,
  0xdf,
  0xcd,
  0x70,
  0x20,
  0x38,
  0x14,
  0xdf,
  0xfe,
  0x3b,
  0x28,
  0x04,
  0xfe,
  0x2c,
  0x20,
  0x06,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0x18,
  0x08,
  0xcd,
  0xe6,
  0x1c,
  0x18,
  0x03,
  0xcd,
  0xde,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xcd,
  0x99,
  0x1e,
  0x78,
  0xe6,
  0x3f,
  0x67,
  0x69,
  0x22,
  0x49,
  0x5c,
  0xcd,
  0x6e,
  0x19,
  0x1e,
  0x01,
  0xcd,
  0x55,
  0x18,
  0xd7,
  0xfd,
  0xcb,
  0x02,
  0x66,
  0x28,
  0xf6,
  0x3a,
  0x6b,
  0x5c,
  0xfd,
  0x96,
  0x4f,
  0x20,
  0xee,
  0xab,
  0xc8,
  0xe5,
  0xd5,
  0x21,
  0x6c,
  0x5c,
  0xcd,
  0x0f,
  0x19,
  0xd1,
  0xe1,
  0x18,
  0xe0,
  0xed,
  0x4b,
  0x49,
  0x5c,
  0xcd,
  0x80,
  0x19,
  0x16,
  0x3e,
  0x28,
  0x05,
  0x11,
  0x00,
  0x00,
  0xcb,
  0x13,
  0xfd,
  0x73,
  0x2d,
  0x7e,
  0xfe,
  0x40,
  0xc1,
  0xd0,
  0xc5,
  0xcd,
  0x28,
  0x1a,
  0x23,
  0x23,
  0x23,
  0xfd,
  0xcb,
  0x01,
  0x86,
  0x7a,
  0xa7,
  0x28,
  0x05,
  0xd7,
  0xfd,
  0xcb,
  0x01,
  0xc6,
  0xd5,
  0xeb,
  0xfd,
  0xcb,
  0x30,
  0x96,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0x96,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0x28,
  0x02,
  0xcb,
  0xd6,
  0x2a,
  0x5f,
  0x5c,
  0xa7,
  0xed,
  0x52,
  0x20,
  0x05,
  0x3e,
  0x3f,
  0xcd,
  0xc1,
  0x18,
  0xcd,
  0xe1,
  0x18,
  0xeb,
  0x7e,
  0xcd,
  0xb6,
  0x18,
  0x23,
  0xfe,
  0x0d,
  0x28,
  0x06,
  0xeb,
  0xcd,
  0x37,
  0x19,
  0x18,
  0xe0,
  0xd1,
  0xc9,
  0xfe,
  0x0e,
  0xc0,
  0x23,
  0x23,
  0x23,
  0x23,
  0x23,
  0x23,
  0x7e,
  0xc9,
  0xd9,
  0x2a,
  0x8f,
  0x5c,
  0xe5,
  0xcb,
  0xbc,
  0xcb,
  0xfd,
  0x22,
  0x8f,
  0x5c,
  0x21,
  0x91,
  0x5c,
  0x56,
  0xd5,
  0x36,
  0x00,
  0xcd,
  0xf4,
  0x09,
  0xe1,
  0xfd,
  0x74,
  0x57,
  0xe1,
  0x22,
  0x8f,
  0x5c,
  0xd9,
  0xc9,
  0x2a,
  0x5b,
  0x5c,
  0xa7,
  0xed,
  0x52,
  0xc0,
  0x3a,
  0x41,
  0x5c,
  0xcb,
  0x07,
  0x28,
  0x04,
  0xc6,
  0x43,
  0x18,
  0x16,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0x9e,
  0x3e,
  0x4b,
  0xcb,
  0x56,
  0x28,
  0x0b,
  0xcb,
  0xde,
  0x3c,
  0xfd,
  0xcb,
  0x30,
  0x5e,
  0x28,
  0x02,
  0x3e,
  0x43,
  0xd5,
  0xcd,
  0xc1,
  0x18,
  0xd1,
  0xc9,
  0x5e,
  0x23,
  0x56,
  0xe5,
  0xeb,
  0x23,
  0xcd,
  0x6e,
  0x19,
  0xcd,
  0x95,
  0x16,
  0xe1,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0xc0,
  0x72,
  0x2b,
  0x73,
  0xc9,
  0x7b,
  0xa7,
  0xf8,
  0x18,
  0x0d,
  0xaf,
  0x09,
  0x3c,
  0x38,
  0xfc,
  0xed,
  0x42,
  0x3d,
  0x28,
  0xf1,
  0xc3,
  0xef,
  0x15,
  0xcd,
  0x1b,
  0x2d,
  0x30,
  0x30,
  0xfe,
  0x21,
  0x38,
  0x2c,
  0xfd,
  0xcb,
  0x01,
  0x96,
  0xfe,
  0xcb,
  0x28,
  0x24,
  0xfe,
  0x3a,
  0x20,
  0x0e,
  0xfd,
  0xcb,
  0x37,
  0x6e,
  0x20,
  0x16,
  0xfd,
  0xcb,
  0x30,
  0x56,
  0x28,
  0x14,
  0x18,
  0x0e,
  0xfe,
  0x22,
  0x20,
  0x0a,
  0xf5,
  0x3a,
  0x6a,
  0x5c,
  0xee,
  0x04,
  0x32,
  0x6a,
  0x5c,
  0xf1,
  0xfd,
  0xcb,
  0x01,
  0xd6,
  0xd7,
  0xc9,
  0xe5,
  0x2a,
  0x53,
  0x5c,
  0x54,
  0x5d,
  0xc1,
  0xcd,
  0x80,
  0x19,
  0xd0,
  0xc5,
  0xcd,
  0xb8,
  0x19,
  0xeb,
  0x18,
  0xf4,
  0x7e,
  0xb8,
  0xc0,
  0x23,
  0x7e,
  0x2b,
  0xb9,
  0xc9,
  0x23,
  0x23,
  0x23,
  0x22,
  0x5d,
  0x5c,
  0x0e,
  0x00,
  0x15,
  0xc8,
  0xe7,
  0xbb,
  0x20,
  0x04,
  0xa7,
  0xc9,
  0x23,
  0x7e,
  0xcd,
  0xb6,
  0x18,
  0x22,
  0x5d,
  0x5c,
  0xfe,
  0x22,
  0x20,
  0x01,
  0x0d,
  0xfe,
  0x3a,
  0x28,
  0x04,
  0xfe,
  0xcb,
  0x20,
  0x04,
  0xcb,
  0x41,
  0x28,
  0xdf,
  0xfe,
  0x0d,
  0x20,
  0xe3,
  0x15,
  0x37,
  0xc9,
  0xe5,
  0x7e,
  0xfe,
  0x40,
  0x38,
  0x17,
  0xcb,
  0x6f,
  0x28,
  0x14,
  0x87,
  0xfa,
  0xc7,
  0x19,
  0x3f,
  0x01,
  0x05,
  0x00,
  0x30,
  0x02,
  0x0e,
  0x12,
  0x17,
  0x23,
  0x7e,
  0x30,
  0xfb,
  0x18,
  0x06,
  0x23,
  0x23,
  0x4e,
  0x23,
  0x46,
  0x23,
  0x09,
  0xd1,
  0xa7,
  0xed,
  0x52,
  0x44,
  0x4d,
  0x19,
  0xeb,
  0xc9,
  0xcd,
  0xdd,
  0x19,
  0xc5,
  0x78,
  0x2f,
  0x47,
  0x79,
  0x2f,
  0x4f,
  0x03,
  0xcd,
  0x64,
  0x16,
  0xeb,
  0xe1,
  0x19,
  0xd5,
  0xed,
  0xb0,
  0xe1,
  0xc9,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0x22,
  0x5d,
  0x5c,
  0xe7,
  0x21,
  0x92,
  0x5c,
  0x22,
  0x65,
  0x5c,
  0xcd,
  0x3b,
  0x2d,
  0xcd,
  0xa2,
  0x2d,
  0x38,
  0x04,
  0x21,
  0xf0,
  0xd8,
  0x09,
  0xda,
  0x8a,
  0x1c,
  0xc3,
  0xc5,
  0x16,
  0xd5,
  0xe5,
  0xaf,
  0xcb,
  0x78,
  0x20,
  0x20,
  0x60,
  0x69,
  0x1e,
  0xff,
  0x18,
  0x08,
  0xd5,
  0x56,
  0x23,
  0x5e,
  0xe5,
  0xeb,
  0x1e,
  0x20,
  0x01,
  0x18,
  0xfc,
  0xcd,
  0x2a,
  0x19,
  0x01,
  0x9c,
  0xff,
  0xcd,
  0x2a,
  0x19,
  0x0e,
  0xf6,
  0xcd,
  0x2a,
  0x19,
  0x7d,
  0xcd,
  0xef,
  0x15,
  0xe1,
  0xd1,
  0xc9,
  0xb1,
  0xcb,
  0xbc,
  0xbf,
  0xc4,
  0xaf,
  0xb4,
  0x93,
  0x91,
  0x92,
  0x95,
  0x98,
  0x98,
  0x98,
  0x98,
  0x98,
  0x98,
  0x98,
  0x7f,
  0x81,
  0x2e,
  0x6c,
  0x6e,
  0x70,
  0x48,
  0x94,
  0x56,
  0x3f,
  0x41,
  0x2b,
  0x17,
  0x1f,
  0x37,
  0x77,
  0x44,
  0x0f,
  0x59,
  0x2b,
  0x43,
  0x2d,
  0x51,
  0x3a,
  0x6d,
  0x42,
  0x0d,
  0x49,
  0x5c,
  0x44,
  0x15,
  0x5d,
  0x01,
  0x3d,
  0x02,
  0x06,
  0x00,
  0x67,
  0x1e,
  0x06,
  0xcb,
  0x05,
  0xf0,
  0x1c,
  0x06,
  0x00,
  0xed,
  0x1e,
  0x00,
  0xee,
  0x1c,
  0x00,
  0x23,
  0x1f,
  0x04,
  0x3d,
  0x06,
  0xcc,
  0x06,
  0x05,
  0x03,
  0x1d,
  0x04,
  0x00,
  0xab,
  0x1d,
  0x05,
  0xcd,
  0x1f,
  0x05,
  0x89,
  0x20,
  0x05,
  0x02,
  0x2c,
  0x05,
  0xb2,
  0x1b,
  0x00,
  0xb7,
  0x11,
  0x03,
  0xa1,
  0x1e,
  0x05,
  0xf9,
  0x17,
  0x08,
  0x00,
  0x80,
  0x1e,
  0x03,
  0x4f,
  0x1e,
  0x00,
  0x5f,
  0x1e,
  0x03,
  0xac,
  0x1e,
  0x00,
  0x6b,
  0x0d,
  0x09,
  0x00,
  0xdc,
  0x22,
  0x06,
  0x00,
  0x3a,
  0x1f,
  0x05,
  0xed,
  0x1d,
  0x05,
  0x27,
  0x1e,
  0x03,
  0x42,
  0x1e,
  0x09,
  0x05,
  0x82,
  0x23,
  0x00,
  0xac,
  0x0e,
  0x05,
  0xc9,
  0x1f,
  0x05,
  0xf5,
  0x17,
  0x0b,
  0x0b,
  0x0b,
  0x0b,
  0x08,
  0x00,
  0xf8,
  0x03,
  0x09,
  0x05,
  0x20,
  0x23,
  0x07,
  0x07,
  0x07,
  0x07,
  0x07,
  0x07,
  0x08,
  0x00,
  0x7a,
  0x1e,
  0x06,
  0x00,
  0x94,
  0x22,
  0x05,
  0x60,
  0x1f,
  0x06,
  0x2c,
  0x0a,
  0x00,
  0x36,
  0x17,
  0x06,
  0x00,
  0xe5,
  0x16,
  0x0a,
  0x00,
  0x93,
  0x17,
  0x0a,
  0x2c,
  0x0a,
  0x00,
  0x93,
  0x17,
  0x0a,
  0x00,
  0x93,
  0x17,
  0x00,
  0x93,
  0x17,
  0xfd,
  0xcb,
  0x01,
  0xbe,
  0xcd,
  0xfb,
  0x19,
  0xaf,
  0x32,
  0x47,
  0x5c,
  0x3d,
  0x32,
  0x3a,
  0x5c,
  0x18,
  0x01,
  0xe7,
  0xcd,
  0xbf,
  0x16,
  0xfd,
  0x34,
  0x0d,
  0xfa,
  0x8a,
  0x1c,
  0xdf,
  0x06,
  0x00,
  0xfe,
  0x0d,
  0x28,
  0x7a,
  0xfe,
  0x3a,
  0x28,
  0xeb,
  0x21,
  0x76,
  0x1b,
  0xe5,
  0x4f,
  0xe7,
  0x79,
  0xd6,
  0xce,
  0xda,
  0x8a,
  0x1c,
  0x4f,
  0x21,
  0x48,
  0x1a,
  0x09,
  0x4e,
  0x09,
  0x18,
  0x03,
  0x2a,
  0x74,
  0x5c,
  0x7e,
  0x23,
  0x22,
  0x74,
  0x5c,
  0x01,
  0x52,
  0x1b,
  0xc5,
  0x4f,
  0xfe,
  0x20,
  0x30,
  0x0c,
  0x21,
  0x01,
  0x1c,
  0x06,
  0x00,
  0x09,
  0x4e,
  0x09,
  0xe5,
  0xdf,
  0x05,
  0xc9,
  0xdf,
  0xb9,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0xc9,
  0xcd,
  0x54,
  0x1f,
  0x38,
  0x02,
  0xcf,
  0x14,
  0xfd,
  0xcb,
  0x0a,
  0x7e,
  0x20,
  0x71,
  0x2a,
  0x42,
  0x5c,
  0xcb,
  0x7c,
  0x28,
  0x14,
  0x21,
  0xfe,
  0xff,
  0x22,
  0x45,
  0x5c,
  0x2a,
  0x61,
  0x5c,
  0x2b,
  0xed,
  0x5b,
  0x59,
  0x5c,
  0x1b,
  0x3a,
  0x44,
  0x5c,
  0x18,
  0x33,
  0xcd,
  0x6e,
  0x19,
  0x3a,
  0x44,
  0x5c,
  0x28,
  0x19,
  0xa7,
  0x20,
  0x43,
  0x47,
  0x7e,
  0xe6,
  0xc0,
  0x78,
  0x28,
  0x0f,
  0xcf,
  0xff,
  0xc1,
  0xcd,
  0x30,
  0x25,
  0xc8,
  0x2a,
  0x55,
  0x5c,
  0x3e,
  0xc0,
  0xa6,
  0xc0,
  0xaf,
  0xfe,
  0x01,
  0xce,
  0x00,
  0x56,
  0x23,
  0x5e,
  0xed,
  0x53,
  0x45,
  0x5c,
  0x23,
  0x5e,
  0x23,
  0x56,
  0xeb,
  0x19,
  0x23,
  0x22,
  0x55,
  0x5c,
  0xeb,
  0x22,
  0x5d,
  0x5c,
  0x57,
  0x1e,
  0x00,
  0xfd,
  0x36,
  0x0a,
  0xff,
  0x15,
  0xfd,
  0x72,
  0x0d,
  0xca,
  0x28,
  0x1b,
  0x14,
  0xcd,
  0x8b,
  0x19,
  0x28,
  0x08,
  0xcf,
  0x16,
  0xcd,
  0x30,
  0x25,
  0xc0,
  0xc1,
  0xc1,
  0xdf,
  0xfe,
  0x0d,
  0x28,
  0xba,
  0xfe,
  0x3a,
  0xca,
  0x28,
  0x1b,
  0xc3,
  0x8a,
  0x1c,
  0x0f,
  0x1d,
  0x4b,
  0x09,
  0x67,
  0x0b,
  0x7b,
  0x8e,
  0x71,
  0xb4,
  0x81,
  0xcf,
  0xcd,
  0xde,
  0x1c,
  0xbf,
  0xc1,
  0xcc,
  0xee,
  0x1b,
  0xeb,
  0x2a,
  0x74,
  0x5c,
  0x4e,
  0x23,
  0x46,
  0xeb,
  0xc5,
  0xc9,
  0xcd,
  0xb2,
  0x28,
  0xfd,
  0x36,
  0x37,
  0x00,
  0x30,
  0x08,
  0xfd,
  0xcb,
  0x37,
  0xce,
  0x20,
  0x18,
  0xcf,
  0x01,
  0xcc,
  0x96,
  0x29,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0x20,
  0x0d,
  0xaf,
  0xcd,
  0x30,
  0x25,
  0xc4,
  0xf1,
  0x2b,
  0x21,
  0x71,
  0x5c,
  0xb6,
  0x77,
  0xeb,
  0xed,
  0x43,
  0x72,
  0x5c,
  0x22,
  0x4d,
  0x5c,
  0xc9,
  0xc1,
  0xcd,
  0x56,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xc9,
  0x3a,
  0x3b,
  0x5c,
  0xf5,
  0xcd,
  0xfb,
  0x24,
  0xf1,
  0xfd,
  0x56,
  0x01,
  0xaa,
  0xe6,
  0x40,
  0x20,
  0x24,
  0xcb,
  0x7a,
  0xc2,
  0xff,
  0x2a,
  0xc9,
  0xcd,
  0xb2,
  0x28,
  0xf5,
  0x79,
  0xf6,
  0x9f,
  0x3c,
  0x20,
  0x14,
  0xf1,
  0x18,
  0xa9,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xfe,
  0x2c,
  0x20,
  0x09,
  0xe7,
  0xcd,
  0xfb,
  0x24,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0xc0,
  0xcf,
  0x0b,
  0xcd,
  0xfb,
  0x24,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0xc8,
  0x18,
  0xf4,
  0xfd,
  0xcb,
  0x01,
  0x7e,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xc4,
  0x4d,
  0x0d,
  0xf1,
  0x3a,
  0x74,
  0x5c,
  0xd6,
  0x13,
  0xcd,
  0xfc,
  0x21,
  0xcd,
  0xee,
  0x1b,
  0x2a,
  0x8f,
  0x5c,
  0x22,
  0x8d,
  0x5c,
  0x21,
  0x91,
  0x5c,
  0x7e,
  0x07,
  0xae,
  0xe6,
  0xaa,
  0xae,
  0x77,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x13,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xcd,
  0x4d,
  0x0d,
  0x21,
  0x90,
  0x5c,
  0x7e,
  0xf6,
  0xf8,
  0x77,
  0xfd,
  0xcb,
  0x57,
  0xb6,
  0xdf,
  0xcd,
  0xe2,
  0x21,
  0x18,
  0x9f,
  0xc3,
  0x05,
  0x06,
  0xfe,
  0x0d,
  0x28,
  0x04,
  0xfe,
  0x3a,
  0x20,
  0x9c,
  0xcd,
  0x30,
  0x25,
  0xc8,
  0xef,
  0xa0,
  0x38,
  0xc9,
  0xcf,
  0x08,
  0xc1,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x0a,
  0xef,
  0x02,
  0x38,
  0xeb,
  0xcd,
  0xe9,
  0x34,
  0xda,
  0xb3,
  0x1b,
  0xc3,
  0x29,
  0x1b,
  0xfe,
  0xcd,
  0x20,
  0x09,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0x18,
  0x06,
  0xcd,
  0xee,
  0x1b,
  0xef,
  0xa1,
  0x38,
  0xef,
  0xc0,
  0x02,
  0x01,
  0xe0,
  0x01,
  0x38,
  0xcd,
  0xff,
  0x2a,
  0x22,
  0x68,
  0x5c,
  0x2b,
  0x7e,
  0xcb,
  0xfe,
  0x01,
  0x06,
  0x00,
  0x09,
  0x07,
  0x38,
  0x06,
  0x0e,
  0x0d,
  0xcd,
  0x55,
  0x16,
  0x23,
  0xe5,
  0xef,
  0x02,
  0x02,
  0x38,
  0xe1,
  0xeb,
  0x0e,
  0x0a,
  0xed,
  0xb0,
  0x2a,
  0x45,
  0x5c,
  0xeb,
  0x73,
  0x23,
  0x72,
  0xfd,
  0x56,
  0x0d,
  0x14,
  0x23,
  0x72,
  0xcd,
  0xda,
  0x1d,
  0xd0,
  0xfd,
  0x46,
  0x38,
  0x2a,
  0x45,
  0x5c,
  0x22,
  0x42,
  0x5c,
  0x3a,
  0x47,
  0x5c,
  0xed,
  0x44,
  0x57,
  0x2a,
  0x5d,
  0x5c,
  0x1e,
  0xf3,
  0xc5,
  0xed,
  0x4b,
  0x55,
  0x5c,
  0xcd,
  0x86,
  0x1d,
  0xed,
  0x43,
  0x55,
  0x5c,
  0xc1,
  0x38,
  0x11,
  0xe7,
  0xf6,
  0x20,
  0xb8,
  0x28,
  0x03,
  0xe7,
  0x18,
  0xe8,
  0xe7,
  0x3e,
  0x01,
  0x92,
  0x32,
  0x44,
  0x5c,
  0xc9,
  0xcf,
  0x11,
  0x7e,
  0xfe,
  0x3a,
  0x28,
  0x18,
  0x23,
  0x7e,
  0xe6,
  0xc0,
  0x37,
  0xc0,
  0x46,
  0x23,
  0x4e,
  0xed,
  0x43,
  0x42,
  0x5c,
  0x23,
  0x4e,
  0x23,
  0x46,
  0xe5,
  0x09,
  0x44,
  0x4d,
  0xe1,
  0x16,
  0x00,
  0xc5,
  0xcd,
  0x8b,
  0x19,
  0xc1,
  0xd0,
  0x18,
  0xe0,
  0xfd,
  0xcb,
  0x37,
  0x4e,
  0xc2,
  0x2e,
  0x1c,
  0x2a,
  0x4d,
  0x5c,
  0xcb,
  0x7e,
  0x28,
  0x1f,
  0x23,
  0x22,
  0x68,
  0x5c,
  0xef,
  0xe0,
  0xe2,
  0x0f,
  0xc0,
  0x02,
  0x38,
  0xcd,
  0xda,
  0x1d,
  0xd8,
  0x2a,
  0x68,
  0x5c,
  0x11,
  0x0f,
  0x00,
  0x19,
  0x5e,
  0x23,
  0x56,
  0x23,
  0x66,
  0xeb,
  0xc3,
  0x73,
  0x1e,
  0xcf,
  0x00,
  0xef,
  0xe1,
  0xe0,
  0xe2,
  0x36,
  0x00,
  0x02,
  0x01,
  0x03,
  0x37,
  0x00,
  0x04,
  0x38,
  0xa7,
  0xc9,
  0x38,
  0x37,
  0xc9,
  0xe7,
  0xcd,
  0x1f,
  0x1c,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x29,
  0xdf,
  0x22,
  0x5f,
  0x5c,
  0x2a,
  0x57,
  0x5c,
  0x7e,
  0xfe,
  0x2c,
  0x28,
  0x09,
  0x1e,
  0xe4,
  0xcd,
  0x86,
  0x1d,
  0x30,
  0x02,
  0xcf,
  0x0d,
  0xcd,
  0x77,
  0x00,
  0xcd,
  0x56,
  0x1c,
  0xdf,
  0x22,
  0x57,
  0x5c,
  0x2a,
  0x5f,
  0x5c,
  0xfd,
  0x36,
  0x26,
  0x00,
  0xcd,
  0x78,
  0x00,
  0xdf,
  0xfe,
  0x2c,
  0x28,
  0xc9,
  0xcd,
  0xee,
  0x1b,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0x20,
  0x0b,
  0xcd,
  0xfb,
  0x24,
  0xfe,
  0x2c,
  0xc4,
  0xee,
  0x1b,
  0xe7,
  0x18,
  0xf5,
  0x3e,
  0xe4,
  0x47,
  0xed,
  0xb9,
  0x11,
  0x00,
  0x02,
  0xc3,
  0x8b,
  0x19,
  0xcd,
  0x99,
  0x1e,
  0x60,
  0x69,
  0xcd,
  0x6e,
  0x19,
  0x2b,
  0x22,
  0x57,
  0x5c,
  0xc9,
  0xcd,
  0x99,
  0x1e,
  0x78,
  0xb1,
  0x20,
  0x04,
  0xed,
  0x4b,
  0x78,
  0x5c,
  0xed,
  0x43,
  0x76,
  0x5c,
  0xc9,
  0x2a,
  0x6e,
  0x5c,
  0xfd,
  0x56,
  0x36,
  0x18,
  0x0c,
  0xcd,
  0x99,
  0x1e,
  0x60,
  0x69,
  0x16,
  0x00,
  0x7c,
  0xfe,
  0xf0,
  0x30,
  0x2c,
  0x22,
  0x42,
  0x5c,
  0xfd,
  0x72,
  0x0a,
  0xc9,
  0xcd,
  0x85,
  0x1e,
  0xed,
  0x79,
  0xc9,
  0xcd,
  0x85,
  0x1e,
  0x02,
  0xc9,
  0xcd,
  0xd5,
  0x2d,
  0x38,
  0x15,
  0x28,
  0x02,
  0xed,
  0x44,
  0xf5,
  0xcd,
  0x99,
  0x1e,
  0xf1,
  0xc9,
  0xcd,
  0xd5,
  0x2d,
  0x18,
  0x03,
  0xcd,
  0xa2,
  0x2d,
  0x38,
  0x01,
  0xc8,
  0xcf,
  0x0a,
  0xcd,
  0x67,
  0x1e,
  0x01,
  0x00,
  0x00,
  0xcd,
  0x45,
  0x1e,
  0x18,
  0x03,
  0xcd,
  0x99,
  0x1e,
  0x78,
  0xb1,
  0x20,
  0x04,
  0xed,
  0x4b,
  0xb2,
  0x5c,
  0xc5,
  0xed,
  0x5b,
  0x4b,
  0x5c,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xcd,
  0xe5,
  0x19,
  0xcd,
  0x6b,
  0x0d,
  0x2a,
  0x65,
  0x5c,
  0x11,
  0x32,
  0x00,
  0x19,
  0xd1,
  0xed,
  0x52,
  0x30,
  0x08,
  0x2a,
  0xb4,
  0x5c,
  0xa7,
  0xed,
  0x52,
  0x30,
  0x02,
  0xcf,
  0x15,
  0xeb,
  0x22,
  0xb2,
  0x5c,
  0xd1,
  0xc1,
  0x36,
  0x3e,
  0x2b,
  0xf9,
  0xc5,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0xeb,
  0xe9,
  0xd1,
  0xfd,
  0x66,
  0x0d,
  0x24,
  0xe3,
  0x33,
  0xed,
  0x4b,
  0x45,
  0x5c,
  0xc5,
  0xe5,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0xd5,
  0xcd,
  0x67,
  0x1e,
  0x01,
  0x14,
  0x00,
  0x2a,
  0x65,
  0x5c,
  0x09,
  0x38,
  0x0a,
  0xeb,
  0x21,
  0x50,
  0x00,
  0x19,
  0x38,
  0x03,
  0xed,
  0x72,
  0xd8,
  0x2e,
  0x03,
  0xc3,
  0x55,
  0x00,
  0x01,
  0x00,
  0x00,
  0xcd,
  0x05,
  0x1f,
  0x44,
  0x4d,
  0xc9,
  0xc1,
  0xe1,
  0xd1,
  0x7a,
  0xfe,
  0x3e,
  0x28,
  0x0b,
  0x3b,
  0xe3,
  0xeb,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0xc5,
  0xc3,
  0x73,
  0x1e,
  0xd5,
  0xe5,
  0xcf,
  0x06,
  0xcd,
  0x99,
  0x1e,
  0x76,
  0x0b,
  0x78,
  0xb1,
  0x28,
  0x0c,
  0x78,
  0xa1,
  0x3c,
  0x20,
  0x01,
  0x03,
  0xfd,
  0xcb,
  0x01,
  0x6e,
  0x28,
  0xee,
  0xfd,
  0xcb,
  0x01,
  0xae,
  0xc9,
  0x3e,
  0x7f,
  0xdb,
  0xfe,
  0x1f,
  0xd8,
  0x3e,
  0xfe,
  0xdb,
  0xfe,
  0x1f,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x05,
  0x3e,
  0xce,
  0xc3,
  0x39,
  0x1e,
  0xfd,
  0xcb,
  0x01,
  0xf6,
  0xcd,
  0x8d,
  0x2c,
  0x30,
  0x16,
  0xe7,
  0xfe,
  0x24,
  0x20,
  0x05,
  0xfd,
  0xcb,
  0x01,
  0xb6,
  0xe7,
  0xfe,
  0x28,
  0x20,
  0x3c,
  0xe7,
  0xfe,
  0x29,
  0x28,
  0x20,
  0xcd,
  0x8d,
  0x2c,
  0xd2,
  0x8a,
  0x1c,
  0xeb,
  0xe7,
  0xfe,
  0x24,
  0x20,
  0x02,
  0xeb,
  0xe7,
  0xeb,
  0x01,
  0x06,
  0x00,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x23,
  0x36,
  0x0e,
  0xfe,
  0x2c,
  0x20,
  0x03,
  0xe7,
  0x18,
  0xe0,
  0xfe,
  0x29,
  0x20,
  0x13,
  0xe7,
  0xfe,
  0x3d,
  0x20,
  0x0e,
  0xe7,
  0x3a,
  0x3b,
  0x5c,
  0xf5,
  0xcd,
  0xfb,
  0x24,
  0xf1,
  0xfd,
  0xae,
  0x01,
  0xe6,
  0x40,
  0xc2,
  0x8a,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xcd,
  0x30,
  0x25,
  0xe1,
  0xc8,
  0xe9,
  0x3e,
  0x03,
  0x18,
  0x02,
  0x3e,
  0x02,
  0xcd,
  0x30,
  0x25,
  0xc4,
  0x01,
  0x16,
  0xcd,
  0x4d,
  0x0d,
  0xcd,
  0xdf,
  0x1f,
  0xcd,
  0xee,
  0x1b,
  0xc9,
  0xdf,
  0xcd,
  0x45,
  0x20,
  0x28,
  0x0d,
  0xcd,
  0x4e,
  0x20,
  0x28,
  0xfb,
  0xcd,
  0xfc,
  0x1f,
  0xcd,
  0x4e,
  0x20,
  0x28,
  0xf3,
  0xfe,
  0x29,
  0xc8,
  0xcd,
  0xc3,
  0x1f,
  0x3e,
  0x0d,
  0xd7,
  0xc9,
  0xdf,
  0xfe,
  0xac,
  0x20,
  0x0d,
  0xcd,
  0x79,
  0x1c,
  0xcd,
  0xc3,
  0x1f,
  0xcd,
  0x07,
  0x23,
  0x3e,
  0x16,
  0x18,
  0x10,
  0xfe,
  0xad,
  0x20,
  0x12,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xc3,
  0x1f,
  0xcd,
  0x99,
  0x1e,
  0x3e,
  0x17,
  0xd7,
  0x79,
  0xd7,
  0x78,
  0xd7,
  0xc9,
  0xcd,
  0xf2,
  0x21,
  0xd0,
  0xcd,
  0x70,
  0x20,
  0xd0,
  0xcd,
  0xfb,
  0x24,
  0xcd,
  0xc3,
  0x1f,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0xcc,
  0xf1,
  0x2b,
  0xc2,
  0xe3,
  0x2d,
  0x78,
  0xb1,
  0x0b,
  0xc8,
  0x1a,
  0x13,
  0xd7,
  0x18,
  0xf7,
  0xfe,
  0x29,
  0xc8,
  0xfe,
  0x0d,
  0xc8,
  0xfe,
  0x3a,
  0xc9,
  0xdf,
  0xfe,
  0x3b,
  0x28,
  0x14,
  0xfe,
  0x2c,
  0x20,
  0x0a,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x0b,
  0x3e,
  0x06,
  0xd7,
  0x18,
  0x06,
  0xfe,
  0x27,
  0xc0,
  0xcd,
  0xf5,
  0x1f,
  0xe7,
  0xcd,
  0x45,
  0x20,
  0x20,
  0x01,
  0xc1,
  0xbf,
  0xc9,
  0xfe,
  0x23,
  0x37,
  0xc0,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xa7,
  0xcd,
  0xc3,
  0x1f,
  0xcd,
  0x94,
  0x1e,
  0xfe,
  0x10,
  0xd2,
  0x0e,
  0x16,
  0xcd,
  0x01,
  0x16,
  0xa7,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x08,
  0x3e,
  0x01,
  0xcd,
  0x01,
  0x16,
  0xcd,
  0x6e,
  0x0d,
  0xfd,
  0x36,
  0x02,
  0x01,
  0xcd,
  0xc1,
  0x20,
  0xcd,
  0xee,
  0x1b,
  0xed,
  0x4b,
  0x88,
  0x5c,
  0x3a,
  0x6b,
  0x5c,
  0xb8,
  0x38,
  0x03,
  0x0e,
  0x21,
  0x47,
  0xed,
  0x43,
  0x88,
  0x5c,
  0x3e,
  0x19,
  0x90,
  0x32,
  0x8c,
  0x5c,
  0xfd,
  0xcb,
  0x02,
  0x86,
  0xcd,
  0xd9,
  0x0d,
  0xc3,
  0x6e,
  0x0d,
  0xcd,
  0x4e,
  0x20,
  0x28,
  0xfb,
  0xfe,
  0x28,
  0x20,
  0x0e,
  0xe7,
  0xcd,
  0xdf,
  0x1f,
  0xdf,
  0xfe,
  0x29,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0xc3,
  0xb2,
  0x21,
  0xfe,
  0xca,
  0x20,
  0x11,
  0xe7,
  0xcd,
  0x1f,
  0x1c,
  0xfd,
  0xcb,
  0x37,
  0xfe,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0xc2,
  0x8a,
  0x1c,
  0x18,
  0x0d,
  0xcd,
  0x8d,
  0x2c,
  0xd2,
  0xaf,
  0x21,
  0xcd,
  0x1f,
  0x1c,
  0xfd,
  0xcb,
  0x37,
  0xbe,
  0xcd,
  0x30,
  0x25,
  0xca,
  0xb2,
  0x21,
  0xcd,
  0xbf,
  0x16,
  0x21,
  0x71,
  0x5c,
  0xcb,
  0xb6,
  0xcb,
  0xee,
  0x01,
  0x01,
  0x00,
  0xcb,
  0x7e,
  0x20,
  0x0b,
  0x3a,
  0x3b,
  0x5c,
  0xe6,
  0x40,
  0x20,
  0x02,
  0x0e,
  0x03,
  0xb6,
  0x77,
  0xf7,
  0x36,
  0x0d,
  0x79,
  0x0f,
  0x0f,
  0x30,
  0x05,
  0x3e,
  0x22,
  0x12,
  0x2b,
  0x77,
  0x22,
  0x5b,
  0x5c,
  0xfd,
  0xcb,
  0x37,
  0x7e,
  0x20,
  0x2c,
  0x2a,
  0x5d,
  0x5c,
  0xe5,
  0x2a,
  0x3d,
  0x5c,
  0xe5,
  0x21,
  0x3a,
  0x21,
  0xe5,
  0xfd,
  0xcb,
  0x30,
  0x66,
  0x28,
  0x04,
  0xed,
  0x73,
  0x3d,
  0x5c,
  0x2a,
  0x61,
  0x5c,
  0xcd,
  0xa7,
  0x11,
  0xfd,
  0x36,
  0x00,
  0xff,
  0xcd,
  0x2c,
  0x0f,
  0xfd,
  0xcb,
  0x01,
  0xbe,
  0xcd,
  0xb9,
  0x21,
  0x18,
  0x03,
  0xcd,
  0x2c,
  0x0f,
  0xfd,
  0x36,
  0x22,
  0x00,
  0xcd,
  0xd6,
  0x21,
  0x20,
  0x0a,
  0xcd,
  0x1d,
  0x11,
  0xed,
  0x4b,
  0x82,
  0x5c,
  0xcd,
  0xd9,
  0x0d,
  0x21,
  0x71,
  0x5c,
  0xcb,
  0xae,
  0xcb,
  0x7e,
  0xcb,
  0xbe,
  0x20,
  0x1c,
  0xe1,
  0xe1,
  0x22,
  0x3d,
  0x5c,
  0xe1,
  0x22,
  0x5f,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xfe,
  0xcd,
  0xb9,
  0x21,
  0x2a,
  0x5f,
  0x5c,
  0xfd,
  0x36,
  0x26,
  0x00,
  0x22,
  0x5d,
  0x5c,
  0x18,
  0x17,
  0x2a,
  0x63,
  0x5c,
  0xed,
  0x5b,
  0x61,
  0x5c,
  0x37,
  0xed,
  0x52,
  0x44,
  0x4d,
  0xcd,
  0xb2,
  0x2a,
  0xcd,
  0xff,
  0x2a,
  0x18,
  0x03,
  0xcd,
  0xfc,
  0x1f,
  0xcd,
  0x4e,
  0x20,
  0xca,
  0xc1,
  0x20,
  0xc9,
  0x2a,
  0x61,
  0x5c,
  0x22,
  0x5d,
  0x5c,
  0xdf,
  0xfe,
  0xe2,
  0x28,
  0x0c,
  0x3a,
  0x71,
  0x5c,
  0xcd,
  0x59,
  0x1c,
  0xdf,
  0xfe,
  0x0d,
  0xc8,
  0xcf,
  0x0b,
  0xcd,
  0x30,
  0x25,
  0xc8,
  0xcf,
  0x10,
  0x2a,
  0x51,
  0x5c,
  0x23,
  0x23,
  0x23,
  0x23,
  0x7e,
  0xfe,
  0x4b,
  0xc9,
  0xe7,
  0xcd,
  0xf2,
  0x21,
  0xd8,
  0xdf,
  0xfe,
  0x2c,
  0x28,
  0xf6,
  0xfe,
  0x3b,
  0x28,
  0xf2,
  0xc3,
  0x8a,
  0x1c,
  0xfe,
  0xd9,
  0xd8,
  0xfe,
  0xdf,
  0x3f,
  0xd8,
  0xf5,
  0xe7,
  0xf1,
  0xd6,
  0xc9,
  0xf5,
  0xcd,
  0x82,
  0x1c,
  0xf1,
  0xa7,
  0xcd,
  0xc3,
  0x1f,
  0xf5,
  0xcd,
  0x94,
  0x1e,
  0x57,
  0xf1,
  0xd7,
  0x7a,
  0xd7,
  0xc9,
  0xd6,
  0x11,
  0xce,
  0x00,
  0x28,
  0x1d,
  0xd6,
  0x02,
  0xce,
  0x00,
  0x28,
  0x56,
  0xfe,
  0x01,
  0x7a,
  0x06,
  0x01,
  0x20,
  0x04,
  0x07,
  0x07,
  0x06,
  0x04,
  0x4f,
  0x7a,
  0xfe,
  0x02,
  0x30,
  0x16,
  0x79,
  0x21,
  0x91,
  0x5c,
  0x18,
  0x38,
  0x7a,
  0x06,
  0x07,
  0x38,
  0x05,
  0x07,
  0x07,
  0x07,
  0x06,
  0x38,
  0x4f,
  0x7a,
  0xfe,
  0x0a,
  0x38,
  0x02,
  0xcf,
  0x13,
  0x21,
  0x8f,
  0x5c,
  0xfe,
  0x08,
  0x38,
  0x0b,
  0x7e,
  0x28,
  0x07,
  0xb0,
  0x2f,
  0xe6,
  0x24,
  0x28,
  0x01,
  0x78,
  0x4f,
  0x79,
  0xcd,
  0x6c,
  0x22,
  0x3e,
  0x07,
  0xba,
  0x9f,
  0xcd,
  0x6c,
  0x22,
  0x07,
  0x07,
  0xe6,
  0x50,
  0x47,
  0x3e,
  0x08,
  0xba,
  0x9f,
  0xae,
  0xa0,
  0xae,
  0x77,
  0x23,
  0x78,
  0xc9,
  0x9f,
  0x7a,
  0x0f,
  0x06,
  0x80,
  0x20,
  0x03,
  0x0f,
  0x06,
  0x40,
  0x4f,
  0x7a,
  0xfe,
  0x08,
  0x28,
  0x04,
  0xfe,
  0x02,
  0x30,
  0xbd,
  0x79,
  0x21,
  0x8f,
  0x5c,
  0xcd,
  0x6c,
  0x22,
  0x79,
  0x0f,
  0x0f,
  0x0f,
  0x18,
  0xd8,
  0xcd,
  0x94,
  0x1e,
  0xfe,
  0x08,
  0x30,
  0xa9,
  0xd3,
  0xfe,
  0x07,
  0x07,
  0x07,
  0xcb,
  0x6f,
  0x20,
  0x02,
  0xee,
  0x07,
  0x32,
  0x48,
  0x5c,
  0xc9,
  0x3e,
  0xaf,
  0x90,
  0xda,
  0xf9,
  0x24,
  0x47,
  0xa7,
  0x1f,
  0x37,
  0x1f,
  0xa7,
  0x1f,
  0xa8,
  0xe6,
  0xf8,
  0xa8,
  0x67,
  0x79,
  0x07,
  0x07,
  0x07,
  0xa8,
  0xe6,
  0xc7,
  0xa8,
  0x07,
  0x07,
  0x6f,
  0x79,
  0xe6,
  0x07,
  0xc9,
  0xcd,
  0x07,
  0x23,
  0xcd,
  0xaa,
  0x22,
  0x47,
  0x04,
  0x7e,
  0x07,
  0x10,
  0xfd,
  0xe6,
  0x01,
  0xc3,
  0x28,
  0x2d,
  0xcd,
  0x07,
  0x23,
  0xcd,
  0xe5,
  0x22,
  0xc3,
  0x4d,
  0x0d,
  0xed,
  0x43,
  0x7d,
  0x5c,
  0xcd,
  0xaa,
  0x22,
  0x47,
  0x04,
  0x3e,
  0xfe,
  0x0f,
  0x10,
  0xfd,
  0x47,
  0x7e,
  0xfd,
  0x4e,
  0x57,
  0xcb,
  0x41,
  0x20,
  0x01,
  0xa0,
  0xcb,
  0x51,
  0x20,
  0x02,
  0xa8,
  0x2f,
  0x77,
  0xc3,
  0xdb,
  0x0b,
  0xcd,
  0x14,
  0x23,
  0x47,
  0xc5,
  0xcd,
  0x14,
  0x23,
  0x59,
  0xc1,
  0x51,
  0x4f,
  0xc9,
  0xcd,
  0xd5,
  0x2d,
  0xda,
  0xf9,
  0x24,
  0x0e,
  0x01,
  0xc8,
  0x0e,
  0xff,
  0xc9,
  0xdf,
  0xfe,
  0x2c,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xef,
  0x2a,
  0x3d,
  0x38,
  0x7e,
  0xfe,
  0x81,
  0x30,
  0x05,
  0xef,
  0x02,
  0x38,
  0x18,
  0xa1,
  0xef,
  0xa3,
  0x38,
  0x36,
  0x83,
  0xef,
  0xc5,
  0x02,
  0x38,
  0xcd,
  0x7d,
  0x24,
  0xc5,
  0xef,
  0x31,
  0xe1,
  0x04,
  0x38,
  0x7e,
  0xfe,
  0x80,
  0x30,
  0x08,
  0xef,
  0x02,
  0x02,
  0x38,
  0xc1,
  0xc3,
  0xdc,
  0x22,
  0xef,
  0xc2,
  0x01,
  0xc0,
  0x02,
  0x03,
  0x01,
  0xe0,
  0x0f,
  0xc0,
  0x01,
  0x31,
  0xe0,
  0x01,
  0x31,
  0xe0,
  0xa0,
  0xc1,
  0x02,
  0x38,
  0xfd,
  0x34,
  0x62,
  0xcd,
  0x94,
  0x1e,
  0x6f,
  0xe5,
  0xcd,
  0x94,
  0x1e,
  0xe1,
  0x67,
  0x22,
  0x7d,
  0x5c,
  0xc1,
  0xc3,
  0x20,
  0x24,
  0xdf,
  0xfe,
  0x2c,
  0x28,
  0x06,
  0xcd,
  0xee,
  0x1b,
  0xc3,
  0x77,
  0x24,
  0xe7,
  0xcd,
  0x82,
  0x1c,
  0xcd,
  0xee,
  0x1b,
  0xef,
  0xc5,
  0xa2,
  0x04,
  0x1f,
  0x31,
  0x30,
  0x30,
  0x00,
  0x06,
  0x02,
  0x38,
  0xc3,
  0x77,
  0x24,
  0xc0,
  0x02,
  0xc1,
  0x02,
  0x31,
  0x2a,
  0xe1,
  0x01,
  0xe1,
  0x2a,
  0x0f,
  0xe0,
  0x05,
  0x2a,
  0xe0,
  0x01,
  0x3d,
  0x38,
  0x7e,
  0xfe,
  0x81,
  0x30,
  0x07,
  0xef,
  0x02,
  0x02,
  0x38,
  0xc3,
  0x77,
  0x24,
  0xcd,
  0x7d,
  0x24,
  0xc5,
  0xef,
  0x02,
  0xe1,
  0x01,
  0x05,
  0xc1,
  0x02,
  0x01,
  0x31,
  0xe1,
  0x04,
  0xc2,
  0x02,
  0x01,
  0x31,
  0xe1,
  0x04,
  0xe2,
  0xe5,
  0xe0,
  0x03,
  0xa2,
  0x04,
  0x31,
  0x1f,
  0xc5,
  0x02,
  0x20,
  0xc0,
  0x02,
  0xc2,
  0x02,
  0xc1,
  0xe5,
  0x04,
  0xe0,
  0xe2,
  0x04,
  0x0f,
  0xe1,
  0x01,
  0xc1,
  0x02,
  0xe0,
  0x04,
  0xe2,
  0xe5,
  0x04,
  0x03,
  0xc2,
  0x2a,
  0xe1,
  0x2a,
  0x0f,
  0x02,
  0x38,
  0x1a,
  0xfe,
  0x81,
  0xc1,
  0xda,
  0x77,
  0x24,
  0xc5,
  0xef,
  0x01,
  0x38,
  0x3a,
  0x7d,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0xc0,
  0x0f,
  0x01,
  0x38,
  0x3a,
  0x7e,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0xc5,
  0x0f,
  0xe0,
  0xe5,
  0x38,
  0xc1,
  0x05,
  0x28,
  0x3c,
  0x18,
  0x14,
  0xef,
  0xe1,
  0x31,
  0xe3,
  0x04,
  0xe2,
  0xe4,
  0x04,
  0x03,
  0xc1,
  0x02,
  0xe4,
  0x04,
  0xe2,
  0xe3,
  0x04,
  0x0f,
  0xc2,
  0x02,
  0x38,
  0xc5,
  0xef,
  0xc0,
  0x02,
  0xe1,
  0x0f,
  0x31,
  0x38,
  0x3a,
  0x7d,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0x03,
  0xe0,
  0xe2,
  0x0f,
  0xc0,
  0x01,
  0xe0,
  0x38,
  0x3a,
  0x7e,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0x03,
  0x38,
  0xcd,
  0xb7,
  0x24,
  0xc1,
  0x10,
  0xc6,
  0xef,
  0x02,
  0x02,
  0x01,
  0x38,
  0x3a,
  0x7d,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0x03,
  0x01,
  0x38,
  0x3a,
  0x7e,
  0x5c,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0x03,
  0x38,
  0xcd,
  0xb7,
  0x24,
  0xc3,
  0x4d,
  0x0d,
  0xef,
  0x31,
  0x28,
  0x34,
  0x32,
  0x00,
  0x01,
  0x05,
  0xe5,
  0x01,
  0x05,
  0x2a,
  0x38,
  0xcd,
  0xd5,
  0x2d,
  0x38,
  0x06,
  0xe6,
  0xfc,
  0xc6,
  0x04,
  0x30,
  0x02,
  0x3e,
  0xfc,
  0xf5,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0xe5,
  0x01,
  0x05,
  0x31,
  0x1f,
  0xc4,
  0x02,
  0x31,
  0xa2,
  0x04,
  0x1f,
  0xc1,
  0x01,
  0xc0,
  0x02,
  0x31,
  0x04,
  0x31,
  0x0f,
  0xa1,
  0x03,
  0x1b,
  0xc3,
  0x02,
  0x38,
  0xc1,
  0xc9,
  0xcd,
  0x07,
  0x23,
  0x79,
  0xb8,
  0x30,
  0x06,
  0x69,
  0xd5,
  0xaf,
  0x5f,
  0x18,
  0x07,
  0xb1,
  0xc8,
  0x68,
  0x41,
  0xd5,
  0x16,
  0x00,
  0x60,
  0x78,
  0x1f,
  0x85,
  0x38,
  0x03,
  0xbc,
  0x38,
  0x07,
  0x94,
  0x4f,
  0xd9,
  0xc1,
  0xc5,
  0x18,
  0x04,
  0x4f,
  0xd5,
  0xd9,
  0xc1,
  0x2a,
  0x7d,
  0x5c,
  0x78,
  0x84,
  0x47,
  0x79,
  0x3c,
  0x85,
  0x38,
  0x0d,
  0x28,
  0x0d,
  0x3d,
  0x4f,
  0xcd,
  0xe5,
  0x22,
  0xd9,
  0x79,
  0x10,
  0xd9,
  0xd1,
  0xc9,
  0x28,
  0xf3,
  0xcf,
  0x0a,
  0xdf,
  0x06,
  0x00,
  0xc5,
  0x4f,
  0x21,
  0x96,
  0x25,
  0xcd,
  0xdc,
  0x16,
  0x79,
  0xd2,
  0x84,
  0x26,
  0x06,
  0x00,
  0x4e,
  0x09,
  0xe9,
  0xcd,
  0x74,
  0x00,
  0x03,
  0xfe,
  0x0d,
  0xca,
  0x8a,
  0x1c,
  0xfe,
  0x22,
  0x20,
  0xf3,
  0xcd,
  0x74,
  0x00,
  0xfe,
  0x22,
  0xc9,
  0xe7,
  0xfe,
  0x28,
  0x20,
  0x06,
  0xcd,
  0x79,
  0x1c,
  0xdf,
  0xfe,
  0x29,
  0xc2,
  0x8a,
  0x1c,
  0xfd,
  0xcb,
  0x01,
  0x7e,
  0xc9,
  0xcd,
  0x07,
  0x23,
  0x2a,
  0x36,
  0x5c,
  0x11,
  0x00,
  0x01,
  0x19,
  0x79,
  0x0f,
  0x0f,
  0x0f,
  0xe6,
  0xe0,
  0xa8,
  0x5f,
  0x79,
  0xe6,
  0x18,
  0xee,
  0x40,
  0x57,
  0x06,
  0x60,
  0xc5,
  0xd5,
  0xe5,
  0x1a,
  0xae,
  0x28,
  0x04,
  0x3c,
  0x20,
  0x1a,
  0x3d,
  0x4f,
  0x06,
  0x07,
  0x14,
  0x23,
  0x1a,
  0xae,
  0xa9,
  0x20,
  0x0f,
  0x10,
  0xf7,
  0xc1,
  0xc1,
  0xc1,
  0x3e,
  0x80,
  0x90,
  0x01,
  0x01,
  0x00,
  0xf7,
  0x12,
  0x18,
  0x0a,
  0xe1,
  0x11,
  0x08,
  0x00,
  0x19,
  0xd1,
  0xc1,
  0x10,
  0xd3,
  0x48,
  0xc3,
  0xb2,
  0x2a,
  0xcd,
  0x07,
  0x23,
  0x79,
  0x0f,
  0x0f,
  0x0f,
  0x4f,
  0xe6,
  0xe0,
  0xa8,
  0x6f,
  0x79,
  0xe6,
  0x03,
  0xee,
  0x58,
  0x67,
  0x7e,
  0xc3,
  0x28,
  0x2d,
  0x22,
  0x1c,
  0x28,
  0x4f,
  0x2e,
  0xf2,
  0x2b,
  0x12,
  0xa8,
  0x56,
  0xa5,
  0x57,
  0xa7,
  0x84,
  0xa6,
  0x8f,
  0xc4,
  0xe6,
  0xaa,
  0xbf,
  0xab,
  0xc7,
  0xa9,
  0xce,
  0x00,
  0xe7,
  0xc3,
  0xff,
  0x24,
  0xdf,
  0x23,
  0xe5,
  0x01,
  0x00,
  0x00,
  0xcd,
  0x0f,
  0x25,
  0x20,
  0x1b,
  0xcd,
  0x0f,
  0x25,
  0x28,
  0xfb,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x11,
  0xf7,
  0xe1,
  0xd5,
  0x7e,
  0x23,
  0x12,
  0x13,
  0xfe,
  0x22,
  0x20,
  0xf8,
  0x7e,
  0x23,
  0xfe,
  0x22,
  0x28,
  0xf2,
  0x0b,
  0xd1,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0xb6,
  0xcb,
  0x7e,
  0xc4,
  0xb2,
  0x2a,
  0xc3,
  0x12,
  0x27,
  0xe7,
  0xcd,
  0xfb,
  0x24,
  0xfe,
  0x29,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0xc3,
  0x12,
  0x27,
  0xc3,
  0xbd,
  0x27,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x28,
  0xed,
  0x4b,
  0x76,
  0x5c,
  0xcd,
  0x2b,
  0x2d,
  0xef,
  0xa1,
  0x0f,
  0x34,
  0x37,
  0x16,
  0x04,
  0x34,
  0x80,
  0x41,
  0x00,
  0x00,
  0x80,
  0x32,
  0x02,
  0xa1,
  0x03,
  0x31,
  0x38,
  0xcd,
  0xa2,
  0x2d,
  0xed,
  0x43,
  0x76,
  0x5c,
  0x7e,
  0xa7,
  0x28,
  0x03,
  0xd6,
  0x10,
  0x77,
  0x18,
  0x09,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x04,
  0xef,
  0xa3,
  0x38,
  0x34,
  0xe7,
  0xc3,
  0xc3,
  0x26,
  0x01,
  0x5a,
  0x10,
  0xe7,
  0xfe,
  0x23,
  0xca,
  0x0d,
  0x27,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0xb6,
  0xcb,
  0x7e,
  0x28,
  0x1f,
  0xcd,
  0x8e,
  0x02,
  0x0e,
  0x00,
  0x20,
  0x13,
  0xcd,
  0x1e,
  0x03,
  0x30,
  0x0e,
  0x15,
  0x5f,
  0xcd,
  0x33,
  0x03,
  0xf5,
  0x01,
  0x01,
  0x00,
  0xf7,
  0xf1,
  0x12,
  0x0e,
  0x01,
  0x06,
  0x00,
  0xcd,
  0xb2,
  0x2a,
  0xc3,
  0x12,
  0x27,
  0xcd,
  0x22,
  0x25,
  0xc4,
  0x35,
  0x25,
  0xe7,
  0xc3,
  0xdb,
  0x25,
  0xcd,
  0x22,
  0x25,
  0xc4,
  0x80,
  0x25,
  0xe7,
  0x18,
  0x48,
  0xcd,
  0x22,
  0x25,
  0xc4,
  0xcb,
  0x22,
  0xe7,
  0x18,
  0x3f,
  0xcd,
  0x88,
  0x2c,
  0x30,
  0x56,
  0xfe,
  0x41,
  0x30,
  0x3c,
  0xcd,
  0x30,
  0x25,
  0x20,
  0x23,
  0xcd,
  0x9b,
  0x2c,
  0xdf,
  0x01,
  0x06,
  0x00,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x36,
  0x0e,
  0x23,
  0xeb,
  0x2a,
  0x65,
  0x5c,
  0x0e,
  0x05,
  0xa7,
  0xed,
  0x42,
  0x22,
  0x65,
  0x5c,
  0xed,
  0xb0,
  0xeb,
  0x2b,
  0xcd,
  0x77,
  0x00,
  0x18,
  0x0e,
  0xdf,
  0x23,
  0x7e,
  0xfe,
  0x0e,
  0x20,
  0xfa,
  0x23,
  0xcd,
  0xb4,
  0x33,
  0x22,
  0x5d,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xf6,
  0x18,
  0x14,
  0xcd,
  0xb2,
  0x28,
  0xda,
  0x2e,
  0x1c,
  0xcc,
  0x96,
  0x29,
  0x3a,
  0x3b,
  0x5c,
  0xfe,
  0xc0,
  0x38,
  0x04,
  0x23,
  0xcd,
  0xb4,
  0x33,
  0x18,
  0x33,
  0x01,
  0xdb,
  0x09,
  0xfe,
  0x2d,
  0x28,
  0x27,
  0x01,
  0x18,
  0x10,
  0xfe,
  0xae,
  0x28,
  0x20,
  0xd6,
  0xaf,
  0xda,
  0x8a,
  0x1c,
  0x01,
  0xf0,
  0x04,
  0xfe,
  0x14,
  0x28,
  0x14,
  0xd2,
  0x8a,
  0x1c,
  0x06,
  0x10,
  0xc6,
  0xdc,
  0x4f,
  0xfe,
  0xdf,
  0x30,
  0x02,
  0xcb,
  0xb1,
  0xfe,
  0xee,
  0x38,
  0x02,
  0xcb,
  0xb9,
  0xc5,
  0xe7,
  0xc3,
  0xff,
  0x24,
  0xdf,
  0xfe,
  0x28,
  0x20,
  0x0c,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0x20,
  0x17,
  0xcd,
  0x52,
  0x2a,
  0xe7,
  0x18,
  0xf0,
  0x06,
  0x00,
  0x4f,
  0x21,
  0x95,
  0x27,
  0xcd,
  0xdc,
  0x16,
  0x30,
  0x06,
  0x4e,
  0x21,
  0xed,
  0x26,
  0x09,
  0x46,
  0xd1,
  0x7a,
  0xb8,
  0x38,
  0x3a,
  0xa7,
  0xca,
  0x18,
  0x00,
  0xc5,
  0x21,
  0x3b,
  0x5c,
  0x7b,
  0xfe,
  0xed,
  0x20,
  0x06,
  0xcb,
  0x76,
  0x20,
  0x02,
  0x1e,
  0x99,
  0xd5,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x09,
  0x7b,
  0xe6,
  0x3f,
  0x47,
  0xef,
  0x3b,
  0x38,
  0x18,
  0x09,
  0x7b,
  0xfd,
  0xae,
  0x01,
  0xe6,
  0x40,
  0xc2,
  0x8a,
  0x1c,
  0xd1,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0xf6,
  0xcb,
  0x7b,
  0x20,
  0x02,
  0xcb,
  0xb6,
  0xc1,
  0x18,
  0xc1,
  0xd5,
  0x79,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0x20,
  0x15,
  0xe6,
  0x3f,
  0xc6,
  0x08,
  0x4f,
  0xfe,
  0x10,
  0x20,
  0x04,
  0xcb,
  0xf1,
  0x18,
  0x08,
  0x38,
  0xd7,
  0xfe,
  0x17,
  0x28,
  0x02,
  0xcb,
  0xf9,
  0xc5,
  0xe7,
  0xc3,
  0xff,
  0x24,
  0x2b,
  0xcf,
  0x2d,
  0xc3,
  0x2a,
  0xc4,
  0x2f,
  0xc5,
  0x5e,
  0xc6,
  0x3d,
  0xce,
  0x3e,
  0xcc,
  0x3c,
  0xcd,
  0xc7,
  0xc9,
  0xc8,
  0xca,
  0xc9,
  0xcb,
  0xc5,
  0xc7,
  0xc6,
  0xc8,
  0x00,
  0x06,
  0x08,
  0x08,
  0x0a,
  0x02,
  0x03,
  0x05,
  0x05,
  0x05,
  0x05,
  0x05,
  0x05,
  0x06,
  0xcd,
  0x30,
  0x25,
  0x20,
  0x35,
  0xe7,
  0xcd,
  0x8d,
  0x2c,
  0xd2,
  0x8a,
  0x1c,
  0xe7,
  0xfe,
  0x24,
  0xf5,
  0x20,
  0x01,
  0xe7,
  0xfe,
  0x28,
  0x20,
  0x12,
  0xe7,
  0xfe,
  0x29,
  0x28,
  0x10,
  0xcd,
  0xfb,
  0x24,
  0xdf,
  0xfe,
  0x2c,
  0x20,
  0x03,
  0xe7,
  0x18,
  0xf5,
  0xfe,
  0x29,
  0xc2,
  0x8a,
  0x1c,
  0xe7,
  0x21,
  0x3b,
  0x5c,
  0xcb,
  0xb6,
  0xf1,
  0x28,
  0x02,
  0xcb,
  0xf6,
  0xc3,
  0x12,
  0x27,
  0xe7,
  0xe6,
  0xdf,
  0x47,
  0xe7,
  0xd6,
  0x24,
  0x4f,
  0x20,
  0x01,
  0xe7,
  0xe7,
  0xe5,
  0x2a,
  0x53,
  0x5c,
  0x2b,
  0x11,
  0xce,
  0x00,
  0xc5,
  0xcd,
  0x86,
  0x1d,
  0xc1,
  0x30,
  0x02,
  0xcf,
  0x18,
  0xe5,
  0xcd,
  0xab,
  0x28,
  0xe6,
  0xdf,
  0xb8,
  0x20,
  0x08,
  0xcd,
  0xab,
  0x28,
  0xd6,
  0x24,
  0xb9,
  0x28,
  0x0c,
  0xe1,
  0x2b,
  0x11,
  0x00,
  0x02,
  0xc5,
  0xcd,
  0x8b,
  0x19,
  0xc1,
  0x18,
  0xd7,
  0xa7,
  0xcc,
  0xab,
  0x28,
  0xd1,
  0xd1,
  0xed,
  0x53,
  0x5d,
  0x5c,
  0xcd,
  0xab,
  0x28,
  0xe5,
  0xfe,
  0x29,
  0x28,
  0x42,
  0x23,
  0x7e,
  0xfe,
  0x0e,
  0x16,
  0x40,
  0x28,
  0x07,
  0x2b,
  0xcd,
  0xab,
  0x28,
  0x23,
  0x16,
  0x00,
  0x23,
  0xe5,
  0xd5,
  0xcd,
  0xfb,
  0x24,
  0xf1,
  0xfd,
  0xae,
  0x01,
  0xe6,
  0x40,
  0x20,
  0x2b,
  0xe1,
  0xeb,
  0x2a,
  0x65,
  0x5c,
  0x01,
  0x05,
  0x00,
  0xed,
  0x42,
  0x22,
  0x65,
  0x5c,
  0xed,
  0xb0,
  0xeb,
  0x2b,
  0xcd,
  0xab,
  0x28,
  0xfe,
  0x29,
  0x28,
  0x0d,
  0xe5,
  0xdf,
  0xfe,
  0x2c,
  0x20,
  0x0d,
  0xe7,
  0xe1,
  0xcd,
  0xab,
  0x28,
  0x18,
  0xbe,
  0xe5,
  0xdf,
  0xfe,
  0x29,
  0x28,
  0x02,
  0xcf,
  0x19,
  0xd1,
  0xeb,
  0x22,
  0x5d,
  0x5c,
  0x2a,
  0x0b,
  0x5c,
  0xe3,
  0x22,
  0x0b,
  0x5c,
  0xd5,
  0xe7,
  0xe7,
  0xcd,
  0xfb,
  0x24,
  0xe1,
  0x22,
  0x5d,
  0x5c,
  0xe1,
  0x22,
  0x0b,
  0x5c,
  0xe7,
  0xc3,
  0x12,
  0x27,
  0x23,
  0x7e,
  0xfe,
  0x21,
  0x38,
  0xfa,
  0xc9,
  0xfd,
  0xcb,
  0x01,
  0xf6,
  0xdf,
  0xcd,
  0x8d,
  0x2c,
  0xd2,
  0x8a,
  0x1c,
  0xe5,
  0xe6,
  0x1f,
  0x4f,
  0xe7,
  0xe5,
  0xfe,
  0x28,
  0x28,
  0x28,
  0xcb,
  0xf1,
  0xfe,
  0x24,
  0x28,
  0x11,
  0xcb,
  0xe9,
  0xcd,
  0x88,
  0x2c,
  0x30,
  0x0f,
  0xcd,
  0x88,
  0x2c,
  0x30,
  0x16,
  0xcb,
  0xb1,
  0xe7,
  0x18,
  0xf6,
  0xe7,
  0xfd,
  0xcb,
  0x01,
  0xb6,
  0x3a,
  0x0c,
  0x5c,
  0xa7,
  0x28,
  0x06,
  0xcd,
  0x30,
  0x25,
  0xc2,
  0x51,
  0x29,
  0x41,
  0xcd,
  0x30,
  0x25,
  0x20,
  0x08,
  0x79,
  0xe6,
  0xe0,
  0xcb,
  0xff,
  0x4f,
  0x18,
  0x37,
  0x2a,
  0x4b,
  0x5c,
  0x7e,
  0xe6,
  0x7f,
  0x28,
  0x2d,
  0xb9,
  0x20,
  0x22,
  0x17,
  0x87,
  0xf2,
  0x3f,
  0x29,
  0x38,
  0x30,
  0xd1,
  0xd5,
  0xe5,
  0x23,
  0x1a,
  0x13,
  0xfe,
  0x20,
  0x28,
  0xfa,
  0xf6,
  0x20,
  0xbe,
  0x28,
  0xf4,
  0xf6,
  0x80,
  0xbe,
  0x20,
  0x06,
  0x1a,
  0xcd,
  0x88,
  0x2c,
  0x30,
  0x15,
  0xe1,
  0xc5,
  0xcd,
  0xb8,
  0x19,
  0xeb,
  0xc1,
  0x18,
  0xce,
  0xcb,
  0xf8,
  0xd1,
  0xdf,
  0xfe,
  0x28,
  0x28,
  0x09,
  0xcb,
  0xe8,
  0x18,
  0x0d,
  0xd1,
  0xd1,
  0xd1,
  0xe5,
  0xdf,
  0xcd,
  0x88,
  0x2c,
  0x30,
  0x03,
  0xe7,
  0x18,
  0xf8,
  0xe1,
  0xcb,
  0x10,
  0xcb,
  0x70,
  0xc9,
  0x2a,
  0x0b,
  0x5c,
  0x7e,
  0xfe,
  0x29,
  0xca,
  0xef,
  0x28,
  0x7e,
  0xf6,
  0x60,
  0x47,
  0x23,
  0x7e,
  0xfe,
  0x0e,
  0x28,
  0x07,
  0x2b,
  0xcd,
  0xab,
  0x28,
  0x23,
  0xcb,
  0xa8,
  0x78,
  0xb9,
  0x28,
  0x12,
  0x23,
  0x23,
  0x23,
  0x23,
  0x23,
  0xcd,
  0xab,
  0x28,
  0xfe,
  0x29,
  0xca,
  0xef,
  0x28,
  0xcd,
  0xab,
  0x28,
  0x18,
  0xd9,
  0xcb,
  0x69,
  0x20,
  0x0c,
  0x23,
  0xed,
  0x5b,
  0x65,
  0x5c,
  0xcd,
  0xc0,
  0x33,
  0xeb,
  0x22,
  0x65,
  0x5c,
  0xd1,
  0xd1,
  0xaf,
  0x3c,
  0xc9,
  0xaf,
  0x47,
  0xcb,
  0x79,
  0x20,
  0x4b,
  0xcb,
  0x7e,
  0x20,
  0x0e,
  0x3c,
  0x23,
  0x4e,
  0x23,
  0x46,
  0x23,
  0xeb,
  0xcd,
  0xb2,
  0x2a,
  0xdf,
  0xc3,
  0x49,
  0x2a,
  0x23,
  0x23,
  0x23,
  0x46,
  0xcb,
  0x71,
  0x28,
  0x0a,
  0x05,
  0x28,
  0xe8,
  0xeb,
  0xdf,
  0xfe,
  0x28,
  0x20,
  0x61,
  0xeb,
  0xeb,
  0x18,
  0x24,
  0xe5,
  0xdf,
  0xe1,
  0xfe,
  0x2c,
  0x28,
  0x20,
  0xcb,
  0x79,
  0x28,
  0x52,
  0xcb,
  0x71,
  0x20,
  0x06,
  0xfe,
  0x29,
  0x20,
  0x3c,
  0xe7,
  0xc9,
  0xfe,
  0x29,
  0x28,
  0x6c,
  0xfe,
  0xcc,
  0x20,
  0x32,
  0xdf,
  0x2b,
  0x22,
  0x5d,
  0x5c,
  0x18,
  0x5e,
  0x21,
  0x00,
  0x00,
  0xe5,
  0xe7,
  0xe1,
  0x79,
  0xfe,
  0xc0,
  0x20,
  0x09,
  0xdf,
  0xfe,
  0x29,
  0x28,
  0x51,
  0xfe,
  0xcc,
  0x28,
  0xe5,
  0xc5,
  0xe5,
  0xcd,
  0xee,
  0x2a,
  0xe3,
  0xeb,
  0xcd,
  0xcc,
  0x2a,
  0x38,
  0x19,
  0x0b,
  0xcd,
  0xf4,
  0x2a,
  0x09,
  0xd1,
  0xc1,
  0x10,
  0xb3,
  0xcb,
  0x79,
  0x20,
  0x66,
  0xe5,
  0xcb,
  0x71,
  0x20,
  0x13,
  0x42,
  0x4b,
  0xdf,
  0xfe,
  0x29,
  0x28,
  0x02,
  0xcf,
  0x02,
  0xe7,
  0xe1,
  0x11,
  0x05,
  0x00,
  0xcd,
  0xf4,
  0x2a,
  0x09,
  0xc9,
  0xcd,
  0xee,
  0x2a,
  0xe3,
  0xcd,
  0xf4,
  0x2a,
  0xc1,
  0x09,
  0x23,
  0x42,
  0x4b,
  0xeb,
  0xcd,
  0xb1,
  0x2a,
  0xdf,
  0xfe,
  0x29,
  0x28,
  0x07,
  0xfe,
  0x2c,
  0x20,
  0xdb,
  0xcd,
  0x52,
  0x2a,
  0xe7,
  0xfe,
  0x28,
  0x28,
  0xf8,
  0xfd,
  0xcb,
  0x01,
  0xb6,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0xc4,
  0xf1,
  0x2b,
  0xe7,
  0xfe,
  0x29,
  0x28,
  0x50,
  0xd5,
  0xaf,
  0xf5,
  0xc5,
  0x11,
  0x01,
  0x00,
  0xdf,
  0xe1,
  0xfe,
  0xcc,
  0x28,
  0x17,
  0xf1,
  0xcd,
  0xcd,
  0x2a,
  0xf5,
  0x50,
  0x59,
  0xe5,
  0xdf,
  0xe1,
  0xfe,
  0xcc,
  0x28,
  0x09,
  0xfe,
  0x29,
  0xc2,
  0x8a,
  0x1c,
  0x62,
  0x6b,
  0x18,
  0x13,
  0xe5,
  0xe7,
  0xe1,
  0xfe,
  0x29,
  0x28,
  0x0c,
  0xf1,
  0xcd,
  0xcd,
  0x2a,
  0xf5,
  0xdf,
  0x60,
  0x69,
  0xfe,
  0x29,
  0x20,
  0xe6,
  0xf1,
  0xe3,
  0x19,
  0x2b,
  0xe3,
  0xa7,
  0xed,
  0x52,
  0x01,
  0x00,
  0x00,
  0x38,
  0x07,
  0x23,
  0xa7,
  0xfa,
  0x20,
  0x2a,
  0x44,
  0x4d,
  0xd1,
  0xfd,
  0xcb,
  0x01,
  0xb6,
  0xcd,
  0x30,
  0x25,
  0xc8,
  0xaf,
  0xfd,
  0xcb,
  0x01,
  0xb6,
  0xc5,
  0xcd,
  0xa9,
  0x33,
  0xc1,
  0x2a,
  0x65,
  0x5c,
  0x77,
  0x23,
  0x73,
  0x23,
  0x72,
  0x23,
  0x71,
  0x23,
  0x70,
  0x23,
  0x22,
  0x65,
  0x5c,
  0xc9,
  0xaf,
  0xd5,
  0xe5,
  0xf5,
  0xcd,
  0x82,
  0x1c,
  0xf1,
  0xcd,
  0x30,
  0x25,
  0x28,
  0x12,
  0xf5,
  0xcd,
  0x99,
  0x1e,
  0xd1,
  0x78,
  0xb1,
  0x37,
  0x28,
  0x05,
  0xe1,
  0xe5,
  0xa7,
  0xed,
  0x42,
  0x7a,
  0xde,
  0x00,
  0xe1,
  0xd1,
  0xc9,
  0xeb,
  0x23,
  0x5e,
  0x23,
  0x56,
  0xc9,
  0xcd,
  0x30,
  0x25,
  0xc8,
  0xcd,
  0xa9,
  0x30,
  0xda,
  0x15,
  0x1f,
  0xc9,
  0x2a,
  0x4d,
  0x5c,
  0xfd,
  0xcb,
  0x37,
  0x4e,
  0x28,
  0x5e,
  0x01,
  0x05,
  0x00,
  0x03,
  0x23,
  0x7e,
  0xfe,
  0x20,
  0x28,
  0xfa,
  0x30,
  0x0b,
  0xfe,
  0x10,
  0x38,
  0x11,
  0xfe,
  0x16,
  0x30,
  0x0d,
  0x23,
  0x18,
  0xed,
  0xcd,
  0x88,
  0x2c,
  0x38,
  0xe7,
  0xfe,
  0x24,
  0xca,
  0xc0,
  0x2b,
  0x79,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x23,
  0xeb,
  0xd5,
  0x2a,
  0x4d,
  0x5c,
  0x1b,
  0xd6,
  0x06,
  0x47,
  0x28,
  0x11,
  0x23,
  0x7e,
  0xfe,
  0x21,
  0x38,
  0xfa,
  0xf6,
  0x20,
  0x13,
  0x12,
  0x10,
  0xf4,
  0xf6,
  0x80,
  0x12,
  0x3e,
  0xc0,
  0x2a,
  0x4d,
  0x5c,
  0xae,
  0xf6,
  0x20,
  0xe1,
  0xcd,
  0xea,
  0x2b,
  0xe5,
  0xef,
  0x02,
  0x38,
  0xe1,
  0x01,
  0x05,
  0x00,
  0xa7,
  0xed,
  0x42,
  0x18,
  0x40,
  0xfd,
  0xcb,
  0x01,
  0x76,
  0x28,
  0x06,
  0x11,
  0x06,
  0x00,
  0x19,
  0x18,
  0xe7,
  0x2a,
  0x4d,
  0x5c,
  0xed,
  0x4b,
  0x72,
  0x5c,
  0xfd,
  0xcb,
  0x37,
  0x46,
  0x20,
  0x30,
  0x78,
  0xb1,
  0xc8,
  0xe5,
  0xf7,
  0xd5,
  0xc5,
  0x54,
  0x5d,
  0x23,
  0x36,
  0x20,
  0xed,
  0xb8,
  0xe5,
  0xcd,
  0xf1,
  0x2b,
  0xe1,
  0xe3,
  0xa7,
  0xed,
  0x42,
  0x09,
  0x30,
  0x02,
  0x44,
  0x4d,
  0xe3,
  0xeb,
  0x78,
  0xb1,
  0x28,
  0x02,
  0xed,
  0xb0,
  0xc1,
  0xd1,
  0xe1,
  0xeb,
  0x78,
  0xb1,
  0xc8,
  0xd5,
  0xed,
  0xb0,
  0xe1,
  0xc9,
  0x2b,
  0x2b,
  0x2b,
  0x7e,
  0xe5,
  0xc5,
  0xcd,
  0xc6,
  0x2b,
  0xc1,
  0xe1,
  0x03,
  0x03,
  0x03,
  0xc3,
  0xe8,
  0x19,
  0x3e,
  0xdf,
  0x2a,
  0x4d,
  0x5c,
  0xa6,
  0xf5,
  0xcd,
  0xf1,
  0x2b,
  0xeb,
  0x09,
  0xc5,
  0x2b,
  0x22,
  0x4d,
  0x5c,
  0x03,
  0x03,
  0x03,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xcd,
  0x55,
  0x16,
  0x2a,
  0x4d,
  0x5c,
  0xc1,
  0xc5,
  0x03,
  0xed,
  0xb8,
  0xeb,
  0x23,
  0xc1,
  0x70,
  0x2b,
  0x71,
  0xf1,
  0x2b,
  0x77,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xc9,
  0x2a,
  0x65,
  0x5c,
  0x2b,
  0x46,
  0x2b,
  0x4e,
  0x2b,
  0x56,
  0x2b,
  0x5e,
  0x2b,
  0x7e,
  0x22,
  0x65,
  0x5c,
  0xc9,
  0xcd,
  0xb2,
  0x28,
  0xc2,
  0x8a,
  0x1c,
  0xcd,
  0x30,
  0x25,
  0x20,
  0x08,
  0xcb,
  0xb1,
  0xcd,
  0x96,
  0x29,
  0xcd,
  0xee,
  0x1b,
  0x38,
  0x08,
  0xc5,
  0xcd,
  0xb8,
  0x19,
  0xcd,
  0xe8,
  0x19,
  0xc1,
  0xcb,
  0xf9,
  0x06,
  0x00,
  0xc5,
  0x21,
  0x01,
  0x00,
  0xcb,
  0x71,
  0x20,
  0x02,
  0x2e,
  0x05,
  0xeb,
  0xe7,
  0x26,
  0xff,
  0xcd,
  0xcc,
  0x2a,
  0xda,
  0x20,
  0x2a,
  0xe1,
  0xc5,
  0x24,
  0xe5,
  0x60,
  0x69,
  0xcd,
  0xf4,
  0x2a,
  0xeb,
  0xdf,
  0xfe,
  0x2c,
  0x28,
  0xe8,
  0xfe,
  0x29,
  0x20,
  0xbb,
  0xe7,
  0xc1,
  0x79,
  0x68,
  0x26,
  0x00,
  0x23,
  0x23,
  0x29,
  0x19,
  0xda,
  0x15,
  0x1f,
  0xd5,
  0xc5,
  0xe5,
  0x44,
  0x4d,
  0x2a,
  0x59,
  0x5c,
  0x2b,
  0xcd,
  0x55,
  0x16,
  0x23,
  0x77,
  0xc1,
  0x0b,
  0x0b,
  0x0b,
  0x23,
  0x71,
  0x23,
  0x70,
  0xc1,
  0x78,
  0x23,
  0x77,
  0x62,
  0x6b,
  0x1b,
  0x36,
  0x00,
  0xcb,
  0x71,
  0x28,
  0x02,
  0x36,
  0x20,
  0xc1,
  0xed,
  0xb8,
  0xc1,
  0x70,
  0x2b,
  0x71,
  0x2b,
  0x3d,
  0x20,
  0xf8,
  0xc9,
  0xcd,
  0x1b,
  0x2d,
  0x3f,
  0xd8,
  0xfe,
  0x41,
  0x3f,
  0xd0,
  0xfe,
  0x5b,
  0xd8,
  0xfe,
  0x61,
  0x3f,
  0xd0,
  0xfe,
  0x7b,
  0xc9,
  0xfe,
  0xc4,
  0x20,
  0x19,
  0x11,
  0x00,
  0x00,
  0xe7,
  0xd6,
  0x31,
  0xce,
  0x00,
  0x20,
  0x0a,
  0xeb,
  0x3f,
  0xed,
  0x6a,
  0xda,
  0xad,
  0x31,
  0xeb,
  0x18,
  0xef,
  0x42,
  0x4b,
  0xc3,
  0x2b,
  0x2d,
  0xfe,
  0x2e,
  0x28,
  0x0f,
  0xcd,
  0x3b,
  0x2d,
  0xfe,
  0x2e,
  0x20,
  0x28,
  0xe7,
  0xcd,
  0x1b,
  0x2d,
  0x38,
  0x22,
  0x18,
  0x0a,
  0xe7,
  0xcd,
  0x1b,
  0x2d,
  0xda,
  0x8a,
  0x1c,
  0xef,
  0xa0,
  0x38,
  0xef,
  0xa1,
  0xc0,
  0x02,
  0x38,
  0xdf,
  0xcd,
  0x22,
  0x2d,
  0x38,
  0x0b,
  0xef,
  0xe0,
  0xa4,
  0x05,
  0xc0,
  0x04,
  0x0f,
  0x38,
  0xe7,
  0x18,
  0xef,
  0xfe,
  0x45,
  0x28,
  0x03,
  0xfe,
  0x65,
  0xc0,
  0x06,
  0xff,
  0xe7,
  0xfe,
  0x2b,
  0x28,
  0x05,
  0xfe,
  0x2d,
  0x20,
  0x02,
  0x04,
  0xe7,
  0xcd,
  0x1b,
  0x2d,
  0x38,
  0xcb,
  0xc5,
  0xcd,
  0x3b,
  0x2d,
  0xcd,
  0xd5,
  0x2d,
  0xc1,
  0xda,
  0xad,
  0x31,
  0xa7,
  0xfa,
  0xad,
  0x31,
  0x04,
  0x28,
  0x02,
  0xed,
  0x44,
  0xc3,
  0x4f,
  0x2d,
  0xfe,
  0x30,
  0xd8,
  0xfe,
  0x3a,
  0x3f,
  0xc9,
  0xcd,
  0x1b,
  0x2d,
  0xd8,
  0xd6,
  0x30,
  0x4f,
  0x06,
  0x00,
  0xfd,
  0x21,
  0x3a,
  0x5c,
  0xaf,
  0x5f,
  0x51,
  0x48,
  0x47,
  0xcd,
  0xb6,
  0x2a,
  0xef,
  0x38,
  0xa7,
  0xc9,
  0xf5,
  0xef,
  0xa0,
  0x38,
  0xf1,
  0xcd,
  0x22,
  0x2d,
  0xd8,
  0xef,
  0x01,
  0xa4,
  0x04,
  0x0f,
  0x38,
  0xcd,
  0x74,
  0x00,
  0x18,
  0xf1,
  0x07,
  0x0f,
  0x30,
  0x02,
  0x2f,
  0x3c,
  0xf5,
  0x21,
  0x92,
  0x5c,
  0xcd,
  0x0b,
  0x35,
  0xef,
  0xa4,
  0x38,
  0xf1,
  0xcb,
  0x3f,
  0x30,
  0x0d,
  0xf5,
  0xef,
  0xc1,
  0xe0,
  0x00,
  0x04,
  0x04,
  0x33,
  0x02,
  0x05,
  0xe1,
  0x38,
  0xf1,
  0x28,
  0x08,
  0xf5,
  0xef,
  0x31,
  0x04,
  0x38,
  0xf1,
  0x18,
  0xe5,
  0xef,
  0x02,
  0x38,
  0xc9,
  0x23,
  0x4e,
  0x23,
  0x7e,
  0xa9,
  0x91,
  0x5f,
  0x23,
  0x7e,
  0x89,
  0xa9,
  0x57,
  0xc9,
  0x0e,
  0x00,
  0xe5,
  0x36,
  0x00,
  0x23,
  0x71,
  0x23,
  0x7b,
  0xa9,
  0x91,
  0x77,
  0x23,
  0x7a,
  0x89,
  0xa9,
  0x77,
  0x23,
  0x36,
  0x00,
  0xe1,
  0xc9,
  0xef,
  0x38,
  0x7e,
  0xa7,
  0x28,
  0x05,
  0xef,
  0xa2,
  0x0f,
  0x27,
  0x38,
  0xef,
  0x02,
  0x38,
  0xe5,
  0xd5,
  0xeb,
  0x46,
  0xcd,
  0x7f,
  0x2d,
  0xaf,
  0x90,
  0xcb,
  0x79,
  0x42,
  0x4b,
  0x7b,
  0xd1,
  0xe1,
  0xc9,
  0x57,
  0x17,
  0x9f,
  0x5f,
  0x4f,
  0xaf,
  0x47,
  0xcd,
  0xb6,
  0x2a,
  0xef,
  0x34,
  0xef,
  0x1a,
  0x20,
  0x9a,
  0x85,
  0x04,
  0x27,
  0x38,
  0xcd,
  0xa2,
  0x2d,
  0xd8,
  0xf5,
  0x05,
  0x04,
  0x28,
  0x03,
  0xf1,
  0x37,
  0xc9,
  0xf1,
  0xc9,
  0xef,
  0x31,
  0x36,
  0x00,
  0x0b,
  0x31,
  0x37,
  0x00,
  0x0d,
  0x02,
  0x38,
  0x3e,
  0x30,
  0xd7,
  0xc9,
  0x2a,
  0x38,
  0x3e,
  0x2d,
  0xd7,
  0xef,
  0xa0,
  0xc3,
  0xc4,
  0xc5,
  0x02,
  0x38,
  0xd9,
  0xe5,
  0xd9,
  0xef,
  0x31,
  0x27,
  0xc2,
  0x03,
  0xe2,
  0x01,
  0xc2,
  0x02,
  0x38,
  0x7e,
  0xa7,
  0x20,
  0x47,
  0xcd,
  0x7f,
  0x2d,
  0x06,
  0x10,
  0x7a,
  0xa7,
  0x20,
  0x06,
  0xb3,
  0x28,
  0x09,
  0x53,
  0x06,
  0x08,
  0xd5,
  0xd9,
  0xd1,
  0xd9,
  0x18,
  0x57,
  0xef,
  0xe2,
  0x38,
  0x7e,
  0xd6,
  0x7e,
  0xcd,
  0xc1,
  0x2d,
  0x57,
  0x3a,
  0xac,
  0x5c,
  0x92,
  0x32,
  0xac,
  0x5c,
  0x7a,
  0xcd,
  0x4f,
  0x2d,
  0xef,
  0x31,
  0x27,
  0xc1,
  0x03,
  0xe1,
  0x38,
  0xcd,
  0xd5,
  0x2d,
  0xe5,
  0x32,
  0xa1,
  0x5c,
  0x3d,
  0x17,
  0x9f,
  0x3c,
  0x21,
  0xab,
  0x5c,
  0x77,
  0x23,
  0x86,
  0x77,
  0xe1,
  0xc3,
  0xcf,
  0x2e,
  0xd6,
  0x80,
  0xfe,
  0x1c,
  0x38,
  0x13,
  0xcd,
  0xc1,
  0x2d,
  0xd6,
  0x07,
  0x47,
  0x21,
  0xac,
  0x5c,
  0x86,
  0x77,
  0x78,
  0xed,
  0x44,
  0xcd,
  0x4f,
  0x2d,
  0x18,
  0x92,
  0xeb,
  0xcd,
  0xba,
  0x2f,
  0xd9,
  0xcb,
  0xfa,
  0x7d,
  0xd9,
  0xd6,
  0x80,
  0x47,
  0xcb,
  0x23,
  0xcb,
  0x12,
  0xd9,
  0xcb,
  0x13,
  0xcb,
  0x12,
  0xd9,
  0x21,
  0xaa,
  0x5c,
  0x0e,
  0x05,
  0x7e,
  0x8f,
  0x27,
  0x77,
  0x2b,
  0x0d,
  0x20,
  0xf8,
  0x10,
  0xe7,
  0xaf,
  0x21,
  0xa6,
  0x5c,
  0x11,
  0xa1,
  0x5c,
  0x06,
  0x09,
  0xed,
  0x6f,
  0x0e,
  0xff,
  0xed,
  0x6f,
  0x20,
  0x04,
  0x0d,
  0x0c,
  0x20,
  0x0a,
  0x12,
  0x13,
  0xfd,
  0x34,
  0x71,
  0xfd,
  0x34,
  0x72,
  0x0e,
  0x00,
  0xcb,
  0x40,
  0x28,
  0x01,
  0x23,
  0x10,
  0xe7,
  0x3a,
  0xab,
  0x5c,
  0xd6,
  0x09,
  0x38,
  0x0a,
  0xfd,
  0x35,
  0x71,
  0x3e,
  0x04,
  0xfd,
  0xbe,
  0x6f,
  0x18,
  0x41,
  0xef,
  0x02,
  0xe2,
  0x38,
  0xeb,
  0xcd,
  0xba,
  0x2f,
  0xd9,
  0x3e,
  0x80,
  0x95,
  0x2e,
  0x00,
  0xcb,
  0xfa,
  0xd9,
  0xcd,
  0xdd,
  0x2f,
  0xfd,
  0x7e,
  0x71,
  0xfe,
  0x08,
  0x38,
  0x06,
  0xd9,
  0xcb,
  0x12,
  0xd9,
  0x18,
  0x20,
  0x01,
  0x00,
  0x02,
  0x7b,
  0xcd,
  0x8b,
  0x2f,
  0x5f,
  0x7a,
  0xcd,
  0x8b,
  0x2f,
  0x57,
  0xc5,
  0xd9,
  0xc1,
  0x10,
  0xf1,
  0x21,
  0xa1,
  0x5c,
  0x79,
  0xfd,
  0x4e,
  0x71,
  0x09,
  0x77,
  0xfd,
  0x34,
  0x71,
  0x18,
  0xd3,
  0xf5,
  0x21,
  0xa1,
  0x5c,
  0xfd,
  0x4e,
  0x71,
  0x06,
  0x00,
  0x09,
  0x41,
  0xf1,
  0x2b,
  0x7e,
  0xce,
  0x00,
  0x77,
  0xa7,
  0x28,
  0x05,
  0xfe,
  0x0a,
  0x3f,
  0x30,
  0x08,
  0x10,
  0xf1,
  0x36,
  0x01,
  0x04,
  0xfd,
  0x34,
  0x72,
  0xfd,
  0x70,
  0x71,
  0xef,
  0x02,
  0x38,
  0xd9,
  0xe1,
  0xd9,
  0xed,
  0x4b,
  0xab,
  0x5c,
  0x21,
  0xa1,
  0x5c,
  0x78,
  0xfe,
  0x09,
  0x38,
  0x04,
  0xfe,
  0xfc,
  0x38,
  0x26,
  0xa7,
  0xcc,
  0xef,
  0x15,
  0xaf,
  0x90,
  0xfa,
  0x52,
  0x2f,
  0x47,
  0x18,
  0x0c,
  0x79,
  0xa7,
  0x28,
  0x03,
  0x7e,
  0x23,
  0x0d,
  0xcd,
  0xef,
  0x15,
  0x10,
  0xf4,
  0x79,
  0xa7,
  0xc8,
  0x04,
  0x3e,
  0x2e,
  0xd7,
  0x3e,
  0x30,
  0x10,
  0xfb,
  0x41,
  0x18,
  0xe6,
  0x50,
  0x15,
  0x06,
  0x01,
  0xcd,
  0x4a,
  0x2f,
  0x3e,
  0x45,
  0xd7,
  0x4a,
  0x79,
  0xa7,
  0xf2,
  0x83,
  0x2f,
  0xed,
  0x44,
  0x4f,
  0x3e,
  0x2d,
  0x18,
  0x02,
  0x3e,
  0x2b,
  0xd7,
  0x06,
  0x00,
  0xc3,
  0x1b,
  0x1a,
  0xd5,
  0x6f,
  0x26,
  0x00,
  0x5d,
  0x54,
  0x29,
  0x29,
  0x19,
  0x29,
  0x59,
  0x19,
  0x4c,
  0x7d,
  0xd1,
  0xc9,
  0x7e,
  0x36,
  0x00,
  0xa7,
  0xc8,
  0x23,
  0xcb,
  0x7e,
  0xcb,
  0xfe,
  0x2b,
  0xc8,
  0xc5,
  0x01,
  0x05,
  0x00,
  0x09,
  0x41,
  0x4f,
  0x37,
  0x2b,
  0x7e,
  0x2f,
  0xce,
  0x00,
  0x77,
  0x10,
  0xf8,
  0x79,
  0xc1,
  0xc9,
  0xe5,
  0xf5,
  0x4e,
  0x23,
  0x46,
  0x77,
  0x23,
  0x79,
  0x4e,
  0xc5,
  0x23,
  0x4e,
  0x23,
  0x46,
  0xeb,
  0x57,
  0x5e,
  0xd5,
  0x23,
  0x56,
  0x23,
  0x5e,
  0xd5,
  0xd9,
  0xd1,
  0xe1,
  0xc1,
  0xd9,
  0x23,
  0x56,
  0x23,
  0x5e,
  0xf1,
  0xe1,
  0xc9,
  0xa7,
  0xc8,
  0xfe,
  0x21,
  0x30,
  0x16,
  0xc5,
  0x47,
  0xd9,
  0xcb,
  0x2d,
  0xcb,
  0x1a,
  0xcb,
  0x1b,
  0xd9,
  0xcb,
  0x1a,
  0xcb,
  0x1b,
  0x10,
  0xf2,
  0xc1,
  0xd0,
  0xcd,
  0x04,
  0x30,
  0xc0,
  0xd9,
  0xaf,
  0x2e,
  0x00,
  0x57,
  0x5d,
  0xd9,
  0x11,
  0x00,
  0x00,
  0xc9,
  0x1c,
  0xc0,
  0x14,
  0xc0,
  0xd9,
  0x1c,
  0x20,
  0x01,
  0x14,
  0xd9,
  0xc9,
  0xeb,
  0xcd,
  0x6e,
  0x34,
  0xeb,
  0x1a,
  0xb6,
  0x20,
  0x26,
  0xd5,
  0x23,
  0xe5,
  0x23,
  0x5e,
  0x23,
  0x56,
  0x23,
  0x23,
  0x23,
  0x7e,
  0x23,
  0x4e,
  0x23,
  0x46,
  0xe1,
  0xeb,
  0x09,
  0xeb,
  0x8e,
  0x0f,
  0xce,
  0x00,
  0x20,
  0x0b,
  0x9f,
  0x77,
  0x23,
  0x73,
  0x23,
  0x72,
  0x2b,
  0x2b,
  0x2b,
  0xd1,
  0xc9,
  0x2b,
  0xd1,
  0xcd,
  0x93,
  0x32,
  0xd9,
  0xe5,
  0xd9,
  0xd5,
  0xe5,
  0xcd,
  0x9b,
  0x2f,
  0x47,
  0xeb,
  0xcd,
  0x9b,
  0x2f,
  0x4f,
  0xb8,
  0x30,
  0x03,
  0x78,
  0x41,
  0xeb,
  0xf5,
  0x90,
  0xcd,
  0xba,
  0x2f,
  0xcd,
  0xdd,
  0x2f,
  0xf1,
  0xe1,
  0x77,
  0xe5,
  0x68,
  0x61,
  0x19,
  0xd9,
  0xeb,
  0xed,
  0x4a,
  0xeb,
  0x7c,
  0x8d,
  0x6f,
  0x1f,
  0xad,
  0xd9,
  0xeb,
  0xe1,
  0x1f,
  0x30,
  0x08,
  0x3e,
  0x01,
  0xcd,
  0xdd,
  0x2f,
  0x34,
  0x28,
  0x23,
  0xd9,
  0x7d,
  0xe6,
  0x80,
  0xd9,
  0x23,
  0x77,
  0x2b,
  0x28,
  0x1f,
  0x7b,
  0xed,
  0x44,
  0x3f,
  0x5f,
  0x7a,
  0x2f,
  0xce,
  0x00,
  0x57,
  0xd9,
  0x7b,
  0x2f,
  0xce,
  0x00,
  0x5f,
  0x7a,
  0x2f,
  0xce,
  0x00,
  0x30,
  0x07,
  0x1f,
  0xd9,
  0x34,
  0xca,
  0xad,
  0x31,
  0xd9,
  0x57,
  0xd9,
  0xaf,
  0xc3,
  0x55,
  0x31,
  0xc5,
  0x06,
  0x10,
  0x7c,
  0x4d,
  0x21,
  0x00,
  0x00,
  0x29,
  0x38,
  0x0a,
  0xcb,
  0x11,
  0x17,
  0x30,
  0x03,
  0x19,
  0x38,
  0x02,
  0x10,
  0xf3,
  0xc1,
  0xc9,
  0xcd,
  0xe9,
  0x34,
  0xd8,
  0x23,
  0xae,
  0xcb,
  0xfe,
  0x2b,
  0xc9,
  0x1a,
  0xb6,
  0x20,
  0x22,
  0xd5,
  0xe5,
  0xd5,
  0xcd,
  0x7f,
  0x2d,
  0xeb,
  0xe3,
  0x41,
  0xcd,
  0x7f,
  0x2d,
  0x78,
  0xa9,
  0x4f,
  0xe1,
  0xcd,
  0xa9,
  0x30,
  0xeb,
  0xe1,
  0x38,
  0x0a,
  0x7a,
  0xb3,
  0x20,
  0x01,
  0x4f,
  0xcd,
  0x8e,
  0x2d,
  0xd1,
  0xc9,
  0xd1,
  0xcd,
  0x93,
  0x32,
  0xaf,
  0xcd,
  0xc0,
  0x30,
  0xd8,
  0xd9,
  0xe5,
  0xd9,
  0xd5,
  0xeb,
  0xcd,
  0xc0,
  0x30,
  0xeb,
  0x38,
  0x5a,
  0xe5,
  0xcd,
  0xba,
  0x2f,
  0x78,
  0xa7,
  0xed,
  0x62,
  0xd9,
  0xe5,
  0xed,
  0x62,
  0xd9,
  0x06,
  0x21,
  0x18,
  0x11,
  0x30,
  0x05,
  0x19,
  0xd9,
  0xed,
  0x5a,
  0xd9,
  0xd9,
  0xcb,
  0x1c,
  0xcb,
  0x1d,
  0xd9,
  0xcb,
  0x1c,
  0xcb,
  0x1d,
  0xd9,
  0xcb,
  0x18,
  0xcb,
  0x19,
  0xd9,
  0xcb,
  0x19,
  0x1f,
  0x10,
  0xe4,
  0xeb,
  0xd9,
  0xeb,
  0xd9,
  0xc1,
  0xe1,
  0x78,
  0x81,
  0x20,
  0x01,
  0xa7,
  0x3d,
  0x3f,
  0x17,
  0x3f,
  0x1f,
  0xf2,
  0x46,
  0x31,
  0x30,
  0x68,
  0xa7,
  0x3c,
  0x20,
  0x08,
  0x38,
  0x06,
  0xd9,
  0xcb,
  0x7a,
  0xd9,
  0x20,
  0x5c,
  0x77,
  0xd9,
  0x78,
  0xd9,
  0x30,
  0x15,
  0x7e,
  0xa7,
  0x3e,
  0x80,
  0x28,
  0x01,
  0xaf,
  0xd9,
  0xa2,
  0xcd,
  0xfb,
  0x2f,
  0x07,
  0x77,
  0x38,
  0x2e,
  0x23,
  0x77,
  0x2b,
  0x18,
  0x29,
  0x06,
  0x20,
  0xd9,
  0xcb,
  0x7a,
  0xd9,
  0x20,
  0x12,
  0x07,
  0xcb,
  0x13,
  0xcb,
  0x12,
  0xd9,
  0xcb,
  0x13,
  0xcb,
  0x12,
  0xd9,
  0x35,
  0x28,
  0xd7,
  0x10,
  0xea,
  0x18,
  0xd7,
  0x17,
  0x30,
  0x0c,
  0xcd,
  0x04,
  0x30,
  0x20,
  0x07,
  0xd9,
  0x16,
  0x80,
  0xd9,
  0x34,
  0x28,
  0x18,
  0xe5,
  0x23,
  0xd9,
  0xd5,
  0xd9,
  0xc1,
  0x78,
  0x17,
  0xcb,
  0x16,
  0x1f,
  0x77,
  0x23,
  0x71,
  0x23,
  0x72,
  0x23,
  0x73,
  0xe1,
  0xd1,
  0xd9,
  0xe1,
  0xd9,
  0xc9,
  0xcf,
  0x05,
  0xcd,
  0x93,
  0x32,
  0xeb,
  0xaf,
  0xcd,
  0xc0,
  0x30,
  0x38,
  0xf4,
  0xeb,
  0xcd,
  0xc0,
  0x30,
  0xd8,
  0xd9,
  0xe5,
  0xd9,
  0xd5,
  0xe5,
  0xcd,
  0xba,
  0x2f,
  0xd9,
  0xe5,
  0x60,
  0x69,
  0xd9,
  0x61,
  0x68,
  0xaf,
  0x06,
  0xdf,
  0x18,
  0x10,
  0x17,
  0xcb,
  0x11,
  0xd9,
  0xcb,
  0x11,
  0xcb,
  0x10,
  0xd9,
  0x29,
  0xd9,
  0xed,
  0x6a,
  0xd9,
  0x38,
  0x10,
  0xed,
  0x52,
  0xd9,
  0xed,
  0x52,
  0xd9,
  0x30,
  0x0f,
  0x19,
  0xd9,
  0xed,
  0x5a,
  0xd9,
  0xa7,
  0x18,
  0x08,
  0xa7,
  0xed,
  0x52,
  0xd9,
  0xed,
  0x52,
  0xd9,
  0x37,
  0x04,
  0xfa,
  0xd2,
  0x31,
  0xf5,
  0x28,
  0xe1,
  0x5f,
  0x51,
  0xd9,
  0x59,
  0x50,
  0xf1,
  0xcb,
  0x18,
  0xf1,
  0xcb,
  0x18,
  0xd9,
  0xc1,
  0xe1,
  0x78,
  0x91,
  0xc3,
  0x3d,
  0x31,
  0x7e,
  0xa7,
  0xc8,
  0xfe,
  0x81,
  0x30,
  0x06,
  0x36,
  0x00,
  0x3e,
  0x20,
  0x18,
  0x51,
  0xfe,
  0x91,
  0x20,
  0x1a,
  0x23,
  0x23,
  0x23,
  0x3e,
  0x80,
  0xa6,
  0x2b,
  0xb6,
  0x2b,
  0x20,
  0x03,
  0x3e,
  0x80,
  0xae,
  0x2b,
  0x20,
  0x36,
  0x77,
  0x23,
  0x36,
  0xff,
  0x2b,
  0x3e,
  0x18,
  0x18,
  0x33,
  0x30,
  0x2c,
  0xd5,
  0x2f,
  0xc6,
  0x91,
  0x23,
  0x56,
  0x23,
  0x5e,
  0x2b,
  0x2b,
  0x0e,
  0x00,
  0xcb,
  0x7a,
  0x28,
  0x01,
  0x0d,
  0xcb,
  0xfa,
  0x06,
  0x08,
  0x90,
  0x80,
  0x38,
  0x04,
  0x5a,
  0x16,
  0x00,
  0x90,
  0x28,
  0x07,
  0x47,
  0xcb,
  0x3a,
  0xcb,
  0x1b,
  0x10,
  0xfa,
  0xcd,
  0x8e,
  0x2d,
  0xd1,
  0xc9,
  0x7e,
  0xd6,
  0xa0,
  0xf0,
  0xed,
  0x44,
  0xd5,
  0xeb,
  0x2b,
  0x47,
  0xcb,
  0x38,
  0xcb,
  0x38,
  0xcb,
  0x38,
  0x28,
  0x05,
  0x36,
  0x00,
  0x2b,
  0x10,
  0xfb,
  0xe6,
  0x07,
  0x28,
  0x09,
  0x47,
  0x3e,
  0xff,
  0xcb,
  0x27,
  0x10,
  0xfc,
  0xa6,
  0x77,
  0xeb,
  0xd1,
  0xc9,
  0xcd,
  0x96,
  0x32,
  0xeb,
  0x7e,
  0xa7,
  0xc0,
  0xd5,
  0xcd,
  0x7f,
  0x2d,
  0xaf,
  0x23,
  0x77,
  0x2b,
  0x77,
  0x06,
  0x91,
  0x7a,
  0xa7,
  0x20,
  0x08,
  0xb3,
  0x42,
  0x28,
  0x10,
  0x53,
  0x58,
  0x06,
  0x89,
  0xeb,
  0x05,
  0x29,
  0x30,
  0xfc,
  0xcb,
  0x09,
  0xcb,
  0x1c,
  0xcb,
  0x1d,
  0xeb,
  0x2b,
  0x73,
  0x2b,
  0x72,
  0x2b,
  0x70,
  0xd1,
  0xc9,
  0x00,
  0xb0,
  0x00,
  0x40,
  0xb0,
  0x00,
  0x01,
  0x30,
  0x00,
  0xf1,
  0x49,
  0x0f,
  0xda,
  0xa2,
  0x40,
  0xb0,
  0x00,
  0x0a,
  0x8f,
  0x36,
  0x3c,
  0x34,
  0xa1,
  0x33,
  0x0f,
  0x30,
  0xca,
  0x30,
  0xaf,
  0x31,
  0x51,
  0x38,
  0x1b,
  0x35,
  0x24,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x14,
  0x30,
  0x2d,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x3b,
  0x35,
  0x9c,
  0x35,
  0xde,
  0x35,
  0xbc,
  0x34,
  0x45,
  0x36,
  0x6e,
  0x34,
  0x69,
  0x36,
  0xde,
  0x35,
  0x74,
  0x36,
  0xb5,
  0x37,
  0xaa,
  0x37,
  0xda,
  0x37,
  0x33,
  0x38,
  0x43,
  0x38,
  0xe2,
  0x37,
  0x13,
  0x37,
  0xc4,
  0x36,
  0xaf,
  0x36,
  0x4a,
  0x38,
  0x92,
  0x34,
  0x6a,
  0x34,
  0xac,
  0x34,
  0xa5,
  0x34,
  0xb3,
  0x34,
  0x1f,
  0x36,
  0xc9,
  0x35,
  0x01,
  0x35,
  0xc0,
  0x33,
  0xa0,
  0x36,
  0x86,
  0x36,
  0xc6,
  0x33,
  0x7a,
  0x36,
  0x06,
  0x35,
  0xf9,
  0x34,
  0x9b,
  0x36,
  0x83,
  0x37,
  0x14,
  0x32,
  0xa2,
  0x33,
  0x4f,
  0x2d,
  0x97,
  0x32,
  0x49,
  0x34,
  0x1b,
  0x34,
  0x2d,
  0x34,
  0x0f,
  0x34,
  0xcd,
  0xbf,
  0x35,
  0x78,
  0x32,
  0x67,
  0x5c,
  0xd9,
  0xe3,
  0xd9,
  0xed,
  0x53,
  0x65,
  0x5c,
  0xd9,
  0x7e,
  0x23,
  0xe5,
  0xa7,
  0xf2,
  0x80,
  0x33,
  0x57,
  0xe6,
  0x60,
  0x0f,
  0x0f,
  0x0f,
  0x0f,
  0xc6,
  0x7c,
  0x6f,
  0x7a,
  0xe6,
  0x1f,
  0x18,
  0x0e,
  0xfe,
  0x18,
  0x30,
  0x08,
  0xd9,
  0x01,
  0xfb,
  0xff,
  0x54,
  0x5d,
  0x09,
  0xd9,
  0x07,
  0x6f,
  0x11,
  0xd7,
  0x32,
  0x26,
  0x00,
  0x19,
  0x5e,
  0x23,
  0x56,
  0x21,
  0x65,
  0x33,
  0xe3,
  0xd5,
  0xd9,
  0xed,
  0x4b,
  0x66,
  0x5c,
  0xc9,
  0xf1,
  0x3a,
  0x67,
  0x5c,
  0xd9,
  0x18,
  0xc3,
  0xd5,
  0xe5,
  0x01,
  0x05,
  0x00,
  0xcd,
  0x05,
  0x1f,
  0xe1,
  0xd1,
  0xc9,
  0xed,
  0x5b,
  0x65,
  0x5c,
  0xcd,
  0xc0,
  0x33,
  0xed,
  0x53,
  0x65,
  0x5c,
  0xc9,
  0xcd,
  0xa9,
  0x33,
  0xed,
  0xb0,
  0xc9,
  0x62,
  0x6b,
  0xcd,
  0xa9,
  0x33,
  0xd9,
  0xe5,
  0xd9,
  0xe3,
  0xc5,
  0x7e,
  0xe6,
  0xc0,
  0x07,
  0x07,
  0x4f,
  0x0c,
  0x7e,
  0xe6,
  0x3f,
  0x20,
  0x02,
  0x23,
  0x7e,
  0xc6,
  0x50,
  0x12,
  0x3e,
  0x05,
  0x91,
  0x23,
  0x13,
  0x06,
  0x00,
  0xed,
  0xb0,
  0xc1,
  0xe3,
  0xd9,
  0xe1,
  0xd9,
  0x47,
  0xaf,
  0x05,
  0xc8,
  0x12,
  0x13,
  0x18,
  0xfa,
  0xa7,
  0xc8,
  0xf5,
  0xd5,
  0x11,
  0x00,
  0x00,
  0xcd,
  0xc8,
  0x33,
  0xd1,
  0xf1,
  0x3d,
  0x18,
  0xf2,
  0x4f,
  0x07,
  0x07,
  0x81,
  0x4f,
  0x06,
  0x00,
  0x09,
  0xc9,
  0xd5,
  0x2a,
  0x68,
  0x5c,
  0xcd,
  0x06,
  0x34,
  0xcd,
  0xc0,
  0x33,
  0xe1,
  0xc9,
  0x62,
  0x6b,
  0xd9,
  0xe5,
  0x21,
  0xc5,
  0x32,
  0xd9,
  0xcd,
  0xf7,
  0x33,
  0xcd,
  0xc8,
  0x33,
  0xd9,
  0xe1,
  0xd9,
  0xc9,
  0xe5,
  0xeb,
  0x2a,
  0x68,
  0x5c,
  0xcd,
  0x06,
  0x34,
  0xeb,
  0xcd,
  0xc0,
  0x33,
  0xeb,
  0xe1,
  0xc9,
  0x06,
  0x05,
  0x1a,
  0x4e,
  0xeb,
  0x12,
  0x71,
  0x23,
  0x13,
  0x10,
  0xf7,
  0xeb,
  0xc9,
  0x47,
  0xcd,
  0x5e,
  0x33,
  0x31,
  0x0f,
  0xc0,
  0x02,
  0xa0,
  0xc2,
  0x31,
  0xe0,
  0x04,
  0xe2,
  0xc1,
  0x03,
  0x38,
  0xcd,
  0xc6,
  0x33,
  0xcd,
  0x62,
  0x33,
  0x0f,
  0x01,
  0xc2,
  0x02,
  0x35,
  0xee,
  0xe1,
  0x03,
  0x38,
  0xc9,
  0x06,
  0xff,
  0x18,
  0x06,
  0xcd,
  0xe9,
  0x34,
  0xd8,
  0x06,
  0x00,
  0x7e,
  0xa7,
  0x28,
  0x0b,
  0x23,
  0x78,
  0xe6,
  0x80,
  0xb6,
  0x17,
  0x3f,
  0x1f,
  0x77,
  0x2b,
  0xc9,
  0xd5,
  0xe5,
  0xcd,
  0x7f,
  0x2d,
  0xe1,
  0x78,
  0xb1,
  0x2f,
  0x4f,
  0xcd,
  0x8e,
  0x2d,
  0xd1,
  0xc9,
  0xcd,
  0xe9,
  0x34,
  0xd8,
  0xd5,
  0x11,
  0x01,
  0x00,
  0x23,
  0xcb,
  0x16,
  0x2b,
  0x9f,
  0x4f,
  0xcd,
  0x8e,
  0x2d,
  0xd1,
  0xc9,
  0xcd,
  0x99,
  0x1e,
  0xed,
  0x78,
  0x18,
  0x04,
  0xcd,
  0x99,
  0x1e,
  0x0a,
  0xc3,
  0x28,
  0x2d,
  0xcd,
  0x99,
  0x1e,
  0x21,
  0x2b,
  0x2d,
  0xe5,
  0xc5,
  0xc9,
  0xcd,
  0xf1,
  0x2b,
  0x0b,
  0x78,
  0xb1,
  0x20,
  0x23,
  0x1a,
  0xcd,
  0x8d,
  0x2c,
  0x38,
  0x09,
  0xd6,
  0x90,
  0x38,
  0x19,
  0xfe,
  0x15,
  0x30,
  0x15,
  0x3c,
  0x3d,
  0x87,
  0x87,
  0x87,
  0xfe,
  0xa8,
  0x30,
  0x0c,
  0xed,
  0x4b,
  0x7b,
  0x5c,
  0x81,
  0x4f,
  0x30,
  0x01,
  0x04,
  0xc3,
  0x2b,
  0x2d,
  0xcf,
  0x09,
  0xe5,
  0xc5,
  0x47,
  0x7e,
  0x23,
  0xb6,
  0x23,
  0xb6,
  0x23,
  0xb6,
  0x78,
  0xc1,
  0xe1,
  0xc0,
  0x37,
  0xc9,
  0xcd,
  0xe9,
  0x34,
  0xd8,
  0x3e,
  0xff,
  0x18,
  0x06,
  0xcd,
  0xe9,
  0x34,
  0x18,
  0x05,
  0xaf,
  0x23,
  0xae,
  0x2b,
  0x07,
  0xe5,
  0x3e,
  0x00,
  0x77,
  0x23,
  0x77,
  0x23,
  0x17,
  0x77,
  0x1f,
  0x23,
  0x77,
  0x23,
  0x77,
  0xe1,
  0xc9,
  0xeb,
  0xcd,
  0xe9,
  0x34,
  0xeb,
  0xd8,
  0x37,
  0x18,
  0xe7,
  0xeb,
  0xcd,
  0xe9,
  0x34,
  0xeb,
  0xd0,
  0xa7,
  0x18,
  0xde,
  0xeb,
  0xcd,
  0xe9,
  0x34,
  0xeb,
  0xd0,
  0xd5,
  0x1b,
  0xaf,
  0x12,
  0x1b,
  0x12,
  0xd1,
  0xc9,
  0x78,
  0xd6,
  0x08,
  0xcb,
  0x57,
  0x20,
  0x01,
  0x3d,
  0x0f,
  0x30,
  0x08,
  0xf5,
  0xe5,
  0xcd,
  0x3c,
  0x34,
  0xd1,
  0xeb,
  0xf1,
  0xcb,
  0x57,
  0x20,
  0x07,
  0x0f,
  0xf5,
  0xcd,
  0x0f,
  0x30,
  0x18,
  0x33,
  0x0f,
  0xf5,
  0xcd,
  0xf1,
  0x2b,
  0xd5,
  0xc5,
  0xcd,
  0xf1,
  0x2b,
  0xe1,
  0x7c,
  0xb5,
  0xe3,
  0x78,
  0x20,
  0x0b,
  0xb1,
  0xc1,
  0x28,
  0x04,
  0xf1,
  0x3f,
  0x18,
  0x16,
  0xf1,
  0x18,
  0x13,
  0xb1,
  0x28,
  0x0d,
  0x1a,
  0x96,
  0x38,
  0x09,
  0x20,
  0xed,
  0x0b,
  0x13,
  0x23,
  0xe3,
  0x2b,
  0x18,
  0xdf,
  0xc1,
  0xf1,
  0xa7,
  0xf5,
  0xef,
  0xa0,
  0x38,
  0xf1,
  0xf5,
  0xdc,
  0x01,
  0x35,
  0xf1,
  0xf5,
  0xd4,
  0xf9,
  0x34,
  0xf1,
  0x0f,
  0xd4,
  0x01,
  0x35,
  0xc9,
  0xcd,
  0xf1,
  0x2b,
  0xd5,
  0xc5,
  0xcd,
  0xf1,
  0x2b,
  0xe1,
  0xe5,
  0xd5,
  0xc5,
  0x09,
  0x44,
  0x4d,
  0xf7,
  0xcd,
  0xb2,
  0x2a,
  0xc1,
  0xe1,
  0x78,
  0xb1,
  0x28,
  0x02,
  0xed,
  0xb0,
  0xc1,
  0xe1,
  0x78,
  0xb1,
  0x28,
  0x02,
  0xed,
  0xb0,
  0x2a,
  0x65,
  0x5c,
  0x11,
  0xfb,
  0xff,
  0xe5,
  0x19,
  0xd1,
  0xc9,
  0xcd,
  0xd5,
  0x2d,
  0x38,
  0x0e,
  0x20,
  0x0c,
  0xf5,
  0x01,
  0x01,
  0x00,
  0xf7,
  0xf1,
  0x12,
  0xcd,
  0xb2,
  0x2a,
  0xeb,
  0xc9,
  0xcf,
  0x0a,
  0x2a,
  0x5d,
  0x5c,
  0xe5,
  0x78,
  0xc6,
  0xe3,
  0x9f,
  0xf5,
  0xcd,
  0xf1,
  0x2b,
  0xd5,
  0x03,
  0xf7,
  0xe1,
  0xed,
  0x53,
  0x5d,
  0x5c,
  0xd5,
  0xed,
  0xb0,
  0xeb,
  0x2b,
  0x36,
  0x0d,
  0xfd,
  0xcb,
  0x01,
  0xbe,
  0xcd,
  0xfb,
  0x24,
  0xdf,
  0xfe,
  0x0d,
  0x20,
  0x07,
  0xe1,
  0xf1,
  0xfd,
  0xae,
  0x01,
  0xe6,
  0x40,
  0xc2,
  0x8a,
  0x1c,
  0x22,
  0x5d,
  0x5c,
  0xfd,
  0xcb,
  0x01,
  0xfe,
  0xcd,
  0xfb,
  0x24,
  0xe1,
  0x22,
  0x5d,
  0x5c,
  0x18,
  0xa0,
  0x01,
  0x01,
  0x00,
  0xf7,
  0x22,
  0x5b,
  0x5c,
  0xe5,
  0x2a,
  0x51,
  0x5c,
  0xe5,
  0x3e,
  0xff,
  0xcd,
  0x01,
  0x16,
  0xcd,
  0xe3,
  0x2d,
  0xe1,
  0xcd,
  0x15,
  0x16,
  0xd1,
  0x2a,
  0x5b,
  0x5c,
  0xa7,
  0xed,
  0x52,
  0x44,
  0x4d,
  0xcd,
  0xb2,
  0x2a,
  0xeb,
  0xc9,
  0xcd,
  0x94,
  0x1e,
  0xfe,
  0x10,
  0xd2,
  0x9f,
  0x1e,
  0x2a,
  0x51,
  0x5c,
  0xe5,
  0xcd,
  0x01,
  0x16,
  0xcd,
  0xe6,
  0x15,
  0x01,
  0x00,
  0x00,
  0x30,
  0x03,
  0x0c,
  0xf7,
  0x12,
  0xcd,
  0xb2,
  0x2a,
  0xe1,
  0xcd,
  0x15,
  0x16,
  0xc3,
  0xbf,
  0x35,
  0xcd,
  0xf1,
  0x2b,
  0x78,
  0xb1,
  0x28,
  0x01,
  0x1a,
  0xc3,
  0x28,
  0x2d,
  0xcd,
  0xf1,
  0x2b,
  0xc3,
  0x2b,
  0x2d,
  0xd9,
  0xe5,
  0x21,
  0x67,
  0x5c,
  0x35,
  0xe1,
  0x20,
  0x04,
  0x23,
  0xd9,
  0xc9,
  0xd9,
  0x5e,
  0x7b,
  0x17,
  0x9f,
  0x57,
  0x19,
  0xd9,
  0xc9,
  0x13,
  0x13,
  0x1a,
  0x1b,
  0x1b,
  0xa7,
  0x20,
  0xef,
  0xd9,
  0x23,
  0xd9,
  0xc9,
  0xf1,
  0xd9,
  0xe3,
  0xd9,
  0xc9,
  0xef,
  0xc0,
  0x02,
  0x31,
  0xe0,
  0x05,
  0x27,
  0xe0,
  0x01,
  0xc0,
  0x04,
  0x03,
  0xe0,
  0x38,
  0xc9,
  0xef,
  0x31,
  0x36,
  0x00,
  0x04,
  0x3a,
  0x38,
  0xc9,
  0x31,
  0x3a,
  0xc0,
  0x03,
  0xe0,
  0x01,
  0x30,
  0x00,
  0x03,
  0xa1,
  0x03,
  0x38,
  0xc9,
  0xef,
  0x3d,
  0x34,
  0xf1,
  0x38,
  0xaa,
  0x3b,
  0x29,
  0x04,
  0x31,
  0x27,
  0xc3,
  0x03,
  0x31,
  0x0f,
  0xa1,
  0x03,
  0x88,
  0x13,
  0x36,
  0x58,
  0x65,
  0x66,
  0x9d,
  0x78,
  0x65,
  0x40,
  0xa2,
  0x60,
  0x32,
  0xc9,
  0xe7,
  0x21,
  0xf7,
  0xaf,
  0x24,
  0xeb,
  0x2f,
  0xb0,
  0xb0,
  0x14,
  0xee,
  0x7e,
  0xbb,
  0x94,
  0x58,
  0xf1,
  0x3a,
  0x7e,
  0xf8,
  0xcf,
  0xe3,
  0x38,
  0xcd,
  0xd5,
  0x2d,
  0x20,
  0x07,
  0x38,
  0x03,
  0x86,
  0x30,
  0x09,
  0xcf,
  0x05,
  0x38,
  0x07,
  0x96,
  0x30,
  0x04,
  0xed,
  0x44,
  0x77,
  0xc9,
  0xef,
  0x02,
  0xa0,
  0x38,
  0xc9,
  0xef,
  0x3d,
  0x31,
  0x37,
  0x00,
  0x04,
  0x38,
  0xcf,
  0x09,
  0xa0,
  0x02,
  0x38,
  0x7e,
  0x36,
  0x80,
  0xcd,
  0x28,
  0x2d,
  0xef,
  0x34,
  0x38,
  0x00,
  0x03,
  0x01,
  0x31,
  0x34,
  0xf0,
  0x4c,
  0xcc,
  0xcc,
  0xcd,
  0x03,
  0x37,
  0x00,
  0x08,
  0x01,
  0xa1,
  0x03,
  0x01,
  0x38,
  0x34,
  0xef,
  0x01,
  0x34,
  0xf0,
  0x31,
  0x72,
  0x17,
  0xf8,
  0x04,
  0x01,
  0xa2,
  0x03,
  0xa2,
  0x03,
  0x31,
  0x34,
  0x32,
  0x20,
  0x04,
  0xa2,
  0x03,
  0x8c,
  0x11,
  0xac,
  0x14,
  0x09,
  0x56,
  0xda,
  0xa5,
  0x59,
  0x30,
  0xc5,
  0x5c,
  0x90,
  0xaa,
  0x9e,
  0x70,
  0x6f,
  0x61,
  0xa1,
  0xcb,
  0xda,
  0x96,
  0xa4,
  0x31,
  0x9f,
  0xb4,
  0xe7,
  0xa0,
  0xfe,
  0x5c,
  0xfc,
  0xea,
  0x1b,
  0x43,
  0xca,
  0x36,
  0xed,
  0xa7,
  0x9c,
  0x7e,
  0x5e,
  0xf0,
  0x6e,
  0x23,
  0x80,
  0x93,
  0x04,
  0x0f,
  0x38,
  0xc9,
  0xef,
  0x3d,
  0x34,
  0xee,
  0x22,
  0xf9,
  0x83,
  0x6e,
  0x04,
  0x31,
  0xa2,
  0x0f,
  0x27,
  0x03,
  0x31,
  0x0f,
  0x31,
  0x0f,
  0x31,
  0x2a,
  0xa1,
  0x03,
  0x31,
  0x37,
  0xc0,
  0x00,
  0x04,
  0x02,
  0x38,
  0xc9,
  0xa1,
  0x03,
  0x01,
  0x36,
  0x00,
  0x02,
  0x1b,
  0x38,
  0xc9,
  0xef,
  0x39,
  0x2a,
  0xa1,
  0x03,
  0xe0,
  0x00,
  0x06,
  0x1b,
  0x33,
  0x03,
  0xef,
  0x39,
  0x31,
  0x31,
  0x04,
  0x31,
  0x0f,
  0xa1,
  0x03,
  0x86,
  0x14,
  0xe6,
  0x5c,
  0x1f,
  0x0b,
  0xa3,
  0x8f,
  0x38,
  0xee,
  0xe9,
  0x15,
  0x63,
  0xbb,
  0x23,
  0xee,
  0x92,
  0x0d,
  0xcd,
  0xed,
  0xf1,
  0x23,
  0x5d,
  0x1b,
  0xea,
  0x04,
  0x38,
  0xc9,
  0xef,
  0x31,
  0x1f,
  0x01,
  0x20,
  0x05,
  0x38,
  0xc9,
  0xcd,
  0x97,
  0x32,
  0x7e,
  0xfe,
  0x81,
  0x38,
  0x0e,
  0xef,
  0xa1,
  0x1b,
  0x01,
  0x05,
  0x31,
  0x36,
  0xa3,
  0x01,
  0x00,
  0x06,
  0x1b,
  0x33,
  0x03,
  0xef,
  0xa0,
  0x01,
  0x31,
  0x31,
  0x04,
  0x31,
  0x0f,
  0xa1,
  0x03,
  0x8c,
  0x10,
  0xb2,
  0x13,
  0x0e,
  0x55,
  0xe4,
  0x8d,
  0x58,
  0x39,
  0xbc,
  0x5b,
  0x98,
  0xfd,
  0x9e,
  0x00,
  0x36,
  0x75,
  0xa0,
  0xdb,
  0xe8,
  0xb4,
  0x63,
  0x42,
  0xc4,
  0xe6,
  0xb5,
  0x09,
  0x36,
  0xbe,
  0xe9,
  0x36,
  0x73,
  0x1b,
  0x5d,
  0xec,
  0xd8,
  0xde,
  0x63,
  0xbe,
  0xf0,
  0x61,
  0xa1,
  0xb3,
  0x0c,
  0x04,
  0x0f,
  0x38,
  0xc9,
  0xef,
  0x31,
  0x31,
  0x04,
  0xa1,
  0x03,
  0x1b,
  0x28,
  0xa1,
  0x0f,
  0x05,
  0x24,
  0x31,
  0x0f,
  0x38,
  0xc9,
  0xef,
  0x22,
  0xa3,
  0x03,
  0x1b,
  0x38,
  0xc9,
  0xef,
  0x31,
  0x30,
  0x00,
  0x1e,
  0xa2,
  0x38,
  0xef,
  0x01,
  0x31,
  0x30,
  0x00,
  0x07,
  0x25,
  0x04,
  0x38,
  0xc3,
  0xc4,
  0x36,
  0x02,
  0x31,
  0x30,
  0x00,
  0x09,
  0xa0,
  0x01,
  0x37,
  0x00,
  0x06,
  0xa1,
  0x01,
  0x05,
  0x02,
  0xa1,
  0x38,
  0xc9,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0xff,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x10,
  0x10,
  0x10,
  0x10,
  0x00,
  0x10,
  0x00,
  0x00,
  0x24,
  0x24,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x24,
  0x7e,
  0x24,
  0x24,
  0x7e,
  0x24,
  0x00,
  0x00,
  0x08,
  0x3e,
  0x28,
  0x3e,
  0x0a,
  0x3e,
  0x08,
  0x00,
  0x62,
  0x64,
  0x08,
  0x10,
  0x26,
  0x46,
  0x00,
  0x00,
  0x10,
  0x28,
  0x10,
  0x2a,
  0x44,
  0x3a,
  0x00,
  0x00,
  0x08,
  0x10,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x04,
  0x08,
  0x08,
  0x08,
  0x08,
  0x04,
  0x00,
  0x00,
  0x20,
  0x10,
  0x10,
  0x10,
  0x10,
  0x20,
  0x00,
  0x00,
  0x00,
  0x14,
  0x08,
  0x3e,
  0x08,
  0x14,
  0x00,
  0x00,
  0x00,
  0x08,
  0x08,
  0x3e,
  0x08,
  0x08,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x08,
  0x08,
  0x10,
  0x00,
  0x00,
  0x00,
  0x00,
  0x3e,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x18,
  0x18,
  0x00,
  0x00,
  0x00,
  0x02,
  0x04,
  0x08,
  0x10,
  0x20,
  0x00,
  0x00,
  0x3c,
  0x46,
  0x4a,
  0x52,
  0x62,
  0x3c,
  0x00,
  0x00,
  0x18,
  0x28,
  0x08,
  0x08,
  0x08,
  0x3e,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x02,
  0x3c,
  0x40,
  0x7e,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x0c,
  0x02,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x08,
  0x18,
  0x28,
  0x48,
  0x7e,
  0x08,
  0x00,
  0x00,
  0x7e,
  0x40,
  0x7c,
  0x02,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x3c,
  0x40,
  0x7c,
  0x42,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x7e,
  0x02,
  0x04,
  0x08,
  0x10,
  0x10,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x3c,
  0x42,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x42,
  0x3e,
  0x02,
  0x3c,
  0x00,
  0x00,
  0x00,
  0x00,
  0x10,
  0x00,
  0x00,
  0x10,
  0x00,
  0x00,
  0x00,
  0x10,
  0x00,
  0x00,
  0x10,
  0x10,
  0x20,
  0x00,
  0x00,
  0x04,
  0x08,
  0x10,
  0x08,
  0x04,
  0x00,
  0x00,
  0x00,
  0x00,
  0x3e,
  0x00,
  0x3e,
  0x00,
  0x00,
  0x00,
  0x00,
  0x10,
  0x08,
  0x04,
  0x08,
  0x10,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x04,
  0x08,
  0x00,
  0x08,
  0x00,
  0x00,
  0x3c,
  0x4a,
  0x56,
  0x5e,
  0x40,
  0x3c,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x42,
  0x7e,
  0x42,
  0x42,
  0x00,
  0x00,
  0x7c,
  0x42,
  0x7c,
  0x42,
  0x42,
  0x7c,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x40,
  0x40,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x78,
  0x44,
  0x42,
  0x42,
  0x44,
  0x78,
  0x00,
  0x00,
  0x7e,
  0x40,
  0x7c,
  0x40,
  0x40,
  0x7e,
  0x00,
  0x00,
  0x7e,
  0x40,
  0x7c,
  0x40,
  0x40,
  0x40,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x40,
  0x4e,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x42,
  0x42,
  0x7e,
  0x42,
  0x42,
  0x42,
  0x00,
  0x00,
  0x3e,
  0x08,
  0x08,
  0x08,
  0x08,
  0x3e,
  0x00,
  0x00,
  0x02,
  0x02,
  0x02,
  0x42,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x44,
  0x48,
  0x70,
  0x48,
  0x44,
  0x42,
  0x00,
  0x00,
  0x40,
  0x40,
  0x40,
  0x40,
  0x40,
  0x7e,
  0x00,
  0x00,
  0x42,
  0x66,
  0x5a,
  0x42,
  0x42,
  0x42,
  0x00,
  0x00,
  0x42,
  0x62,
  0x52,
  0x4a,
  0x46,
  0x42,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x42,
  0x42,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x7c,
  0x42,
  0x42,
  0x7c,
  0x40,
  0x40,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x42,
  0x52,
  0x4a,
  0x3c,
  0x00,
  0x00,
  0x7c,
  0x42,
  0x42,
  0x7c,
  0x44,
  0x42,
  0x00,
  0x00,
  0x3c,
  0x40,
  0x3c,
  0x02,
  0x42,
  0x3c,
  0x00,
  0x00,
  0xfe,
  0x10,
  0x10,
  0x10,
  0x10,
  0x10,
  0x00,
  0x00,
  0x42,
  0x42,
  0x42,
  0x42,
  0x42,
  0x3c,
  0x00,
  0x00,
  0x42,
  0x42,
  0x42,
  0x42,
  0x24,
  0x18,
  0x00,
  0x00,
  0x42,
  0x42,
  0x42,
  0x42,
  0x5a,
  0x24,
  0x00,
  0x00,
  0x42,
  0x24,
  0x18,
  0x18,
  0x24,
  0x42,
  0x00,
  0x00,
  0x82,
  0x44,
  0x28,
  0x10,
  0x10,
  0x10,
  0x00,
  0x00,
  0x7e,
  0x04,
  0x08,
  0x10,
  0x20,
  0x7e,
  0x00,
  0x00,
  0x0e,
  0x08,
  0x08,
  0x08,
  0x08,
  0x0e,
  0x00,
  0x00,
  0x00,
  0x40,
  0x20,
  0x10,
  0x08,
  0x04,
  0x00,
  0x00,
  0x70,
  0x10,
  0x10,
  0x10,
  0x10,
  0x70,
  0x00,
  0x00,
  0x10,
  0x38,
  0x54,
  0x10,
  0x10,
  0x10,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0xff,
  0x00,
  0x1c,
  0x22,
  0x78,
  0x20,
  0x20,
  0x7e,
  0x00,
  0x00,
  0x00,
  0x38,
  0x04,
  0x3c,
  0x44,
  0x3c,
  0x00,
  0x00,
  0x20,
  0x20,
  0x3c,
  0x22,
  0x22,
  0x3c,
  0x00,
  0x00,
  0x00,
  0x1c,
  0x20,
  0x20,
  0x20,
  0x1c,
  0x00,
  0x00,
  0x04,
  0x04,
  0x3c,
  0x44,
  0x44,
  0x3c,
  0x00,
  0x00,
  0x00,
  0x38,
  0x44,
  0x78,
  0x40,
  0x3c,
  0x00,
  0x00,
  0x0c,
  0x10,
  0x18,
  0x10,
  0x10,
  0x10,
  0x00,
  0x00,
  0x00,
  0x3c,
  0x44,
  0x44,
  0x3c,
  0x04,
  0x38,
  0x00,
  0x40,
  0x40,
  0x78,
  0x44,
  0x44,
  0x44,
  0x00,
  0x00,
  0x10,
  0x00,
  0x30,
  0x10,
  0x10,
  0x38,
  0x00,
  0x00,
  0x04,
  0x00,
  0x04,
  0x04,
  0x04,
  0x24,
  0x18,
  0x00,
  0x20,
  0x28,
  0x30,
  0x30,
  0x28,
  0x24,
  0x00,
  0x00,
  0x10,
  0x10,
  0x10,
  0x10,
  0x10,
  0x0c,
  0x00,
  0x00,
  0x00,
  0x68,
  0x54,
  0x54,
  0x54,
  0x54,
  0x00,
  0x00,
  0x00,
  0x78,
  0x44,
  0x44,
  0x44,
  0x44,
  0x00,
  0x00,
  0x00,
  0x38,
  0x44,
  0x44,
  0x44,
  0x38,
  0x00,
  0x00,
  0x00,
  0x78,
  0x44,
  0x44,
  0x78,
  0x40,
  0x40,
  0x00,
  0x00,
  0x3c,
  0x44,
  0x44,
  0x3c,
  0x04,
  0x06,
  0x00,
  0x00,
  0x1c,
  0x20,
  0x20,
  0x20,
  0x20,
  0x00,
  0x00,
  0x00,
  0x38,
  0x40,
  0x38,
  0x04,
  0x78,
  0x00,
  0x00,
  0x10,
  0x38,
  0x10,
  0x10,
  0x10,
  0x0c,
  0x00,
  0x00,
  0x00,
  0x44,
  0x44,
  0x44,
  0x44,
  0x38,
  0x00,
  0x00,
  0x00,
  0x44,
  0x44,
  0x28,
  0x28,
  0x10,
  0x00,
  0x00,
  0x00,
  0x44,
  0x54,
  0x54,
  0x54,
  0x28,
  0x00,
  0x00,
  0x00,
  0x44,
  0x28,
  0x10,
  0x28,
  0x44,
  0x00,
  0x00,
  0x00,
  0x44,
  0x44,
  0x44,
  0x3c,
  0x04,
  0x38,
  0x00,
  0x00,
  0x7c,
  0x08,
  0x10,
  0x20,
  0x7c,
  0x00,
  0x00,
  0x0e,
  0x08,
  0x30,
  0x08,
  0x08,
  0x0e,
  0x00,
  0x00,
  0x08,
  0x08,
  0x08,
  0x08,
  0x08,
  0x08,
  0x00,
  0x00,
  0x70,
  0x10,
  0x0c,
  0x10,
  0x10,
  0x70,
  0x00,
  0x00,
  0x14,
  0x28,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x3c,
  0x42,
  0x99,
  0xa1,
  0xa1,
  0x99,
  0x42,
  0x3c,
];
